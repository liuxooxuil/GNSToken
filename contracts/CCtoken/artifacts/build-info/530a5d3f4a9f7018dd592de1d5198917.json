{
	"id": "530a5d3f4a9f7018dd592de1d5198917",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CCtoken/ccToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract CSYDToken is ERC20, Ownable {\r\n    uint256 public constant TOTAL_SUPPLY = 150_000_000 * 10**18; // 1.5亿枚\r\n    uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days; // 团队锁仓3年\r\n    uint256 public initialPrice;\r\n\r\n    address[] private teamAddresses;\r\n    uint256 public teamLockedUntil;\r\n\r\n    constructor(address[] memory _teamAddresses)\r\n        ERC20(\"csyd\", \"CSYD\")\r\n        Ownable(msg.sender) // 调用 Ownable 的构造函数\r\n    {\r\n        require(_teamAddresses.length > 0, \"At least one team address required\");\r\n        teamAddresses = _teamAddresses;\r\n\r\n        initialPrice = 13 * 10**16; // 0.13美元\r\n\r\n        _mint(msg.sender, TOTAL_SUPPLY * 80 / 100); // 80%流通\r\n        for (uint256 i = 0; i < teamAddresses.length; i++) {\r\n            _mint(teamAddresses[i], TOTAL_SUPPLY * 10 / 100 / teamAddresses.length); // 10%团队\r\n        }\r\n        _mint(address(this), TOTAL_SUPPLY * 10 / 100); // 10%资金池\r\n\r\n        teamLockedUntil = block.timestamp + TEAM_LOCK_PERIOD; // 锁仓设置\r\n    }\r\n\r\n    modifier teamLocked() {\r\n        require(block.timestamp >= teamLockedUntil, \"Team tokens are locked\");\r\n        _;\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override teamLocked returns (bool) {\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked returns (bool) {\r\n        return super.transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    function getInitialPrice() public view returns (uint256) {\r\n        return initialPrice; // 返回初始价格\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/CCtoken/ccToken.sol": {
				"CSYDToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_teamAddresses",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TEAM_LOCK_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getInitialPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamLockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCtoken/ccToken.sol\":279:1933  contract CSYDToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CCtoken/ccToken.sol\":597:1319  constructor(address[] memory _teamAddresses)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CCtoken/ccToken.sol\":690:700  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x6373796400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4353594400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":784:785  0 */\n  0x00\n    /* \"contracts/CCtoken/ccToken.sol\":760:774  _teamAddresses */\n  dup2\n    /* \"contracts/CCtoken/ccToken.sol\":760:781  _teamAddresses.length */\n  mload\n    /* \"contracts/CCtoken/ccToken.sol\":760:785  _teamAddresses.length > 0 */\n  gt\n    /* \"contracts/CCtoken/ccToken.sol\":752:824  require(_teamAddresses.length > 0, \"At least one team address required\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CCtoken/ccToken.sol\":851:865  _teamAddresses */\n  dup1\n    /* \"contracts/CCtoken/ccToken.sol\":835:848  teamAddresses */\n  0x07\n    /* \"contracts/CCtoken/ccToken.sol\":835:865  teamAddresses = _teamAddresses */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":893:904  13 * 10**16 */\n  0x01cdda4faccd0000\n    /* \"contracts/CCtoken/ccToken.sol\":878:890  initialPrice */\n  0x06\n    /* \"contracts/CCtoken/ccToken.sol\":878:904  initialPrice = 13 * 10**16 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":931:973  _mint(msg.sender, TOTAL_SUPPLY * 80 / 100) */\n  tag_23\n    /* \"contracts/CCtoken/ccToken.sol\":937:947  msg.sender */\n  caller\n    /* \"contracts/CCtoken/ccToken.sol\":969:972  100 */\n  0x64\n    /* \"contracts/CCtoken/ccToken.sol\":964:966  80 */\n  0x50\n    /* \"contracts/CCtoken/ccToken.sol\":362:382  150_000_000 * 10**18 */\n  0x7c13bc4b2c133c56000000\n    /* \"contracts/CCtoken/ccToken.sol\":949:966  TOTAL_SUPPLY * 80 */\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"contracts/CCtoken/ccToken.sol\":949:972  TOTAL_SUPPLY * 80 / 100 */\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"contracts/CCtoken/ccToken.sol\":931:936  _mint */\n  shl(0x20, tag_28)\n    /* \"contracts/CCtoken/ccToken.sol\":931:973  _mint(msg.sender, TOTAL_SUPPLY * 80 / 100) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/CCtoken/ccToken.sol\":1002:1011  uint256 i */\n  0x00\n    /* \"contracts/CCtoken/ccToken.sol\":1014:1015  0 */\n  0x00\n    /* \"contracts/CCtoken/ccToken.sol\":1002:1015  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":997:1159  for (uint256 i = 0; i < teamAddresses.length; i++) {... */\ntag_29:\n    /* \"contracts/CCtoken/ccToken.sol\":1021:1034  teamAddresses */\n  0x07\n    /* \"contracts/CCtoken/ccToken.sol\":1021:1041  teamAddresses.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":1017:1018  i */\n  dup2\n    /* \"contracts/CCtoken/ccToken.sol\":1017:1041  i < teamAddresses.length */\n  lt\n    /* \"contracts/CCtoken/ccToken.sol\":997:1159  for (uint256 i = 0; i < teamAddresses.length; i++) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"contracts/CCtoken/ccToken.sol\":1063:1134  _mint(teamAddresses[i], TOTAL_SUPPLY * 10 / 100 / teamAddresses.length) */\n  tag_32\n    /* \"contracts/CCtoken/ccToken.sol\":1069:1082  teamAddresses */\n  0x07\n    /* \"contracts/CCtoken/ccToken.sol\":1083:1084  i */\n  dup3\n    /* \"contracts/CCtoken/ccToken.sol\":1069:1085  teamAddresses[i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_33\n  jumpi\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\ntag_33:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCtoken/ccToken.sol\":1113:1126  teamAddresses */\n  0x07\n    /* \"contracts/CCtoken/ccToken.sol\":1113:1133  teamAddresses.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":1107:1110  100 */\n  0x64\n    /* \"contracts/CCtoken/ccToken.sol\":1102:1104  10 */\n  0x0a\n    /* \"contracts/CCtoken/ccToken.sol\":362:382  150_000_000 * 10**18 */\n  0x7c13bc4b2c133c56000000\n    /* \"contracts/CCtoken/ccToken.sol\":1087:1104  TOTAL_SUPPLY * 10 */\n  tag_37\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_37:\n    /* \"contracts/CCtoken/ccToken.sol\":1087:1110  TOTAL_SUPPLY * 10 / 100 */\n  tag_38\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_38:\n    /* \"contracts/CCtoken/ccToken.sol\":1087:1133  TOTAL_SUPPLY * 10 / 100 / teamAddresses.length */\n  tag_39\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_39:\n    /* \"contracts/CCtoken/ccToken.sol\":1063:1068  _mint */\n  shl(0x20, tag_28)\n    /* \"contracts/CCtoken/ccToken.sol\":1063:1134  _mint(teamAddresses[i], TOTAL_SUPPLY * 10 / 100 / teamAddresses.length) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"contracts/CCtoken/ccToken.sol\":1043:1046  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":997:1159  for (uint256 i = 0; i < teamAddresses.length; i++) {... */\n  jump(tag_29)\ntag_30:\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":1169:1214  _mint(address(this), TOTAL_SUPPLY * 10 / 100) */\n  tag_40\n    /* \"contracts/CCtoken/ccToken.sol\":1183:1187  this */\n  address\n    /* \"contracts/CCtoken/ccToken.sol\":1210:1213  100 */\n  0x64\n    /* \"contracts/CCtoken/ccToken.sol\":1205:1207  10 */\n  0x0a\n    /* \"contracts/CCtoken/ccToken.sol\":362:382  150_000_000 * 10**18 */\n  0x7c13bc4b2c133c56000000\n    /* \"contracts/CCtoken/ccToken.sol\":1190:1207  TOTAL_SUPPLY * 10 */\n  tag_41\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"contracts/CCtoken/ccToken.sol\":1190:1213  TOTAL_SUPPLY * 10 / 100 */\n  tag_42\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_42:\n    /* \"contracts/CCtoken/ccToken.sol\":1169:1174  _mint */\n  shl(0x20, tag_28)\n    /* \"contracts/CCtoken/ccToken.sol\":1169:1214  _mint(address(this), TOTAL_SUPPLY * 10 / 100) */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"contracts/CCtoken/ccToken.sol\":445:457  3 * 365 days */\n  0x05a39a80\n    /* \"contracts/CCtoken/ccToken.sol\":1261:1276  block.timestamp */\n  timestamp\n    /* \"contracts/CCtoken/ccToken.sol\":1261:1295  block.timestamp + TEAM_LOCK_PERIOD */\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"contracts/CCtoken/ccToken.sol\":1243:1258  teamLockedUntil */\n  0x08\n    /* \"contracts/CCtoken/ccToken.sol\":1243:1295  teamLockedUntil = block.timestamp + TEAM_LOCK_PERIOD */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":597:1319  constructor(address[] memory _teamAddresses)... */\n  pop\n    /* \"contracts/CCtoken/ccToken.sol\":279:1933  contract CSYDToken is ERC20, Ownable {... */\n  jump(tag_45)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_48\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_49\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_48:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_50\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_51)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_50:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_51:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_53\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_54\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_54:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_55)\ntag_53:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_56\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_57\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_58\n  jump\t// in\ntag_57:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_56:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_55:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_59\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_60)\ntag_59:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_60:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_61\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_61:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCtoken/ccToken.sol\":279:1933  contract CSYDToken is ERC20, Ownable {... */\ntag_22:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_63\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_64:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_65\n  jumpi\n  dup3\n  mload\n  dup3\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_64)\ntag_65:\ntag_63:\n  pop\n  swap1\n  pop\n  tag_66\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_66:\n  pop\n  swap1\n  jump\t// out\ntag_67:\ntag_68:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_69\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_68)\ntag_69:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_70:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_71:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_72:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_73:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_74:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_75:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_76:\n    /* \"#utility.yul\":834:861   */\n  tag_120\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_74\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_122\n  tag_75\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":907:995   */\ntag_121:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_77:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_124\n  tag_70\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_125\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_76\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_78:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_128\n  tag_75\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":1326:1382   */\ntag_127:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_79:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  0x00\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_80:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_81:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_132\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_80\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_82:\n    /* \"#utility.yul\":1920:1944   */\n  tag_134\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_81\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_135\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  0x00\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_135:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_83:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_137\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_82\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_84:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_139\n    /* \"#utility.yul\":2289:2353   */\n  tag_140\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_78\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":2273:2354   */\n  tag_77\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_142\n  tag_79\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":2505:2627   */\ntag_141:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_143:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_146\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_83\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_85:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_148\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_149\n  tag_73\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":2994:3116   */\ntag_148:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_150\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_84\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3841   */\ntag_3:\n    /* \"#utility.yul\":3382:3388   */\n  0x00\n    /* \"#utility.yul\":3431:3433   */\n  0x20\n    /* \"#utility.yul\":3419:3428   */\n  dup3\n    /* \"#utility.yul\":3410:3417   */\n  dup5\n    /* \"#utility.yul\":3406:3429   */\n  sub\n    /* \"#utility.yul\":3402:3434   */\n  slt\n    /* \"#utility.yul\":3399:3518   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":3437:3516   */\n  tag_153\n  tag_71\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":3399:3518   */\ntag_152:\n    /* \"#utility.yul\":3578:3579   */\n  0x00\n    /* \"#utility.yul\":3567:3576   */\n  dup3\n    /* \"#utility.yul\":3563:3580   */\n  add\n    /* \"#utility.yul\":3557:3581   */\n  mload\n    /* \"#utility.yul\":3608:3626   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3600:3606   */\n  dup2\n    /* \"#utility.yul\":3597:3627   */\n  gt\n    /* \"#utility.yul\":3594:3711   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":3630:3709   */\n  tag_155\n  tag_72\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":3594:3711   */\ntag_154:\n    /* \"#utility.yul\":3735:3824   */\n  tag_156\n    /* \"#utility.yul\":3816:3823   */\n  dup5\n    /* \"#utility.yul\":3807:3813   */\n  dup3\n    /* \"#utility.yul\":3796:3805   */\n  dup6\n    /* \"#utility.yul\":3792:3814   */\n  add\n    /* \"#utility.yul\":3735:3824   */\n  tag_85\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":3725:3824   */\n  swap2\n  pop\n    /* \"#utility.yul\":3528:3834   */\n  pop\n    /* \"#utility.yul\":3287:3841   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3847:3946   */\ntag_86:\n    /* \"#utility.yul\":3899:3905   */\n  0x00\n    /* \"#utility.yul\":3933:3938   */\n  dup2\n    /* \"#utility.yul\":3927:3939   */\n  mload\n    /* \"#utility.yul\":3917:3939   */\n  swap1\n  pop\n    /* \"#utility.yul\":3847:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4132   */\ntag_87:\n    /* \"#utility.yul\":4000:4077   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3997:3998   */\n  0x00\n    /* \"#utility.yul\":3990:4078   */\n  mstore\n    /* \"#utility.yul\":4097:4101   */\n  0x22\n    /* \"#utility.yul\":4094:4095   */\n  0x04\n    /* \"#utility.yul\":4087:4102   */\n  mstore\n    /* \"#utility.yul\":4121:4125   */\n  0x24\n    /* \"#utility.yul\":4118:4119   */\n  0x00\n    /* \"#utility.yul\":4111:4126   */\n  revert\n    /* \"#utility.yul\":4138:4458   */\ntag_88:\n    /* \"#utility.yul\":4182:4188   */\n  0x00\n    /* \"#utility.yul\":4219:4220   */\n  0x02\n    /* \"#utility.yul\":4213:4217   */\n  dup3\n    /* \"#utility.yul\":4209:4221   */\n  div\n    /* \"#utility.yul\":4199:4221   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4267   */\n  0x01\n    /* \"#utility.yul\":4260:4264   */\n  dup3\n    /* \"#utility.yul\":4256:4268   */\n  and\n    /* \"#utility.yul\":4287:4305   */\n  dup1\n    /* \"#utility.yul\":4277:4358   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":4343:4347   */\n  0x7f\n    /* \"#utility.yul\":4335:4341   */\n  dup3\n    /* \"#utility.yul\":4331:4348   */\n  and\n    /* \"#utility.yul\":4321:4348   */\n  swap2\n  pop\n    /* \"#utility.yul\":4277:4358   */\ntag_160:\n    /* \"#utility.yul\":4405:4407   */\n  0x20\n    /* \"#utility.yul\":4397:4403   */\n  dup3\n    /* \"#utility.yul\":4394:4408   */\n  lt\n    /* \"#utility.yul\":4374:4392   */\n  dup2\n    /* \"#utility.yul\":4371:4409   */\n  sub\n    /* \"#utility.yul\":4368:4452   */\n  tag_161\n  jumpi\n    /* \"#utility.yul\":4424:4442   */\n  tag_162\n  tag_87\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":4368:4452   */\ntag_161:\n    /* \"#utility.yul\":4189:4458   */\n  pop\n    /* \"#utility.yul\":4138:4458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4464:4605   */\ntag_89:\n    /* \"#utility.yul\":4513:4517   */\n  0x00\n    /* \"#utility.yul\":4536:4539   */\n  dup2\n    /* \"#utility.yul\":4528:4539   */\n  swap1\n  pop\n    /* \"#utility.yul\":4559:4562   */\n  dup2\n    /* \"#utility.yul\":4556:4557   */\n  0x00\n    /* \"#utility.yul\":4549:4563   */\n  mstore\n    /* \"#utility.yul\":4593:4597   */\n  0x20\n    /* \"#utility.yul\":4590:4591   */\n  0x00\n    /* \"#utility.yul\":4580:4598   */\n  keccak256\n    /* \"#utility.yul\":4572:4598   */\n  swap1\n  pop\n    /* \"#utility.yul\":4464:4605   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4611:4704   */\ntag_90:\n    /* \"#utility.yul\":4648:4654   */\n  0x00\n    /* \"#utility.yul\":4695:4697   */\n  0x20\n    /* \"#utility.yul\":4690:4692   */\n  0x1f\n    /* \"#utility.yul\":4683:4688   */\n  dup4\n    /* \"#utility.yul\":4679:4693   */\n  add\n    /* \"#utility.yul\":4675:4698   */\n  div\n    /* \"#utility.yul\":4665:4698   */\n  swap1\n  pop\n    /* \"#utility.yul\":4611:4704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4817   */\ntag_91:\n    /* \"#utility.yul\":4754:4762   */\n  0x00\n    /* \"#utility.yul\":4804:4809   */\n  dup3\n    /* \"#utility.yul\":4798:4802   */\n  dup3\n    /* \"#utility.yul\":4794:4810   */\n  shl\n    /* \"#utility.yul\":4773:4810   */\n  swap1\n  pop\n    /* \"#utility.yul\":4710:4817   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4823:5216   */\ntag_92:\n    /* \"#utility.yul\":4892:4898   */\n  0x00\n    /* \"#utility.yul\":4942:4943   */\n  0x08\n    /* \"#utility.yul\":4930:4940   */\n  dup4\n    /* \"#utility.yul\":4926:4944   */\n  mul\n    /* \"#utility.yul\":4965:5062   */\n  tag_167\n    /* \"#utility.yul\":4995:5061   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4984:4993   */\n  dup3\n    /* \"#utility.yul\":4965:5062   */\n  tag_91\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5083:5122   */\n  tag_168\n    /* \"#utility.yul\":5113:5121   */\n  dup7\n    /* \"#utility.yul\":5102:5111   */\n  dup4\n    /* \"#utility.yul\":5083:5122   */\n  tag_91\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5071:5122   */\n  swap6\n  pop\n    /* \"#utility.yul\":5155:5159   */\n  dup1\n    /* \"#utility.yul\":5151:5160   */\n  not\n    /* \"#utility.yul\":5144:5149   */\n  dup5\n    /* \"#utility.yul\":5140:5161   */\n  and\n    /* \"#utility.yul\":5131:5161   */\n  swap4\n  pop\n    /* \"#utility.yul\":5204:5208   */\n  dup1\n    /* \"#utility.yul\":5194:5202   */\n  dup7\n    /* \"#utility.yul\":5190:5209   */\n  and\n    /* \"#utility.yul\":5183:5188   */\n  dup5\n    /* \"#utility.yul\":5180:5210   */\n  or\n    /* \"#utility.yul\":5170:5210   */\n  swap3\n  pop\n    /* \"#utility.yul\":4899:5216   */\n  pop\n  pop\n    /* \"#utility.yul\":4823:5216   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5222:5299   */\ntag_93:\n    /* \"#utility.yul\":5259:5266   */\n  0x00\n    /* \"#utility.yul\":5288:5293   */\n  dup2\n    /* \"#utility.yul\":5277:5293   */\n  swap1\n  pop\n    /* \"#utility.yul\":5222:5299   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5305:5365   */\ntag_94:\n    /* \"#utility.yul\":5333:5336   */\n  0x00\n    /* \"#utility.yul\":5354:5359   */\n  dup2\n    /* \"#utility.yul\":5347:5359   */\n  swap1\n  pop\n    /* \"#utility.yul\":5305:5365   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5371:5513   */\ntag_95:\n    /* \"#utility.yul\":5421:5430   */\n  0x00\n    /* \"#utility.yul\":5454:5507   */\n  tag_172\n    /* \"#utility.yul\":5472:5506   */\n  tag_173\n    /* \"#utility.yul\":5481:5505   */\n  tag_174\n    /* \"#utility.yul\":5499:5504   */\n  dup5\n    /* \"#utility.yul\":5481:5505   */\n  tag_93\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":5472:5506   */\n  tag_94\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5454:5507   */\n  tag_93\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5441:5507   */\n  swap1\n  pop\n    /* \"#utility.yul\":5371:5513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5519:5594   */\ntag_96:\n    /* \"#utility.yul\":5562:5565   */\n  0x00\n    /* \"#utility.yul\":5583:5588   */\n  dup2\n    /* \"#utility.yul\":5576:5588   */\n  swap1\n  pop\n    /* \"#utility.yul\":5519:5594   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5600:5869   */\ntag_97:\n    /* \"#utility.yul\":5710:5749   */\n  tag_177\n    /* \"#utility.yul\":5741:5748   */\n  dup4\n    /* \"#utility.yul\":5710:5749   */\n  tag_95\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":5771:5862   */\n  tag_178\n    /* \"#utility.yul\":5820:5861   */\n  tag_179\n    /* \"#utility.yul\":5844:5860   */\n  dup3\n    /* \"#utility.yul\":5820:5861   */\n  tag_96\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":5812:5818   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5799:5810   */\n  sload\n    /* \"#utility.yul\":5771:5862   */\n  tag_92\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":5765:5769   */\n  dup3\n    /* \"#utility.yul\":5758:5863   */\n  sstore\n    /* \"#utility.yul\":5676:5869   */\n  pop\n    /* \"#utility.yul\":5600:5869   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5875:5948   */\ntag_98:\n    /* \"#utility.yul\":5920:5923   */\n  0x00\n    /* \"#utility.yul\":5941:5942   */\n  0x00\n    /* \"#utility.yul\":5934:5942   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:5948   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5954:6143   */\ntag_99:\n    /* \"#utility.yul\":6031:6063   */\n  tag_182\n  tag_98\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6072:6137   */\n  tag_183\n    /* \"#utility.yul\":6130:6136   */\n  dup2\n    /* \"#utility.yul\":6122:6128   */\n  dup5\n    /* \"#utility.yul\":6116:6120   */\n  dup5\n    /* \"#utility.yul\":6072:6137   */\n  tag_97\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6007:6143   */\n  pop\n    /* \"#utility.yul\":5954:6143   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6149:6335   */\ntag_100:\n    /* \"#utility.yul\":6209:6329   */\ntag_185:\n    /* \"#utility.yul\":6226:6229   */\n  dup2\n    /* \"#utility.yul\":6219:6224   */\n  dup2\n    /* \"#utility.yul\":6216:6230   */\n  lt\n    /* \"#utility.yul\":6209:6329   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":6280:6319   */\n  tag_188\n    /* \"#utility.yul\":6317:6318   */\n  0x00\n    /* \"#utility.yul\":6310:6315   */\n  dup3\n    /* \"#utility.yul\":6280:6319   */\n  tag_99\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6253:6254   */\n  0x01\n    /* \"#utility.yul\":6246:6251   */\n  dup2\n    /* \"#utility.yul\":6242:6255   */\n  add\n    /* \"#utility.yul\":6233:6255   */\n  swap1\n  pop\n    /* \"#utility.yul\":6209:6329   */\n  jump(tag_185)\ntag_187:\n    /* \"#utility.yul\":6149:6335   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6341:6884   */\ntag_101:\n    /* \"#utility.yul\":6442:6444   */\n  0x1f\n    /* \"#utility.yul\":6437:6440   */\n  dup3\n    /* \"#utility.yul\":6434:6445   */\n  gt\n    /* \"#utility.yul\":6431:6877   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":6476:6514   */\n  tag_191\n    /* \"#utility.yul\":6508:6513   */\n  dup2\n    /* \"#utility.yul\":6476:6514   */\n  tag_89\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":6560:6589   */\n  tag_192\n    /* \"#utility.yul\":6578:6588   */\n  dup5\n    /* \"#utility.yul\":6560:6589   */\n  tag_90\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6550:6558   */\n  dup2\n    /* \"#utility.yul\":6546:6590   */\n  add\n    /* \"#utility.yul\":6743:6745   */\n  0x20\n    /* \"#utility.yul\":6731:6741   */\n  dup6\n    /* \"#utility.yul\":6728:6746   */\n  lt\n    /* \"#utility.yul\":6725:6774   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":6764:6772   */\n  dup2\n    /* \"#utility.yul\":6749:6772   */\n  swap1\n  pop\n    /* \"#utility.yul\":6725:6774   */\ntag_193:\n    /* \"#utility.yul\":6787:6867   */\n  tag_194\n    /* \"#utility.yul\":6843:6865   */\n  tag_195\n    /* \"#utility.yul\":6861:6864   */\n  dup6\n    /* \"#utility.yul\":6843:6865   */\n  tag_90\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":6833:6841   */\n  dup4\n    /* \"#utility.yul\":6829:6866   */\n  add\n    /* \"#utility.yul\":6816:6827   */\n  dup3\n    /* \"#utility.yul\":6787:6867   */\n  tag_100\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":6446:6877   */\n  pop\n  pop\n    /* \"#utility.yul\":6431:6877   */\ntag_190:\n    /* \"#utility.yul\":6341:6884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6890:7007   */\ntag_102:\n    /* \"#utility.yul\":6944:6952   */\n  0x00\n    /* \"#utility.yul\":6994:6999   */\n  dup3\n    /* \"#utility.yul\":6988:6992   */\n  dup3\n    /* \"#utility.yul\":6984:7000   */\n  shr\n    /* \"#utility.yul\":6963:7000   */\n  swap1\n  pop\n    /* \"#utility.yul\":6890:7007   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7013:7182   */\ntag_103:\n    /* \"#utility.yul\":7057:7063   */\n  0x00\n    /* \"#utility.yul\":7090:7141   */\n  tag_198\n    /* \"#utility.yul\":7138:7139   */\n  0x00\n    /* \"#utility.yul\":7134:7140   */\n  not\n    /* \"#utility.yul\":7126:7131   */\n  dup5\n    /* \"#utility.yul\":7123:7124   */\n  0x08\n    /* \"#utility.yul\":7119:7132   */\n  mul\n    /* \"#utility.yul\":7090:7141   */\n  tag_102\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7086:7142   */\n  not\n    /* \"#utility.yul\":7171:7175   */\n  dup1\n    /* \"#utility.yul\":7165:7169   */\n  dup4\n    /* \"#utility.yul\":7161:7176   */\n  and\n    /* \"#utility.yul\":7151:7176   */\n  swap2\n  pop\n    /* \"#utility.yul\":7064:7182   */\n  pop\n    /* \"#utility.yul\":7013:7182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7187:7482   */\ntag_104:\n    /* \"#utility.yul\":7263:7267   */\n  0x00\n    /* \"#utility.yul\":7409:7438   */\n  tag_200\n    /* \"#utility.yul\":7434:7437   */\n  dup4\n    /* \"#utility.yul\":7428:7432   */\n  dup4\n    /* \"#utility.yul\":7409:7438   */\n  tag_103\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":7401:7438   */\n  swap2\n  pop\n    /* \"#utility.yul\":7471:7474   */\n  dup3\n    /* \"#utility.yul\":7468:7469   */\n  0x02\n    /* \"#utility.yul\":7464:7475   */\n  mul\n    /* \"#utility.yul\":7458:7462   */\n  dup3\n    /* \"#utility.yul\":7455:7476   */\n  or\n    /* \"#utility.yul\":7447:7476   */\n  swap1\n  pop\n    /* \"#utility.yul\":7187:7482   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7487:8882   */\ntag_9:\n    /* \"#utility.yul\":7604:7641   */\n  tag_202\n    /* \"#utility.yul\":7637:7640   */\n  dup3\n    /* \"#utility.yul\":7604:7641   */\n  tag_86\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":7706:7724   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7698:7704   */\n  dup2\n    /* \"#utility.yul\":7695:7725   */\n  gt\n    /* \"#utility.yul\":7692:7748   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":7728:7746   */\n  tag_204\n  tag_75\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":7692:7748   */\ntag_203:\n    /* \"#utility.yul\":7772:7810   */\n  tag_205\n    /* \"#utility.yul\":7804:7808   */\n  dup3\n    /* \"#utility.yul\":7798:7809   */\n  sload\n    /* \"#utility.yul\":7772:7810   */\n  tag_88\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":7857:7924   */\n  tag_206\n    /* \"#utility.yul\":7917:7923   */\n  dup3\n    /* \"#utility.yul\":7909:7915   */\n  dup3\n    /* \"#utility.yul\":7903:7907   */\n  dup6\n    /* \"#utility.yul\":7857:7924   */\n  tag_101\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7951:7952   */\n  0x00\n    /* \"#utility.yul\":7975:7979   */\n  0x20\n    /* \"#utility.yul\":7962:7979   */\n  swap1\n  pop\n    /* \"#utility.yul\":8007:8009   */\n  0x1f\n    /* \"#utility.yul\":7999:8005   */\n  dup4\n    /* \"#utility.yul\":7996:8010   */\n  gt\n    /* \"#utility.yul\":8024:8025   */\n  0x01\n    /* \"#utility.yul\":8019:8637   */\n  dup2\n  eq\n  tag_208\n  jumpi\n    /* \"#utility.yul\":8681:8682   */\n  0x00\n    /* \"#utility.yul\":8698:8704   */\n  dup5\n    /* \"#utility.yul\":8695:8772   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8747:8756   */\n  dup3\n    /* \"#utility.yul\":8742:8745   */\n  dup8\n    /* \"#utility.yul\":8738:8757   */\n  add\n    /* \"#utility.yul\":8732:8758   */\n  mload\n    /* \"#utility.yul\":8723:8758   */\n  swap1\n  pop\n    /* \"#utility.yul\":8695:8772   */\ntag_209:\n    /* \"#utility.yul\":8798:8865   */\n  tag_210\n    /* \"#utility.yul\":8858:8864   */\n  dup6\n    /* \"#utility.yul\":8851:8856   */\n  dup3\n    /* \"#utility.yul\":8798:8865   */\n  tag_104\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8792:8796   */\n  dup7\n    /* \"#utility.yul\":8785:8866   */\n  sstore\n    /* \"#utility.yul\":8654:8876   */\n  pop\n    /* \"#utility.yul\":7989:8876   */\n  jump(tag_207)\n    /* \"#utility.yul\":8019:8637   */\ntag_208:\n    /* \"#utility.yul\":8071:8075   */\n  0x1f\n    /* \"#utility.yul\":8067:8076   */\n  not\n    /* \"#utility.yul\":8059:8065   */\n  dup5\n    /* \"#utility.yul\":8055:8077   */\n  and\n    /* \"#utility.yul\":8105:8142   */\n  tag_211\n    /* \"#utility.yul\":8137:8141   */\n  dup7\n    /* \"#utility.yul\":8105:8142   */\n  tag_89\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":8164:8165   */\n  0x00\n    /* \"#utility.yul\":8178:8386   */\ntag_212:\n    /* \"#utility.yul\":8192:8199   */\n  dup3\n    /* \"#utility.yul\":8189:8190   */\n  dup2\n    /* \"#utility.yul\":8186:8200   */\n  lt\n    /* \"#utility.yul\":8178:8386   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":8271:8280   */\n  dup5\n    /* \"#utility.yul\":8266:8269   */\n  dup10\n    /* \"#utility.yul\":8262:8281   */\n  add\n    /* \"#utility.yul\":8256:8282   */\n  mload\n    /* \"#utility.yul\":8248:8254   */\n  dup3\n    /* \"#utility.yul\":8241:8283   */\n  sstore\n    /* \"#utility.yul\":8322:8323   */\n  0x01\n    /* \"#utility.yul\":8314:8320   */\n  dup3\n    /* \"#utility.yul\":8310:8324   */\n  add\n    /* \"#utility.yul\":8300:8324   */\n  swap2\n  pop\n    /* \"#utility.yul\":8369:8371   */\n  0x20\n    /* \"#utility.yul\":8358:8367   */\n  dup6\n    /* \"#utility.yul\":8354:8372   */\n  add\n    /* \"#utility.yul\":8341:8372   */\n  swap5\n  pop\n    /* \"#utility.yul\":8215:8219   */\n  0x20\n    /* \"#utility.yul\":8212:8213   */\n  dup2\n    /* \"#utility.yul\":8208:8220   */\n  add\n    /* \"#utility.yul\":8203:8220   */\n  swap1\n  pop\n    /* \"#utility.yul\":8178:8386   */\n  jump(tag_212)\ntag_214:\n    /* \"#utility.yul\":8414:8420   */\n  dup7\n    /* \"#utility.yul\":8405:8412   */\n  dup4\n    /* \"#utility.yul\":8402:8421   */\n  lt\n    /* \"#utility.yul\":8399:8578   */\n  iszero\n  tag_215\n  jumpi\n    /* \"#utility.yul\":8472:8481   */\n  dup5\n    /* \"#utility.yul\":8467:8470   */\n  dup10\n    /* \"#utility.yul\":8463:8482   */\n  add\n    /* \"#utility.yul\":8457:8483   */\n  mload\n    /* \"#utility.yul\":8515:8563   */\n  tag_216\n    /* \"#utility.yul\":8557:8561   */\n  0x1f\n    /* \"#utility.yul\":8549:8555   */\n  dup10\n    /* \"#utility.yul\":8545:8562   */\n  and\n    /* \"#utility.yul\":8534:8543   */\n  dup3\n    /* \"#utility.yul\":8515:8563   */\n  tag_103\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":8507:8513   */\n  dup4\n    /* \"#utility.yul\":8500:8564   */\n  sstore\n    /* \"#utility.yul\":8422:8578   */\n  pop\n    /* \"#utility.yul\":8399:8578   */\ntag_215:\n    /* \"#utility.yul\":8624:8625   */\n  0x01\n    /* \"#utility.yul\":8620:8621   */\n  0x02\n    /* \"#utility.yul\":8612:8618   */\n  dup9\n    /* \"#utility.yul\":8608:8622   */\n  mul\n    /* \"#utility.yul\":8604:8626   */\n  add\n    /* \"#utility.yul\":8598:8602   */\n  dup9\n    /* \"#utility.yul\":8591:8627   */\n  sstore\n    /* \"#utility.yul\":8026:8637   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7989:8876   */\ntag_207:\n  pop\n    /* \"#utility.yul\":7579:8882   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7487:8882   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8888:9006   */\ntag_105:\n    /* \"#utility.yul\":8975:8999   */\n  tag_218\n    /* \"#utility.yul\":8993:8998   */\n  dup2\n    /* \"#utility.yul\":8975:8999   */\n  tag_81\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":8970:8973   */\n  dup3\n    /* \"#utility.yul\":8963:9000   */\n  mstore\n    /* \"#utility.yul\":8888:9006   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9012:9234   */\ntag_14:\n    /* \"#utility.yul\":9105:9109   */\n  0x00\n    /* \"#utility.yul\":9143:9145   */\n  0x20\n    /* \"#utility.yul\":9132:9141   */\n  dup3\n    /* \"#utility.yul\":9128:9146   */\n  add\n    /* \"#utility.yul\":9120:9146   */\n  swap1\n  pop\n    /* \"#utility.yul\":9156:9227   */\n  tag_220\n    /* \"#utility.yul\":9224:9225   */\n  0x00\n    /* \"#utility.yul\":9213:9222   */\n  dup4\n    /* \"#utility.yul\":9209:9226   */\n  add\n    /* \"#utility.yul\":9200:9206   */\n  dup5\n    /* \"#utility.yul\":9156:9227   */\n  tag_105\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":9012:9234   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9240:9409   */\ntag_106:\n    /* \"#utility.yul\":9324:9335   */\n  0x00\n    /* \"#utility.yul\":9358:9364   */\n  dup3\n    /* \"#utility.yul\":9353:9356   */\n  dup3\n    /* \"#utility.yul\":9346:9365   */\n  mstore\n    /* \"#utility.yul\":9398:9402   */\n  0x20\n    /* \"#utility.yul\":9393:9396   */\n  dup3\n    /* \"#utility.yul\":9389:9403   */\n  add\n    /* \"#utility.yul\":9374:9403   */\n  swap1\n  pop\n    /* \"#utility.yul\":9240:9409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9415:9636   */\ntag_107:\n    /* \"#utility.yul\":9555:9589   */\n  0x4174206c65617374206f6e65207465616d206164647265737320726571756972\n    /* \"#utility.yul\":9551:9552   */\n  0x00\n    /* \"#utility.yul\":9543:9549   */\n  dup3\n    /* \"#utility.yul\":9539:9553   */\n  add\n    /* \"#utility.yul\":9532:9590   */\n  mstore\n    /* \"#utility.yul\":9624:9628   */\n  0x6564000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9619:9621   */\n  0x20\n    /* \"#utility.yul\":9611:9617   */\n  dup3\n    /* \"#utility.yul\":9607:9622   */\n  add\n    /* \"#utility.yul\":9600:9629   */\n  mstore\n    /* \"#utility.yul\":9415:9636   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9642:10008   */\ntag_108:\n    /* \"#utility.yul\":9784:9787   */\n  0x00\n    /* \"#utility.yul\":9805:9872   */\n  tag_224\n    /* \"#utility.yul\":9869:9871   */\n  0x22\n    /* \"#utility.yul\":9864:9867   */\n  dup4\n    /* \"#utility.yul\":9805:9872   */\n  tag_106\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":9798:9872   */\n  swap2\n  pop\n    /* \"#utility.yul\":9881:9974   */\n  tag_225\n    /* \"#utility.yul\":9970:9973   */\n  dup3\n    /* \"#utility.yul\":9881:9974   */\n  tag_107\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":9999:10001   */\n  0x40\n    /* \"#utility.yul\":9994:9997   */\n  dup3\n    /* \"#utility.yul\":9990:10002   */\n  add\n    /* \"#utility.yul\":9983:10002   */\n  swap1\n  pop\n    /* \"#utility.yul\":9642:10008   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10014:10433   */\ntag_20:\n    /* \"#utility.yul\":10180:10184   */\n  0x00\n    /* \"#utility.yul\":10218:10220   */\n  0x20\n    /* \"#utility.yul\":10207:10216   */\n  dup3\n    /* \"#utility.yul\":10203:10221   */\n  add\n    /* \"#utility.yul\":10195:10221   */\n  swap1\n  pop\n    /* \"#utility.yul\":10267:10276   */\n  dup2\n    /* \"#utility.yul\":10261:10265   */\n  dup2\n    /* \"#utility.yul\":10257:10277   */\n  sub\n    /* \"#utility.yul\":10253:10254   */\n  0x00\n    /* \"#utility.yul\":10242:10251   */\n  dup4\n    /* \"#utility.yul\":10238:10255   */\n  add\n    /* \"#utility.yul\":10231:10278   */\n  mstore\n    /* \"#utility.yul\":10295:10426   */\n  tag_227\n    /* \"#utility.yul\":10421:10425   */\n  dup2\n    /* \"#utility.yul\":10295:10426   */\n  tag_108\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10287:10426   */\n  swap1\n  pop\n    /* \"#utility.yul\":10014:10433   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10439:10619   */\ntag_109:\n    /* \"#utility.yul\":10487:10564   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10484:10485   */\n  0x00\n    /* \"#utility.yul\":10477:10565   */\n  mstore\n    /* \"#utility.yul\":10584:10588   */\n  0x11\n    /* \"#utility.yul\":10581:10582   */\n  0x04\n    /* \"#utility.yul\":10574:10589   */\n  mstore\n    /* \"#utility.yul\":10608:10612   */\n  0x24\n    /* \"#utility.yul\":10605:10606   */\n  0x00\n    /* \"#utility.yul\":10598:10613   */\n  revert\n    /* \"#utility.yul\":10625:11035   */\ntag_25:\n    /* \"#utility.yul\":10665:10672   */\n  0x00\n    /* \"#utility.yul\":10688:10708   */\n  tag_230\n    /* \"#utility.yul\":10706:10707   */\n  dup3\n    /* \"#utility.yul\":10688:10708   */\n  tag_93\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10683:10708   */\n  swap2\n  pop\n    /* \"#utility.yul\":10722:10742   */\n  tag_231\n    /* \"#utility.yul\":10740:10741   */\n  dup4\n    /* \"#utility.yul\":10722:10742   */\n  tag_93\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":10717:10742   */\n  swap3\n  pop\n    /* \"#utility.yul\":10777:10778   */\n  dup3\n    /* \"#utility.yul\":10774:10775   */\n  dup3\n    /* \"#utility.yul\":10770:10779   */\n  mul\n    /* \"#utility.yul\":10799:10829   */\n  tag_232\n    /* \"#utility.yul\":10817:10828   */\n  dup2\n    /* \"#utility.yul\":10799:10829   */\n  tag_93\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":10788:10829   */\n  swap2\n  pop\n    /* \"#utility.yul\":10978:10979   */\n  dup3\n    /* \"#utility.yul\":10969:10976   */\n  dup3\n    /* \"#utility.yul\":10965:10980   */\n  div\n    /* \"#utility.yul\":10962:10963   */\n  dup5\n    /* \"#utility.yul\":10959:10981   */\n  eq\n    /* \"#utility.yul\":10939:10940   */\n  dup4\n    /* \"#utility.yul\":10932:10941   */\n  iszero\n    /* \"#utility.yul\":10912:10995   */\n  or\n    /* \"#utility.yul\":10889:11028   */\n  tag_233\n  jumpi\n    /* \"#utility.yul\":11008:11026   */\n  tag_234\n  tag_109\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":10889:11028   */\ntag_233:\n    /* \"#utility.yul\":10673:11035   */\n  pop\n    /* \"#utility.yul\":10625:11035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11041:11221   */\ntag_110:\n    /* \"#utility.yul\":11089:11166   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11086:11087   */\n  0x00\n    /* \"#utility.yul\":11079:11167   */\n  mstore\n    /* \"#utility.yul\":11186:11190   */\n  0x12\n    /* \"#utility.yul\":11183:11184   */\n  0x04\n    /* \"#utility.yul\":11176:11191   */\n  mstore\n    /* \"#utility.yul\":11210:11214   */\n  0x24\n    /* \"#utility.yul\":11207:11208   */\n  0x00\n    /* \"#utility.yul\":11200:11215   */\n  revert\n    /* \"#utility.yul\":11227:11412   */\ntag_27:\n    /* \"#utility.yul\":11267:11268   */\n  0x00\n    /* \"#utility.yul\":11284:11304   */\n  tag_237\n    /* \"#utility.yul\":11302:11303   */\n  dup3\n    /* \"#utility.yul\":11284:11304   */\n  tag_93\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":11279:11304   */\n  swap2\n  pop\n    /* \"#utility.yul\":11318:11338   */\n  tag_238\n    /* \"#utility.yul\":11336:11337   */\n  dup4\n    /* \"#utility.yul\":11318:11338   */\n  tag_93\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11313:11338   */\n  swap3\n  pop\n    /* \"#utility.yul\":11357:11358   */\n  dup3\n    /* \"#utility.yul\":11347:11382   */\n  tag_239\n  jumpi\n    /* \"#utility.yul\":11362:11380   */\n  tag_240\n  tag_110\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":11347:11382   */\ntag_239:\n    /* \"#utility.yul\":11404:11405   */\n  dup3\n    /* \"#utility.yul\":11401:11402   */\n  dup3\n    /* \"#utility.yul\":11397:11406   */\n  div\n    /* \"#utility.yul\":11392:11406   */\n  swap1\n  pop\n    /* \"#utility.yul\":11227:11412   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11418:11598   */\ntag_35:\n    /* \"#utility.yul\":11466:11543   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11463:11464   */\n  0x00\n    /* \"#utility.yul\":11456:11544   */\n  mstore\n    /* \"#utility.yul\":11563:11567   */\n  0x32\n    /* \"#utility.yul\":11560:11561   */\n  0x04\n    /* \"#utility.yul\":11553:11568   */\n  mstore\n    /* \"#utility.yul\":11587:11591   */\n  0x24\n    /* \"#utility.yul\":11584:11585   */\n  0x00\n    /* \"#utility.yul\":11577:11592   */\n  revert\n    /* \"#utility.yul\":11604:11795   */\ntag_44:\n    /* \"#utility.yul\":11644:11647   */\n  0x00\n    /* \"#utility.yul\":11663:11683   */\n  tag_243\n    /* \"#utility.yul\":11681:11682   */\n  dup3\n    /* \"#utility.yul\":11663:11683   */\n  tag_93\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":11658:11683   */\n  swap2\n  pop\n    /* \"#utility.yul\":11697:11717   */\n  tag_244\n    /* \"#utility.yul\":11715:11716   */\n  dup4\n    /* \"#utility.yul\":11697:11717   */\n  tag_93\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":11692:11717   */\n  swap3\n  pop\n    /* \"#utility.yul\":11740:11741   */\n  dup3\n    /* \"#utility.yul\":11737:11738   */\n  dup3\n    /* \"#utility.yul\":11733:11742   */\n  add\n    /* \"#utility.yul\":11726:11742   */\n  swap1\n  pop\n    /* \"#utility.yul\":11761:11764   */\n  dup1\n    /* \"#utility.yul\":11758:11759   */\n  dup3\n    /* \"#utility.yul\":11755:11765   */\n  gt\n    /* \"#utility.yul\":11752:11788   */\n  iszero\n  tag_245\n  jumpi\n    /* \"#utility.yul\":11768:11786   */\n  tag_246\n  tag_109\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":11752:11788   */\ntag_245:\n    /* \"#utility.yul\":11604:11795   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11801:11919   */\ntag_111:\n    /* \"#utility.yul\":11888:11912   */\n  tag_248\n    /* \"#utility.yul\":11906:11911   */\n  dup2\n    /* \"#utility.yul\":11888:11912   */\n  tag_93\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":11883:11886   */\n  dup3\n    /* \"#utility.yul\":11876:11913   */\n  mstore\n    /* \"#utility.yul\":11801:11919   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11925:12367   */\ntag_58:\n    /* \"#utility.yul\":12074:12078   */\n  0x00\n    /* \"#utility.yul\":12112:12114   */\n  0x60\n    /* \"#utility.yul\":12101:12110   */\n  dup3\n    /* \"#utility.yul\":12097:12115   */\n  add\n    /* \"#utility.yul\":12089:12115   */\n  swap1\n  pop\n    /* \"#utility.yul\":12125:12196   */\n  tag_250\n    /* \"#utility.yul\":12193:12194   */\n  0x00\n    /* \"#utility.yul\":12182:12191   */\n  dup4\n    /* \"#utility.yul\":12178:12195   */\n  add\n    /* \"#utility.yul\":12169:12175   */\n  dup7\n    /* \"#utility.yul\":12125:12196   */\n  tag_105\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":12206:12278   */\n  tag_251\n    /* \"#utility.yul\":12274:12276   */\n  0x20\n    /* \"#utility.yul\":12263:12272   */\n  dup4\n    /* \"#utility.yul\":12259:12277   */\n  add\n    /* \"#utility.yul\":12250:12256   */\n  dup6\n    /* \"#utility.yul\":12206:12278   */\n  tag_111\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":12288:12360   */\n  tag_252\n    /* \"#utility.yul\":12356:12358   */\n  0x40\n    /* \"#utility.yul\":12345:12354   */\n  dup4\n    /* \"#utility.yul\":12341:12359   */\n  add\n    /* \"#utility.yul\":12332:12338   */\n  dup5\n    /* \"#utility.yul\":12288:12360   */\n  tag_111\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":11925:12367   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12373:12595   */\ntag_62:\n    /* \"#utility.yul\":12466:12470   */\n  0x00\n    /* \"#utility.yul\":12504:12506   */\n  0x20\n    /* \"#utility.yul\":12493:12502   */\n  dup3\n    /* \"#utility.yul\":12489:12507   */\n  add\n    /* \"#utility.yul\":12481:12507   */\n  swap1\n  pop\n    /* \"#utility.yul\":12517:12588   */\n  tag_254\n    /* \"#utility.yul\":12585:12586   */\n  0x00\n    /* \"#utility.yul\":12574:12583   */\n  dup4\n    /* \"#utility.yul\":12570:12587   */\n  add\n    /* \"#utility.yul\":12561:12567   */\n  dup5\n    /* \"#utility.yul\":12517:12588   */\n  tag_111\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":12373:12595   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCtoken/ccToken.sol\":279:1933  contract CSYDToken is ERC20, Ownable {... */\ntag_45:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCtoken/ccToken.sol\":279:1933  contract CSYDToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x902d55a5\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x76ae9b2d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1d0806ae\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x1d0806ae\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x35928998\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06f660ef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CCtoken/ccToken.sol\":1813:1930  function getInitialPrice() public view returns (uint256) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCtoken/ccToken.sol\":484:511  uint256 public initialPrice */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCtoken/ccToken.sol\":1619:1805  function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked returns (bool) {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCtoken/ccToken.sol\":402:457  uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/CCtoken/ccToken.sol\":558:588  uint256 public teamLockedUntil */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCtoken/ccToken.sol\":323:382  uint256 public constant TOTAL_SUPPLY = 150_000_000 * 10**18 */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCtoken/ccToken.sol\":1457:1611  function transfer(address recipient, uint256 amount) public override teamLocked returns (bool) {... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/CCtoken/ccToken.sol\":1813:1930  function getInitialPrice() public view returns (uint256) {... */\n    tag_24:\n        /* \"contracts/CCtoken/ccToken.sol\":1861:1868  uint256 */\n      0x00\n        /* \"contracts/CCtoken/ccToken.sol\":1888:1900  initialPrice */\n      sload(0x06)\n        /* \"contracts/CCtoken/ccToken.sol\":1881:1900  return initialPrice */\n      swap1\n      pop\n        /* \"contracts/CCtoken/ccToken.sol\":1813:1930  function getInitialPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCtoken/ccToken.sol\":484:511  uint256 public initialPrice */\n    tag_41:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CCtoken/ccToken.sol\":1619:1805  function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked returns (bool) {... */\n    tag_46:\n        /* \"contracts/CCtoken/ccToken.sol\":1728:1732  bool */\n      0x00\n        /* \"contracts/CCtoken/ccToken.sol\":1387:1402  teamLockedUntil */\n      sload(0x08)\n        /* \"contracts/CCtoken/ccToken.sol\":1368:1383  block.timestamp */\n      timestamp\n        /* \"contracts/CCtoken/ccToken.sol\":1368:1402  block.timestamp >= teamLockedUntil */\n      lt\n      iszero\n        /* \"contracts/CCtoken/ccToken.sol\":1360:1429  require(block.timestamp >= teamLockedUntil, \"Team tokens are locked\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/CCtoken/ccToken.sol\":1752:1797  super.transferFrom(sender, recipient, amount) */\n      tag_106\n        /* \"contracts/CCtoken/ccToken.sol\":1771:1777  sender */\n      dup5\n        /* \"contracts/CCtoken/ccToken.sol\":1779:1788  recipient */\n      dup5\n        /* \"contracts/CCtoken/ccToken.sol\":1790:1796  amount */\n      dup5\n        /* \"contracts/CCtoken/ccToken.sol\":1752:1770  super.transferFrom */\n      tag_107\n        /* \"contracts/CCtoken/ccToken.sol\":1752:1797  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/CCtoken/ccToken.sol\":1745:1797  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCtoken/ccToken.sol\":1619:1805  function transferFrom(address sender, address recipient, uint256 amount) public override teamLocked returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCtoken/ccToken.sol\":402:457  uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days */\n    tag_53:\n        /* \"contracts/CCtoken/ccToken.sol\":445:457  3 * 365 days */\n      0x05a39a80\n        /* \"contracts/CCtoken/ccToken.sol\":402:457  uint256 public constant TEAM_LOCK_PERIOD = 3 * 365 days */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CCtoken/ccToken.sol\":558:588  uint256 public teamLockedUntil */\n    tag_63:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCtoken/ccToken.sol\":323:382  uint256 public constant TOTAL_SUPPLY = 150_000_000 * 10**18 */\n    tag_70:\n        /* \"contracts/CCtoken/ccToken.sol\":362:382  150_000_000 * 10**18 */\n      0x7c13bc4b2c133c56000000\n        /* \"contracts/CCtoken/ccToken.sol\":323:382  uint256 public constant TOTAL_SUPPLY = 150_000_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_90\n      jump\t// in\n    tag_118:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_90\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCtoken/ccToken.sol\":1457:1611  function transfer(address recipient, uint256 amount) public override teamLocked returns (bool) {... */\n    tag_77:\n        /* \"contracts/CCtoken/ccToken.sol\":1546:1550  bool */\n      0x00\n        /* \"contracts/CCtoken/ccToken.sol\":1387:1402  teamLockedUntil */\n      sload(0x08)\n        /* \"contracts/CCtoken/ccToken.sol\":1368:1383  block.timestamp */\n      timestamp\n        /* \"contracts/CCtoken/ccToken.sol\":1368:1402  block.timestamp >= teamLockedUntil */\n      lt\n      iszero\n        /* \"contracts/CCtoken/ccToken.sol\":1360:1429  require(block.timestamp >= teamLockedUntil, \"Team tokens are locked\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_104\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/CCtoken/ccToken.sol\":1570:1603  super.transfer(recipient, amount) */\n      tag_127\n        /* \"contracts/CCtoken/ccToken.sol\":1585:1594  recipient */\n      dup4\n        /* \"contracts/CCtoken/ccToken.sol\":1596:1602  amount */\n      dup4\n        /* \"contracts/CCtoken/ccToken.sol\":1570:1584  super.transfer */\n      tag_128\n        /* \"contracts/CCtoken/ccToken.sol\":1570:1603  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/CCtoken/ccToken.sol\":1563:1603  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCtoken/ccToken.sol\":1457:1611  function transfer(address recipient, uint256 amount) public override teamLocked returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_141\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_144\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_147\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_148\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_149\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_154\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_161:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_82\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_171:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_173:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_175\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_181)\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_185)\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_187:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_188:\n        /* \"#utility.yul\":177:201   */\n      tag_215\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_187\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_26:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_217\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_188\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_189:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_190:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_191:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_192:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_193:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_223\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_189\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1146:1217   */\n      tag_224\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_190\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_225\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_191\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1316:1345   */\n      tag_226\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_192\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_30:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_228\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_193\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_195:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_197:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_198:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_234\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_197\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_199:\n        /* \"#utility.yul\":2311:2335   */\n      tag_236\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_198\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      0x00\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_237:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_200:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_239\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_199\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_201:\n        /* \"#utility.yul\":2584:2608   */\n      tag_241\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_187\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_242:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_202:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_244\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_201\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_33:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_247\n      tag_195\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2877:2996   */\n    tag_246:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_248\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_200\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_249\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_202\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_203:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_204:\n        /* \"#utility.yul\":3441:3462   */\n      tag_252\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_203\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_36:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_254\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_204\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_45:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_257\n      tag_195\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3801:3920   */\n    tag_256:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_258\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_200\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_259\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_200\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_260\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_202\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_205:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_206:\n        /* \"#utility.yul\":4491:4513   */\n      tag_263\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_205\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_51:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_265\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_206\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_57:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_268\n      tag_195\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4822:4941   */\n    tag_267:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_269\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_200\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_207:\n        /* \"#utility.yul\":5168:5192   */\n      tag_271\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_198\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_68:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_273\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_207\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_81:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_276\n      tag_195\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5526:5645   */\n    tag_275:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_277\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_200\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_278\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_200\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_208:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_90:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_281:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_283\n      tag_208\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6329:6413   */\n    tag_282:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6597   */\n    tag_209:\n        /* \"#utility.yul\":6565:6589   */\n      0x5465616d20746f6b656e7320617265206c6f636b656400000000000000000000\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6590   */\n      mstore\n        /* \"#utility.yul\":6425:6597   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6603:6969   */\n    tag_210:\n        /* \"#utility.yul\":6745:6748   */\n      0x00\n        /* \"#utility.yul\":6766:6833   */\n      tag_286\n        /* \"#utility.yul\":6830:6832   */\n      0x16\n        /* \"#utility.yul\":6825:6828   */\n      dup4\n        /* \"#utility.yul\":6766:6833   */\n      tag_190\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":6759:6833   */\n      swap2\n      pop\n        /* \"#utility.yul\":6842:6935   */\n      tag_287\n        /* \"#utility.yul\":6931:6934   */\n      dup3\n        /* \"#utility.yul\":6842:6935   */\n      tag_209\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6960:6962   */\n      0x20\n        /* \"#utility.yul\":6955:6958   */\n      dup3\n        /* \"#utility.yul\":6951:6963   */\n      add\n        /* \"#utility.yul\":6944:6963   */\n      swap1\n      pop\n        /* \"#utility.yul\":6603:6969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6975:7394   */\n    tag_104:\n        /* \"#utility.yul\":7141:7145   */\n      0x00\n        /* \"#utility.yul\":7179:7181   */\n      0x20\n        /* \"#utility.yul\":7168:7177   */\n      dup3\n        /* \"#utility.yul\":7164:7182   */\n      add\n        /* \"#utility.yul\":7156:7182   */\n      swap1\n      pop\n        /* \"#utility.yul\":7228:7237   */\n      dup2\n        /* \"#utility.yul\":7222:7226   */\n      dup2\n        /* \"#utility.yul\":7218:7238   */\n      sub\n        /* \"#utility.yul\":7214:7215   */\n      0x00\n        /* \"#utility.yul\":7203:7212   */\n      dup4\n        /* \"#utility.yul\":7199:7216   */\n      add\n        /* \"#utility.yul\":7192:7239   */\n      mstore\n        /* \"#utility.yul\":7256:7387   */\n      tag_289\n        /* \"#utility.yul\":7382:7386   */\n      dup2\n        /* \"#utility.yul\":7256:7387   */\n      tag_210\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7248:7387   */\n      swap1\n      pop\n        /* \"#utility.yul\":6975:7394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7400:7842   */\n    tag_168:\n        /* \"#utility.yul\":7549:7553   */\n      0x00\n        /* \"#utility.yul\":7587:7589   */\n      0x60\n        /* \"#utility.yul\":7576:7585   */\n      dup3\n        /* \"#utility.yul\":7572:7590   */\n      add\n        /* \"#utility.yul\":7564:7590   */\n      swap1\n      pop\n        /* \"#utility.yul\":7600:7671   */\n      tag_291\n        /* \"#utility.yul\":7668:7669   */\n      0x00\n        /* \"#utility.yul\":7657:7666   */\n      dup4\n        /* \"#utility.yul\":7653:7670   */\n      add\n        /* \"#utility.yul\":7644:7650   */\n      dup7\n        /* \"#utility.yul\":7600:7671   */\n      tag_207\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7681:7753   */\n      tag_292\n        /* \"#utility.yul\":7749:7751   */\n      0x20\n        /* \"#utility.yul\":7738:7747   */\n      dup4\n        /* \"#utility.yul\":7734:7752   */\n      add\n        /* \"#utility.yul\":7725:7731   */\n      dup6\n        /* \"#utility.yul\":7681:7753   */\n      tag_188\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7763:7835   */\n      tag_293\n        /* \"#utility.yul\":7831:7833   */\n      0x40\n        /* \"#utility.yul\":7820:7829   */\n      dup4\n        /* \"#utility.yul\":7816:7834   */\n      add\n        /* \"#utility.yul\":7807:7813   */\n      dup5\n        /* \"#utility.yul\":7763:7835   */\n      tag_188\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7400:7842   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7848:8028   */\n    tag_211:\n        /* \"#utility.yul\":7896:7973   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7893:7894   */\n      0x00\n        /* \"#utility.yul\":7886:7974   */\n      mstore\n        /* \"#utility.yul\":7993:7997   */\n      0x11\n        /* \"#utility.yul\":7990:7991   */\n      0x04\n        /* \"#utility.yul\":7983:7998   */\n      mstore\n        /* \"#utility.yul\":8017:8021   */\n      0x24\n        /* \"#utility.yul\":8014:8015   */\n      0x00\n        /* \"#utility.yul\":8007:8022   */\n      revert\n        /* \"#utility.yul\":8034:8225   */\n    tag_180:\n        /* \"#utility.yul\":8074:8077   */\n      0x00\n        /* \"#utility.yul\":8093:8113   */\n      tag_296\n        /* \"#utility.yul\":8111:8112   */\n      dup3\n        /* \"#utility.yul\":8093:8113   */\n      tag_187\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8088:8113   */\n      swap2\n      pop\n        /* \"#utility.yul\":8127:8147   */\n      tag_297\n        /* \"#utility.yul\":8145:8146   */\n      dup4\n        /* \"#utility.yul\":8127:8147   */\n      tag_187\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8122:8147   */\n      swap3\n      pop\n        /* \"#utility.yul\":8170:8171   */\n      dup3\n        /* \"#utility.yul\":8167:8168   */\n      dup3\n        /* \"#utility.yul\":8163:8172   */\n      add\n        /* \"#utility.yul\":8156:8172   */\n      swap1\n      pop\n        /* \"#utility.yul\":8191:8194   */\n      dup1\n        /* \"#utility.yul\":8188:8189   */\n      dup3\n        /* \"#utility.yul\":8185:8195   */\n      gt\n        /* \"#utility.yul\":8182:8218   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8198:8216   */\n      tag_299\n      tag_211\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8182:8218   */\n    tag_298:\n        /* \"#utility.yul\":8034:8225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122004b8286629f85c16f999fcdec0296e338c87de5f3522159dfd39aaac252bb23864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_117": {
									"entryPoint": null,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_230": {
									"entryPoint": null,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_516": {
									"entryPoint": null,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_819": {
									"entryPoint": 908,
									"id": 819,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_326": {
									"entryPoint": 713,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_786": {
									"entryPoint": 1041,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3187,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6": {
									"entryPoint": 3045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2543,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12598:7",
										"nodeType": "YulBlock",
										"src": "0:12598:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "505:54:7",
													"nodeType": "YulBlock",
													"src": "505:54:7",
													"statements": [
														{
															"nativeSrc": "515:38:7",
															"nodeType": "YulAssignment",
															"src": "515:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:7",
																				"nodeType": "YulLiteral",
																				"src": "540:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:7"
																		},
																		"nativeSrc": "529:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:7",
																				"nodeType": "YulLiteral",
																				"src": "549:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:7"
																		},
																		"nativeSrc": "545:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:7"
																},
																"nativeSrc": "525:28:7",
																"nodeType": "YulFunctionCall",
																"src": "525:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:7",
														"nodeType": "YulTypedName",
														"src": "488:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:7",
														"nodeType": "YulTypedName",
														"src": "498:6:7",
														"type": ""
													}
												],
												"src": "457:102:7"
											},
											{
												"body": {
													"nativeSrc": "593:152:7",
													"nodeType": "YulBlock",
													"src": "593:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:7",
																		"nodeType": "YulLiteral",
																		"src": "610:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:7",
																		"nodeType": "YulLiteral",
																		"src": "613:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:7"
																},
																"nativeSrc": "603:88:7",
																"nodeType": "YulFunctionCall",
																"src": "603:88:7"
															},
															"nativeSrc": "603:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:7",
																		"nodeType": "YulLiteral",
																		"src": "707:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:7",
																		"nodeType": "YulLiteral",
																		"src": "710:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:7"
																},
																"nativeSrc": "700:15:7",
																"nodeType": "YulFunctionCall",
																"src": "700:15:7"
															},
															"nativeSrc": "700:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:7",
																		"nodeType": "YulLiteral",
																		"src": "731:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:7",
																		"nodeType": "YulLiteral",
																		"src": "734:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:7"
																},
																"nativeSrc": "724:15:7",
																"nodeType": "YulFunctionCall",
																"src": "724:15:7"
															},
															"nativeSrc": "724:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:7"
											},
											{
												"body": {
													"nativeSrc": "794:238:7",
													"nodeType": "YulBlock",
													"src": "794:238:7",
													"statements": [
														{
															"nativeSrc": "804:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:7"
																		},
																		"nativeSrc": "834:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:7"
																},
																"nativeSrc": "822:40:7",
																"nodeType": "YulFunctionCall",
																"src": "822:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:7",
																	"nodeType": "YulTypedName",
																	"src": "808:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:7",
																"nodeType": "YulBlock",
																"src": "973:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:7"
																			},
																			"nativeSrc": "975:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:7"
																		},
																		"nativeSrc": "975:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:7",
																				"nodeType": "YulLiteral",
																				"src": "928:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:7"
																		},
																		"nativeSrc": "913:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:7"
																		},
																		"nativeSrc": "949:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:7"
																},
																"nativeSrc": "910:62:7",
																"nodeType": "YulFunctionCall",
																"src": "910:62:7"
															},
															"nativeSrc": "907:88:7",
															"nodeType": "YulIf",
															"src": "907:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:7"
																},
																"nativeSrc": "1004:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:7"
															},
															"nativeSrc": "1004:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:7",
														"nodeType": "YulTypedName",
														"src": "780:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:7",
														"nodeType": "YulTypedName",
														"src": "788:4:7",
														"type": ""
													}
												],
												"src": "751:281:7"
											},
											{
												"body": {
													"nativeSrc": "1079:88:7",
													"nodeType": "YulBlock",
													"src": "1079:88:7",
													"statements": [
														{
															"nativeSrc": "1089:30:7",
															"nodeType": "YulAssignment",
															"src": "1089:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:7"
																},
																"nativeSrc": "1099:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:7"
																},
																"nativeSrc": "1128:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:7"
															},
															"nativeSrc": "1128:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:7",
														"nodeType": "YulTypedName",
														"src": "1063:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:7",
														"nodeType": "YulTypedName",
														"src": "1072:6:7",
														"type": ""
													}
												],
												"src": "1038:129:7"
											},
											{
												"body": {
													"nativeSrc": "1255:229:7",
													"nodeType": "YulBlock",
													"src": "1255:229:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:7",
																"nodeType": "YulBlock",
																"src": "1360:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:7"
																			},
																			"nativeSrc": "1362:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:7"
																		},
																		"nativeSrc": "1362:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:7"
																},
																"nativeSrc": "1329:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:7"
															},
															"nativeSrc": "1326:56:7",
															"nodeType": "YulIf",
															"src": "1326:56:7"
														},
														{
															"nativeSrc": "1392:25:7",
															"nodeType": "YulAssignment",
															"src": "1392:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:7"
																},
																"nativeSrc": "1400:17:7",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:7"
																}
															]
														},
														{
															"nativeSrc": "1454:23:7",
															"nodeType": "YulAssignment",
															"src": "1454:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:7"
																},
																"nativeSrc": "1462:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:7",
														"nodeType": "YulTypedName",
														"src": "1239:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:7",
														"nodeType": "YulTypedName",
														"src": "1250:4:7",
														"type": ""
													}
												],
												"src": "1173:311:7"
											},
											{
												"body": {
													"nativeSrc": "1579:28:7",
													"nodeType": "YulBlock",
													"src": "1579:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:7"
																},
																"nativeSrc": "1589:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:7"
															},
															"nativeSrc": "1589:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:7"
											},
											{
												"body": {
													"nativeSrc": "1658:81:7",
													"nodeType": "YulBlock",
													"src": "1658:81:7",
													"statements": [
														{
															"nativeSrc": "1668:65:7",
															"nodeType": "YulAssignment",
															"src": "1668:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:7"
																},
																"nativeSrc": "1679:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:7",
														"nodeType": "YulTypedName",
														"src": "1640:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:7",
														"nodeType": "YulTypedName",
														"src": "1650:7:7",
														"type": ""
													}
												],
												"src": "1613:126:7"
											},
											{
												"body": {
													"nativeSrc": "1790:51:7",
													"nodeType": "YulBlock",
													"src": "1790:51:7",
													"statements": [
														{
															"nativeSrc": "1800:35:7",
															"nodeType": "YulAssignment",
															"src": "1800:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:7"
																},
																"nativeSrc": "1811:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:7",
														"nodeType": "YulTypedName",
														"src": "1772:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:7",
														"nodeType": "YulTypedName",
														"src": "1782:7:7",
														"type": ""
													}
												],
												"src": "1745:96:7"
											},
											{
												"body": {
													"nativeSrc": "1890:79:7",
													"nodeType": "YulBlock",
													"src": "1890:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:7",
																"nodeType": "YulBlock",
																"src": "1947:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:7"
																			},
																			"nativeSrc": "1949:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:7"
																		},
																		"nativeSrc": "1949:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:7"
																				},
																				"nativeSrc": "1920:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:7"
																		},
																		"nativeSrc": "1910:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:7"
																},
																"nativeSrc": "1903:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:7"
															},
															"nativeSrc": "1900:63:7",
															"nodeType": "YulIf",
															"src": "1900:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:7",
														"nodeType": "YulTypedName",
														"src": "1883:5:7",
														"type": ""
													}
												],
												"src": "1847:122:7"
											},
											{
												"body": {
													"nativeSrc": "2038:80:7",
													"nodeType": "YulBlock",
													"src": "2038:80:7",
													"statements": [
														{
															"nativeSrc": "2048:22:7",
															"nodeType": "YulAssignment",
															"src": "2048:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2063:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2057:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:7"
																},
																"nativeSrc": "2057:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2057:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2106:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2079:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:7"
																},
																"nativeSrc": "2079:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2079:33:7"
															},
															"nativeSrc": "2079:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1975:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:7",
														"nodeType": "YulTypedName",
														"src": "2016:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:7",
														"nodeType": "YulTypedName",
														"src": "2024:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:7",
														"nodeType": "YulTypedName",
														"src": "2032:5:7",
														"type": ""
													}
												],
												"src": "1975:143:7"
											},
											{
												"body": {
													"nativeSrc": "2254:619:7",
													"nodeType": "YulBlock",
													"src": "2254:619:7",
													"statements": [
														{
															"nativeSrc": "2264:90:7",
															"nodeType": "YulAssignment",
															"src": "2264:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:7"
																		},
																		"nativeSrc": "2289:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:7"
																},
																"nativeSrc": "2273:81:7",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:7"
																}
															]
														},
														{
															"nativeSrc": "2363:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:7",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:7",
																"nodeType": "YulIdentifier",
																"src": "2374:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:7"
																},
																"nativeSrc": "2389:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:7"
															},
															"nativeSrc": "2389:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:7"
														},
														{
															"nativeSrc": "2419:23:7",
															"nodeType": "YulAssignment",
															"src": "2419:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:7"
																},
																"nativeSrc": "2426:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:7"
																}
															]
														},
														{
															"nativeSrc": "2452:44:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:7"
																		},
																		"nativeSrc": "2478:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:7"
																},
																"nativeSrc": "2466:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:7",
																"nodeType": "YulBlock",
																"src": "2524:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:7"
																			},
																			"nativeSrc": "2538:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:7"
																		},
																		"nativeSrc": "2538:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:7"
																},
																"nativeSrc": "2508:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:7"
															},
															"nativeSrc": "2505:122:7",
															"nodeType": "YulIf",
															"src": "2505:122:7"
														},
														{
															"body": {
																"nativeSrc": "2712:155:7",
																"nodeType": "YulBlock",
																"src": "2712:155:7",
																"statements": [
																	{
																		"nativeSrc": "2727:21:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:7",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:7",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:7"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:7"
																					},
																					"nativeSrc": "2774:48:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:7"
																			},
																			"nativeSrc": "2762:61:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:7"
																		},
																		"nativeSrc": "2762:61:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:7"
																	},
																	{
																		"nativeSrc": "2836:21:7",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:7"
																			},
																			"nativeSrc": "2843:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:7"
																},
																"nativeSrc": "2662:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:7"
															},
															"nativeSrc": "2636:231:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:7",
																"nodeType": "YulBlock",
																"src": "2678:25:7",
																"statements": [
																	{
																		"nativeSrc": "2680:21:7",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:7"
																			},
																			"nativeSrc": "2687:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:7",
																"nodeType": "YulBlock",
																"src": "2640:21:7",
																"statements": [
																	{
																		"nativeSrc": "2642:17:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:7",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:7",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:7",
														"nodeType": "YulTypedName",
														"src": "2224:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:7",
														"nodeType": "YulTypedName",
														"src": "2232:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:7",
														"nodeType": "YulTypedName",
														"src": "2240:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:7",
														"nodeType": "YulTypedName",
														"src": "2248:5:7",
														"type": ""
													}
												],
												"src": "2141:732:7"
											},
											{
												"body": {
													"nativeSrc": "2984:297:7",
													"nodeType": "YulBlock",
													"src": "2984:297:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:7",
																"nodeType": "YulBlock",
																"src": "3033:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:7"
																			},
																			"nativeSrc": "3035:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:7"
																		},
																		"nativeSrc": "3035:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:7"
																				},
																				"nativeSrc": "3008:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:7"
																		},
																		"nativeSrc": "3004:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:7"
																},
																"nativeSrc": "2997:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:7"
															},
															"nativeSrc": "2994:122:7",
															"nodeType": "YulIf",
															"src": "2994:122:7"
														},
														{
															"nativeSrc": "3125:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:7"
																},
																"nativeSrc": "3139:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:7",
															"nodeType": "YulAssignment",
															"src": "3161:114:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:7"
																		},
																		"nativeSrc": "3244:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:7"
																},
																"nativeSrc": "3170:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:7",
														"nodeType": "YulTypedName",
														"src": "2962:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:7",
														"nodeType": "YulTypedName",
														"src": "2970:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:7",
														"nodeType": "YulTypedName",
														"src": "2978:5:7",
														"type": ""
													}
												],
												"src": "2896:385:7"
											},
											{
												"body": {
													"nativeSrc": "3389:452:7",
													"nodeType": "YulBlock",
													"src": "3389:452:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3435:83:7",
																"nodeType": "YulBlock",
																"src": "3435:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3437:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3437:77:7"
																			},
																			"nativeSrc": "3437:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3437:79:7"
																		},
																		"nativeSrc": "3437:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3437:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3410:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3406:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:7"
																		},
																		"nativeSrc": "3406:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3431:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3402:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:7"
																},
																"nativeSrc": "3402:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3402:32:7"
															},
															"nativeSrc": "3399:119:7",
															"nodeType": "YulIf",
															"src": "3399:119:7"
														},
														{
															"nativeSrc": "3528:306:7",
															"nodeType": "YulBlock",
															"src": "3528:306:7",
															"statements": [
																{
																	"nativeSrc": "3543:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3543:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3567:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3567:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3578:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3578:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3563:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:7"
																				},
																				"nativeSrc": "3563:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3563:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3557:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3557:5:7"
																		},
																		"nativeSrc": "3557:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3547:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3547:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3628:83:7",
																		"nodeType": "YulBlock",
																		"src": "3628:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3630:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3630:77:7"
																					},
																					"nativeSrc": "3630:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3630:79:7"
																				},
																				"nativeSrc": "3630:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3630:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3600:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3608:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3608:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3597:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3597:2:7"
																		},
																		"nativeSrc": "3597:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3597:30:7"
																	},
																	"nativeSrc": "3594:117:7",
																	"nodeType": "YulIf",
																	"src": "3594:117:7"
																},
																{
																	"nativeSrc": "3725:99:7",
																	"nodeType": "YulAssignment",
																	"src": "3725:99:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3796:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3796:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3807:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3807:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3792:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3792:3:7"
																				},
																				"nativeSrc": "3792:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3792:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3816:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3816:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3735:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "3735:56:7"
																		},
																		"nativeSrc": "3735:89:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3735:89:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3725:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3725:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3287:554:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3359:9:7",
														"nodeType": "YulTypedName",
														"src": "3359:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3370:7:7",
														"nodeType": "YulTypedName",
														"src": "3370:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3382:6:7",
														"nodeType": "YulTypedName",
														"src": "3382:6:7",
														"type": ""
													}
												],
												"src": "3287:554:7"
											},
											{
												"body": {
													"nativeSrc": "3906:40:7",
													"nodeType": "YulBlock",
													"src": "3906:40:7",
													"statements": [
														{
															"nativeSrc": "3917:22:7",
															"nodeType": "YulAssignment",
															"src": "3917:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3933:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3933:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3927:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3927:5:7"
																},
																"nativeSrc": "3927:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3927:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3917:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3847:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3889:5:7",
														"nodeType": "YulTypedName",
														"src": "3889:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3899:6:7",
														"nodeType": "YulTypedName",
														"src": "3899:6:7",
														"type": ""
													}
												],
												"src": "3847:99:7"
											},
											{
												"body": {
													"nativeSrc": "3980:152:7",
													"nodeType": "YulBlock",
													"src": "3980:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3997:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3997:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4000:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4000:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3990:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:7"
																},
																"nativeSrc": "3990:88:7",
																"nodeType": "YulFunctionCall",
																"src": "3990:88:7"
															},
															"nativeSrc": "3990:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "3990:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4094:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4094:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4097:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4087:6:7"
																},
																"nativeSrc": "4087:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4087:15:7"
															},
															"nativeSrc": "4087:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4087:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4118:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4121:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4121:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4111:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:7"
																},
																"nativeSrc": "4111:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4111:15:7"
															},
															"nativeSrc": "4111:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4111:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3952:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3952:180:7"
											},
											{
												"body": {
													"nativeSrc": "4189:269:7",
													"nodeType": "YulBlock",
													"src": "4189:269:7",
													"statements": [
														{
															"nativeSrc": "4199:22:7",
															"nodeType": "YulAssignment",
															"src": "4199:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4213:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4219:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4209:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:7"
																},
																"nativeSrc": "4209:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4209:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:7"
																}
															]
														},
														{
															"nativeSrc": "4230:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4230:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4260:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4260:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4266:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4256:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:7"
																},
																"nativeSrc": "4256:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4256:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4234:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4234:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4307:51:7",
																"nodeType": "YulBlock",
																"src": "4307:51:7",
																"statements": [
																	{
																		"nativeSrc": "4321:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4321:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4335:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4335:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4343:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4343:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4331:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4331:3:7"
																			},
																			"nativeSrc": "4331:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4331:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4321:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4321:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4287:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4287:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4280:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:7"
																},
																"nativeSrc": "4280:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4280:26:7"
															},
															"nativeSrc": "4277:81:7",
															"nodeType": "YulIf",
															"src": "4277:81:7"
														},
														{
															"body": {
																"nativeSrc": "4410:42:7",
																"nodeType": "YulBlock",
																"src": "4410:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4424:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4424:16:7"
																			},
																			"nativeSrc": "4424:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4424:18:7"
																		},
																		"nativeSrc": "4424:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4424:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4374:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4374:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4397:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4405:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4394:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4394:2:7"
																		},
																		"nativeSrc": "4394:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4371:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:7"
																},
																"nativeSrc": "4371:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4371:38:7"
															},
															"nativeSrc": "4368:84:7",
															"nodeType": "YulIf",
															"src": "4368:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4138:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4173:4:7",
														"nodeType": "YulTypedName",
														"src": "4173:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4182:6:7",
														"nodeType": "YulTypedName",
														"src": "4182:6:7",
														"type": ""
													}
												],
												"src": "4138:320:7"
											},
											{
												"body": {
													"nativeSrc": "4518:87:7",
													"nodeType": "YulBlock",
													"src": "4518:87:7",
													"statements": [
														{
															"nativeSrc": "4528:11:7",
															"nodeType": "YulAssignment",
															"src": "4528:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4536:3:7",
																"nodeType": "YulIdentifier",
																"src": "4536:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4528:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4528:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4556:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4556:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4559:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4559:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4549:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4549:6:7"
																},
																"nativeSrc": "4549:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4549:14:7"
															},
															"nativeSrc": "4549:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4549:14:7"
														},
														{
															"nativeSrc": "4572:26:7",
															"nodeType": "YulAssignment",
															"src": "4572:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4590:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4590:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4593:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4593:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4580:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4580:9:7"
																},
																"nativeSrc": "4580:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4580:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4572:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4572:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4464:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4505:3:7",
														"nodeType": "YulTypedName",
														"src": "4505:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4513:4:7",
														"nodeType": "YulTypedName",
														"src": "4513:4:7",
														"type": ""
													}
												],
												"src": "4464:141:7"
											},
											{
												"body": {
													"nativeSrc": "4655:49:7",
													"nodeType": "YulBlock",
													"src": "4655:49:7",
													"statements": [
														{
															"nativeSrc": "4665:33:7",
															"nodeType": "YulAssignment",
															"src": "4665:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4683:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4683:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4690:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4690:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4679:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:7"
																		},
																		"nativeSrc": "4679:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4679:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4695:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4695:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4675:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:7"
																},
																"nativeSrc": "4675:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4675:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4665:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4611:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4638:5:7",
														"nodeType": "YulTypedName",
														"src": "4638:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4648:6:7",
														"nodeType": "YulTypedName",
														"src": "4648:6:7",
														"type": ""
													}
												],
												"src": "4611:93:7"
											},
											{
												"body": {
													"nativeSrc": "4763:54:7",
													"nodeType": "YulBlock",
													"src": "4763:54:7",
													"statements": [
														{
															"nativeSrc": "4773:37:7",
															"nodeType": "YulAssignment",
															"src": "4773:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4798:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4798:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4804:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4804:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4794:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4794:3:7"
																},
																"nativeSrc": "4794:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4794:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4773:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4710:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4738:4:7",
														"nodeType": "YulTypedName",
														"src": "4738:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4744:5:7",
														"nodeType": "YulTypedName",
														"src": "4744:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4754:8:7",
														"nodeType": "YulTypedName",
														"src": "4754:8:7",
														"type": ""
													}
												],
												"src": "4710:107:7"
											},
											{
												"body": {
													"nativeSrc": "4899:317:7",
													"nodeType": "YulBlock",
													"src": "4899:317:7",
													"statements": [
														{
															"nativeSrc": "4909:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4909:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4930:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "4930:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4942:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4926:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:7"
																},
																"nativeSrc": "4926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4926:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4913:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4913:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4953:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4953:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4984:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4984:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4995:66:7",
																		"nodeType": "YulLiteral",
																		"src": "4995:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4965:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:18:7"
																},
																"nativeSrc": "4965:97:7",
																"nodeType": "YulFunctionCall",
																"src": "4965:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4957:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4957:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5071:51:7",
															"nodeType": "YulAssignment",
															"src": "5071:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5102:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5102:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5113:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5113:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5083:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5083:18:7"
																},
																"nativeSrc": "5083:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5083:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5071:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5071:8:7"
																}
															]
														},
														{
															"nativeSrc": "5131:30:7",
															"nodeType": "YulAssignment",
															"src": "5131:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5144:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5144:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5155:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5155:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5151:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:7"
																		},
																		"nativeSrc": "5151:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:7"
																},
																"nativeSrc": "5140:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5140:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5131:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5131:5:7"
																}
															]
														},
														{
															"nativeSrc": "5170:40:7",
															"nodeType": "YulAssignment",
															"src": "5170:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5183:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5183:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5194:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5204:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5204:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5190:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:7"
																		},
																		"nativeSrc": "5190:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5190:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5180:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5180:2:7"
																},
																"nativeSrc": "5180:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5180:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5170:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4823:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4860:5:7",
														"nodeType": "YulTypedName",
														"src": "4860:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4867:10:7",
														"nodeType": "YulTypedName",
														"src": "4867:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4879:8:7",
														"nodeType": "YulTypedName",
														"src": "4879:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4892:6:7",
														"nodeType": "YulTypedName",
														"src": "4892:6:7",
														"type": ""
													}
												],
												"src": "4823:393:7"
											},
											{
												"body": {
													"nativeSrc": "5267:32:7",
													"nodeType": "YulBlock",
													"src": "5267:32:7",
													"statements": [
														{
															"nativeSrc": "5277:16:7",
															"nodeType": "YulAssignment",
															"src": "5277:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "5288:5:7",
																"nodeType": "YulIdentifier",
																"src": "5288:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5277:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5277:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5222:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5249:5:7",
														"nodeType": "YulTypedName",
														"src": "5249:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5259:7:7",
														"nodeType": "YulTypedName",
														"src": "5259:7:7",
														"type": ""
													}
												],
												"src": "5222:77:7"
											},
											{
												"body": {
													"nativeSrc": "5337:28:7",
													"nodeType": "YulBlock",
													"src": "5337:28:7",
													"statements": [
														{
															"nativeSrc": "5347:12:7",
															"nodeType": "YulAssignment",
															"src": "5347:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5354:5:7",
																"nodeType": "YulIdentifier",
																"src": "5354:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5347:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5305:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5323:5:7",
														"nodeType": "YulTypedName",
														"src": "5323:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5333:3:7",
														"nodeType": "YulTypedName",
														"src": "5333:3:7",
														"type": ""
													}
												],
												"src": "5305:60:7"
											},
											{
												"body": {
													"nativeSrc": "5431:82:7",
													"nodeType": "YulBlock",
													"src": "5431:82:7",
													"statements": [
														{
															"nativeSrc": "5441:66:7",
															"nodeType": "YulAssignment",
															"src": "5441:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5499:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5499:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5481:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5481:17:7"
																				},
																				"nativeSrc": "5481:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5481:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5472:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5472:8:7"
																		},
																		"nativeSrc": "5472:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5454:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5454:17:7"
																},
																"nativeSrc": "5454:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5454:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5441:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5441:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5371:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5411:5:7",
														"nodeType": "YulTypedName",
														"src": "5411:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5421:9:7",
														"nodeType": "YulTypedName",
														"src": "5421:9:7",
														"type": ""
													}
												],
												"src": "5371:142:7"
											},
											{
												"body": {
													"nativeSrc": "5566:28:7",
													"nodeType": "YulBlock",
													"src": "5566:28:7",
													"statements": [
														{
															"nativeSrc": "5576:12:7",
															"nodeType": "YulAssignment",
															"src": "5576:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5583:5:7",
																"nodeType": "YulIdentifier",
																"src": "5583:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5576:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5519:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5552:5:7",
														"nodeType": "YulTypedName",
														"src": "5552:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5562:3:7",
														"nodeType": "YulTypedName",
														"src": "5562:3:7",
														"type": ""
													}
												],
												"src": "5519:75:7"
											},
											{
												"body": {
													"nativeSrc": "5676:193:7",
													"nodeType": "YulBlock",
													"src": "5676:193:7",
													"statements": [
														{
															"nativeSrc": "5686:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5686:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5741:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5741:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5710:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5710:30:7"
																},
																"nativeSrc": "5710:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5710:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5690:16:7",
																	"nodeType": "YulTypedName",
																	"src": "5690:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5765:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5765:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5805:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "5805:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5799:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "5799:5:7"
																				},
																				"nativeSrc": "5799:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5799:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5812:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5812:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5844:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "5844:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5820:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "5820:23:7"
																				},
																				"nativeSrc": "5820:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5820:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5771:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "5771:27:7"
																		},
																		"nativeSrc": "5771:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5771:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5758:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:7"
																},
																"nativeSrc": "5758:105:7",
																"nodeType": "YulFunctionCall",
																"src": "5758:105:7"
															},
															"nativeSrc": "5758:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "5758:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5600:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5653:4:7",
														"nodeType": "YulTypedName",
														"src": "5653:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5659:6:7",
														"nodeType": "YulTypedName",
														"src": "5659:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5667:7:7",
														"nodeType": "YulTypedName",
														"src": "5667:7:7",
														"type": ""
													}
												],
												"src": "5600:269:7"
											},
											{
												"body": {
													"nativeSrc": "5924:24:7",
													"nodeType": "YulBlock",
													"src": "5924:24:7",
													"statements": [
														{
															"nativeSrc": "5934:8:7",
															"nodeType": "YulAssignment",
															"src": "5934:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5941:1:7",
																"nodeType": "YulLiteral",
																"src": "5941:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5934:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5875:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5920:3:7",
														"nodeType": "YulTypedName",
														"src": "5920:3:7",
														"type": ""
													}
												],
												"src": "5875:73:7"
											},
											{
												"body": {
													"nativeSrc": "6007:136:7",
													"nodeType": "YulBlock",
													"src": "6007:136:7",
													"statements": [
														{
															"nativeSrc": "6017:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6017:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6031:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6031:30:7"
																},
																"nativeSrc": "6031:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6031:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6021:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6021:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6116:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6116:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6122:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6130:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6130:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6072:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:43:7"
																},
																"nativeSrc": "6072:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:65:7"
															},
															"nativeSrc": "6072:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5954:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5993:4:7",
														"nodeType": "YulTypedName",
														"src": "5993:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5999:6:7",
														"nodeType": "YulTypedName",
														"src": "5999:6:7",
														"type": ""
													}
												],
												"src": "5954:189:7"
											},
											{
												"body": {
													"nativeSrc": "6199:136:7",
													"nodeType": "YulBlock",
													"src": "6199:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6266:63:7",
																"nodeType": "YulBlock",
																"src": "6266:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6310:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6310:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6317:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6317:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6280:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6280:29:7"
																			},
																			"nativeSrc": "6280:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6280:39:7"
																		},
																		"nativeSrc": "6280:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6280:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6219:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6219:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6226:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6226:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6216:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6216:2:7"
																},
																"nativeSrc": "6216:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6216:14:7"
															},
															"nativeSrc": "6209:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6231:26:7",
																"nodeType": "YulBlock",
																"src": "6231:26:7",
																"statements": [
																	{
																		"nativeSrc": "6233:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6233:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6246:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6246:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6253:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6253:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6242:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6242:3:7"
																			},
																			"nativeSrc": "6242:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6242:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6233:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6233:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6213:2:7",
																"nodeType": "YulBlock",
																"src": "6213:2:7",
																"statements": []
															},
															"src": "6209:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6149:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6187:5:7",
														"nodeType": "YulTypedName",
														"src": "6187:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6194:3:7",
														"nodeType": "YulTypedName",
														"src": "6194:3:7",
														"type": ""
													}
												],
												"src": "6149:186:7"
											},
											{
												"body": {
													"nativeSrc": "6420:464:7",
													"nodeType": "YulBlock",
													"src": "6420:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6446:431:7",
																"nodeType": "YulBlock",
																"src": "6446:431:7",
																"statements": [
																	{
																		"nativeSrc": "6460:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6460:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6508:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6508:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6476:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6476:31:7"
																			},
																			"nativeSrc": "6476:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6464:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6464:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6527:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6527:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6550:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6550:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6578:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6578:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6560:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "6560:17:7"
																					},
																					"nativeSrc": "6560:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6560:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6546:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6546:3:7"
																			},
																			"nativeSrc": "6546:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6546:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6531:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6531:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6747:27:7",
																			"nodeType": "YulBlock",
																			"src": "6747:27:7",
																			"statements": [
																				{
																					"nativeSrc": "6749:23:7",
																					"nodeType": "YulAssignment",
																					"src": "6749:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6764:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "6764:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6749:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "6749:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6731:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6731:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6743:2:7",
																					"nodeType": "YulLiteral",
																					"src": "6743:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6728:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6728:2:7"
																			},
																			"nativeSrc": "6728:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6728:18:7"
																		},
																		"nativeSrc": "6725:49:7",
																		"nodeType": "YulIf",
																		"src": "6725:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6816:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "6816:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6833:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "6833:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6861:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6861:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6843:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "6843:17:7"
																							},
																							"nativeSrc": "6843:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6843:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6829:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6829:3:7"
																					},
																					"nativeSrc": "6829:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6829:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6787:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "6787:28:7"
																			},
																			"nativeSrc": "6787:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6787:80:7"
																		},
																		"nativeSrc": "6787:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6787:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6437:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6437:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6442:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6442:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6434:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:7"
																},
																"nativeSrc": "6434:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6434:11:7"
															},
															"nativeSrc": "6431:446:7",
															"nodeType": "YulIf",
															"src": "6431:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6341:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6396:5:7",
														"nodeType": "YulTypedName",
														"src": "6396:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6403:3:7",
														"nodeType": "YulTypedName",
														"src": "6403:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6408:10:7",
														"nodeType": "YulTypedName",
														"src": "6408:10:7",
														"type": ""
													}
												],
												"src": "6341:543:7"
											},
											{
												"body": {
													"nativeSrc": "6953:54:7",
													"nodeType": "YulBlock",
													"src": "6953:54:7",
													"statements": [
														{
															"nativeSrc": "6963:37:7",
															"nodeType": "YulAssignment",
															"src": "6963:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6988:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6988:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6994:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6994:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6984:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6984:3:7"
																},
																"nativeSrc": "6984:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6984:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6963:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6963:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6890:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6928:4:7",
														"nodeType": "YulTypedName",
														"src": "6928:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6934:5:7",
														"nodeType": "YulTypedName",
														"src": "6934:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6944:8:7",
														"nodeType": "YulTypedName",
														"src": "6944:8:7",
														"type": ""
													}
												],
												"src": "6890:117:7"
											},
											{
												"body": {
													"nativeSrc": "7064:118:7",
													"nodeType": "YulBlock",
													"src": "7064:118:7",
													"statements": [
														{
															"nativeSrc": "7074:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7074:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7123:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7123:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7126:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7126:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7119:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7119:3:7"
																				},
																				"nativeSrc": "7119:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7119:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7138:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7134:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:7"
																				},
																				"nativeSrc": "7134:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7134:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7090:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7090:28:7"
																		},
																		"nativeSrc": "7090:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7090:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7086:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:7"
																},
																"nativeSrc": "7086:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7086:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7078:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7078:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7151:25:7",
															"nodeType": "YulAssignment",
															"src": "7151:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7165:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7165:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7171:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7171:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7161:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:7"
																},
																"nativeSrc": "7161:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7161:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7151:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7013:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7041:4:7",
														"nodeType": "YulTypedName",
														"src": "7041:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7047:5:7",
														"nodeType": "YulTypedName",
														"src": "7047:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7057:6:7",
														"nodeType": "YulTypedName",
														"src": "7057:6:7",
														"type": ""
													}
												],
												"src": "7013:169:7"
											},
											{
												"body": {
													"nativeSrc": "7268:214:7",
													"nodeType": "YulBlock",
													"src": "7268:214:7",
													"statements": [
														{
															"nativeSrc": "7401:37:7",
															"nodeType": "YulAssignment",
															"src": "7401:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7428:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7428:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7434:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7434:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7409:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7409:18:7"
																},
																"nativeSrc": "7409:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7409:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7401:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7401:4:7"
																}
															]
														},
														{
															"nativeSrc": "7447:29:7",
															"nodeType": "YulAssignment",
															"src": "7447:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7458:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7458:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7468:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7468:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7471:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7471:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7464:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:7"
																		},
																		"nativeSrc": "7464:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7464:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7455:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7455:2:7"
																},
																"nativeSrc": "7455:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7455:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7447:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7447:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7187:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7249:4:7",
														"nodeType": "YulTypedName",
														"src": "7249:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7255:3:7",
														"nodeType": "YulTypedName",
														"src": "7255:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7263:4:7",
														"nodeType": "YulTypedName",
														"src": "7263:4:7",
														"type": ""
													}
												],
												"src": "7187:295:7"
											},
											{
												"body": {
													"nativeSrc": "7579:1303:7",
													"nodeType": "YulBlock",
													"src": "7579:1303:7",
													"statements": [
														{
															"nativeSrc": "7590:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7590:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7637:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7637:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7604:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "7604:32:7"
																},
																"nativeSrc": "7604:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7604:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7594:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7594:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7726:22:7",
																"nodeType": "YulBlock",
																"src": "7726:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7728:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7728:16:7"
																			},
																			"nativeSrc": "7728:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7728:18:7"
																		},
																		"nativeSrc": "7728:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7698:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7698:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7706:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7706:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7695:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7695:2:7"
																},
																"nativeSrc": "7695:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7695:30:7"
															},
															"nativeSrc": "7692:56:7",
															"nodeType": "YulIf",
															"src": "7692:56:7"
														},
														{
															"nativeSrc": "7758:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7758:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7804:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7804:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7798:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7798:5:7"
																		},
																		"nativeSrc": "7798:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7798:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7772:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "7772:25:7"
																},
																"nativeSrc": "7772:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7772:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7762:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7762:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7903:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7903:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7909:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7909:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7917:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7857:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "7857:45:7"
																},
																"nativeSrc": "7857:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7857:67:7"
															},
															"nativeSrc": "7857:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "7857:67:7"
														},
														{
															"nativeSrc": "7934:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7934:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7951:1:7",
																"nodeType": "YulLiteral",
																"src": "7951:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7938:9:7",
																	"nodeType": "YulTypedName",
																	"src": "7938:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7962:17:7",
															"nodeType": "YulAssignment",
															"src": "7962:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7975:4:7",
																"nodeType": "YulLiteral",
																"src": "7975:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7962:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7962:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8026:611:7",
																		"nodeType": "YulBlock",
																		"src": "8026:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8040:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8040:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8059:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8059:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8071:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8071:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8067:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8067:3:7"
																							},
																							"nativeSrc": "8067:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8067:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8055:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8055:3:7"
																					},
																					"nativeSrc": "8055:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8055:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8044:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8044:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8091:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8091:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8137:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8137:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8105:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8105:31:7"
																					},
																					"nativeSrc": "8105:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8105:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8095:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8095:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8155:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8155:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8164:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8159:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8159:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8223:163:7",
																					"nodeType": "YulBlock",
																					"src": "8223:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8248:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8248:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8266:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8266:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8271:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8271:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8262:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8262:3:7"
																												},
																												"nativeSrc": "8262:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8262:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8256:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8256:5:7"
																										},
																										"nativeSrc": "8256:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8256:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8241:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8241:6:7"
																								},
																								"nativeSrc": "8241:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8241:42:7"
																							},
																							"nativeSrc": "8241:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8241:42:7"
																						},
																						{
																							"nativeSrc": "8300:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8300:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8314:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8314:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8322:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8322:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8310:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8310:3:7"
																								},
																								"nativeSrc": "8310:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8310:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8300:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8300:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8341:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8341:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8358:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8358:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8369:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8369:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8354:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8354:3:7"
																								},
																								"nativeSrc": "8354:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8354:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8341:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8341:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8189:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8189:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8192:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8192:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8186:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8186:2:7"
																					},
																					"nativeSrc": "8186:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8186:14:7"
																				},
																				"nativeSrc": "8178:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8201:21:7",
																					"nodeType": "YulBlock",
																					"src": "8201:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8203:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8203:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8212:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8212:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8215:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8215:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8208:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8208:3:7"
																								},
																								"nativeSrc": "8208:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8208:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8203:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8203:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8182:3:7",
																					"nodeType": "YulBlock",
																					"src": "8182:3:7",
																					"statements": []
																				},
																				"src": "8178:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8422:156:7",
																					"nodeType": "YulBlock",
																					"src": "8422:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8440:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8440:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8467:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8467:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8472:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8472:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8463:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8463:3:7"
																										},
																										"nativeSrc": "8463:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8463:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8457:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8457:5:7"
																								},
																								"nativeSrc": "8457:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8444:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8444:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8507:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8507:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8534:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8534:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8549:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8549:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8557:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8557:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8545:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8545:3:7"
																												},
																												"nativeSrc": "8545:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8545:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8515:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8515:18:7"
																										},
																										"nativeSrc": "8515:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8515:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8500:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8500:6:7"
																								},
																								"nativeSrc": "8500:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8500:64:7"
																							},
																							"nativeSrc": "8500:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8500:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8405:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8405:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8414:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8414:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8402:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8402:2:7"
																					},
																					"nativeSrc": "8402:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8402:19:7"
																				},
																				"nativeSrc": "8399:179:7",
																				"nodeType": "YulIf",
																				"src": "8399:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8598:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8598:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8612:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "8612:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8620:1:7",
																											"nodeType": "YulLiteral",
																											"src": "8620:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8608:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "8608:3:7"
																									},
																									"nativeSrc": "8608:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "8608:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8624:1:7",
																									"nodeType": "YulLiteral",
																									"src": "8624:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8604:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8604:3:7"
																							},
																							"nativeSrc": "8604:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8604:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8591:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8591:6:7"
																					},
																					"nativeSrc": "8591:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8591:36:7"
																				},
																				"nativeSrc": "8591:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8591:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8019:618:7",
																	"nodeType": "YulCase",
																	"src": "8019:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8024:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8024:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8654:222:7",
																		"nodeType": "YulBlock",
																		"src": "8654:222:7",
																		"statements": [
																			{
																				"nativeSrc": "8668:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8668:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8681:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8681:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8672:5:7",
																						"nodeType": "YulTypedName",
																						"src": "8672:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8705:67:7",
																					"nodeType": "YulBlock",
																					"src": "8705:67:7",
																					"statements": [
																						{
																							"nativeSrc": "8723:35:7",
																							"nodeType": "YulAssignment",
																							"src": "8723:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8742:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8742:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8747:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8747:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8738:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8738:3:7"
																										},
																										"nativeSrc": "8738:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8738:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8732:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8732:5:7"
																								},
																								"nativeSrc": "8732:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8732:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8723:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8723:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8698:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8698:6:7"
																				},
																				"nativeSrc": "8695:77:7",
																				"nodeType": "YulIf",
																				"src": "8695:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8792:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8792:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8851:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8851:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8858:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8858:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8798:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "8798:52:7"
																							},
																							"nativeSrc": "8798:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8798:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8785:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8785:6:7"
																					},
																					"nativeSrc": "8785:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8785:81:7"
																				},
																				"nativeSrc": "8785:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8785:81:7"
																			}
																		]
																	},
																	"nativeSrc": "8646:230:7",
																	"nodeType": "YulCase",
																	"src": "8646:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7999:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8007:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8007:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7996:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7996:2:7"
																},
																"nativeSrc": "7996:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7996:14:7"
															},
															"nativeSrc": "7989:887:7",
															"nodeType": "YulSwitch",
															"src": "7989:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7487:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7568:4:7",
														"nodeType": "YulTypedName",
														"src": "7568:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7574:3:7",
														"nodeType": "YulTypedName",
														"src": "7574:3:7",
														"type": ""
													}
												],
												"src": "7487:1395:7"
											},
											{
												"body": {
													"nativeSrc": "8953:53:7",
													"nodeType": "YulBlock",
													"src": "8953:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8970:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8970:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8993:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8993:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8975:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8975:17:7"
																		},
																		"nativeSrc": "8975:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8975:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:7"
																},
																"nativeSrc": "8963:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8963:37:7"
															},
															"nativeSrc": "8963:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8963:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8888:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8941:5:7",
														"nodeType": "YulTypedName",
														"src": "8941:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8948:3:7",
														"nodeType": "YulTypedName",
														"src": "8948:3:7",
														"type": ""
													}
												],
												"src": "8888:118:7"
											},
											{
												"body": {
													"nativeSrc": "9110:124:7",
													"nodeType": "YulBlock",
													"src": "9110:124:7",
													"statements": [
														{
															"nativeSrc": "9120:26:7",
															"nodeType": "YulAssignment",
															"src": "9120:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9132:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9132:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9143:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9143:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9128:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9128:3:7"
																},
																"nativeSrc": "9128:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9128:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9120:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9120:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9200:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9200:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9213:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9213:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9224:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9224:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9209:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9209:3:7"
																		},
																		"nativeSrc": "9209:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9209:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9156:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9156:43:7"
																},
																"nativeSrc": "9156:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9156:71:7"
															},
															"nativeSrc": "9156:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9156:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9012:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9082:9:7",
														"nodeType": "YulTypedName",
														"src": "9082:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9094:6:7",
														"nodeType": "YulTypedName",
														"src": "9094:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9105:4:7",
														"nodeType": "YulTypedName",
														"src": "9105:4:7",
														"type": ""
													}
												],
												"src": "9012:222:7"
											},
											{
												"body": {
													"nativeSrc": "9336:73:7",
													"nodeType": "YulBlock",
													"src": "9336:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9353:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9358:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9358:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9346:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:7"
																},
																"nativeSrc": "9346:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9346:19:7"
															},
															"nativeSrc": "9346:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9346:19:7"
														},
														{
															"nativeSrc": "9374:29:7",
															"nodeType": "YulAssignment",
															"src": "9374:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9393:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9398:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9398:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9389:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:7"
																},
																"nativeSrc": "9389:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9389:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9374:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9374:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9240:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9308:3:7",
														"nodeType": "YulTypedName",
														"src": "9308:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9313:6:7",
														"nodeType": "YulTypedName",
														"src": "9313:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9324:11:7",
														"nodeType": "YulTypedName",
														"src": "9324:11:7",
														"type": ""
													}
												],
												"src": "9240:169:7"
											},
											{
												"body": {
													"nativeSrc": "9521:115:7",
													"nodeType": "YulBlock",
													"src": "9521:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9543:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9543:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9551:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9551:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9539:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:7"
																		},
																		"nativeSrc": "9539:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9539:14:7"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e65207465616d206164647265737320726571756972",
																		"kind": "string",
																		"nativeSrc": "9555:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9555:34:7",
																		"type": "",
																		"value": "At least one team address requir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9532:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:7"
																},
																"nativeSrc": "9532:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9532:58:7"
															},
															"nativeSrc": "9532:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9532:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9611:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9611:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9619:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9619:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:7"
																		},
																		"nativeSrc": "9607:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:15:7"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "9624:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9624:4:7",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:7"
																},
																"nativeSrc": "9600:29:7",
																"nodeType": "YulFunctionCall",
																"src": "9600:29:7"
															},
															"nativeSrc": "9600:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "9600:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6",
												"nativeSrc": "9415:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9513:6:7",
														"nodeType": "YulTypedName",
														"src": "9513:6:7",
														"type": ""
													}
												],
												"src": "9415:221:7"
											},
											{
												"body": {
													"nativeSrc": "9788:220:7",
													"nodeType": "YulBlock",
													"src": "9788:220:7",
													"statements": [
														{
															"nativeSrc": "9798:74:7",
															"nodeType": "YulAssignment",
															"src": "9798:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9864:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9864:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9869:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9869:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9805:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9805:58:7"
																},
																"nativeSrc": "9805:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9805:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9798:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9798:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9970:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9970:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6",
																	"nativeSrc": "9881:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9881:88:7"
																},
																"nativeSrc": "9881:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9881:93:7"
															},
															"nativeSrc": "9881:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9881:93:7"
														},
														{
															"nativeSrc": "9983:19:7",
															"nodeType": "YulAssignment",
															"src": "9983:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9994:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9994:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9999:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9999:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9990:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9990:3:7"
																},
																"nativeSrc": "9990:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9990:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9983:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9983:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9642:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9776:3:7",
														"nodeType": "YulTypedName",
														"src": "9776:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9784:3:7",
														"nodeType": "YulTypedName",
														"src": "9784:3:7",
														"type": ""
													}
												],
												"src": "9642:366:7"
											},
											{
												"body": {
													"nativeSrc": "10185:248:7",
													"nodeType": "YulBlock",
													"src": "10185:248:7",
													"statements": [
														{
															"nativeSrc": "10195:26:7",
															"nodeType": "YulAssignment",
															"src": "10195:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10207:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10207:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10218:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10218:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10203:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10203:3:7"
																},
																"nativeSrc": "10203:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10203:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10195:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10242:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10242:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10253:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10253:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10238:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10238:3:7"
																		},
																		"nativeSrc": "10238:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10238:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10261:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10261:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10267:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10267:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10257:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10257:3:7"
																		},
																		"nativeSrc": "10257:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10257:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10231:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10231:6:7"
																},
																"nativeSrc": "10231:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10231:47:7"
															},
															"nativeSrc": "10231:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10231:47:7"
														},
														{
															"nativeSrc": "10287:139:7",
															"nodeType": "YulAssignment",
															"src": "10287:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10421:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10421:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10295:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10295:124:7"
																},
																"nativeSrc": "10295:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10295:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10287:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10287:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10014:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10165:9:7",
														"nodeType": "YulTypedName",
														"src": "10165:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10180:4:7",
														"nodeType": "YulTypedName",
														"src": "10180:4:7",
														"type": ""
													}
												],
												"src": "10014:419:7"
											},
											{
												"body": {
													"nativeSrc": "10467:152:7",
													"nodeType": "YulBlock",
													"src": "10467:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10484:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10487:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10487:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10477:6:7"
																},
																"nativeSrc": "10477:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10477:88:7"
															},
															"nativeSrc": "10477:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10477:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10581:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10581:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10584:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10584:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10574:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10574:6:7"
																},
																"nativeSrc": "10574:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10574:15:7"
															},
															"nativeSrc": "10574:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10574:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10605:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10605:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10608:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10608:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10598:6:7"
																},
																"nativeSrc": "10598:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10598:15:7"
															},
															"nativeSrc": "10598:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10598:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10439:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10439:180:7"
											},
											{
												"body": {
													"nativeSrc": "10673:362:7",
													"nodeType": "YulBlock",
													"src": "10673:362:7",
													"statements": [
														{
															"nativeSrc": "10683:25:7",
															"nodeType": "YulAssignment",
															"src": "10683:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10706:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10706:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10688:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10688:17:7"
																},
																"nativeSrc": "10688:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10688:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10683:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10683:1:7"
																}
															]
														},
														{
															"nativeSrc": "10717:25:7",
															"nodeType": "YulAssignment",
															"src": "10717:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10740:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10740:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10722:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10722:17:7"
																},
																"nativeSrc": "10722:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10722:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10717:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10717:1:7"
																}
															]
														},
														{
															"nativeSrc": "10751:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10751:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10774:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10774:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10777:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10777:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10770:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10770:3:7"
																},
																"nativeSrc": "10770:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10770:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10755:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10755:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10788:41:7",
															"nodeType": "YulAssignment",
															"src": "10788:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10817:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10817:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10799:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10799:17:7"
																},
																"nativeSrc": "10799:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10799:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10788:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10788:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11006:22:7",
																"nodeType": "YulBlock",
																"src": "11006:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11008:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11008:16:7"
																			},
																			"nativeSrc": "11008:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11008:18:7"
																		},
																		"nativeSrc": "11008:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11008:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10939:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10939:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10932:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10932:6:7"
																				},
																				"nativeSrc": "10932:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10932:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10962:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10962:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10969:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "10969:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10978:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "10978:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10965:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10965:3:7"
																						},
																						"nativeSrc": "10965:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10965:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10959:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10959:2:7"
																				},
																				"nativeSrc": "10959:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10959:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10912:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10912:2:7"
																		},
																		"nativeSrc": "10912:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10912:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10892:6:7"
																},
																"nativeSrc": "10892:113:7",
																"nodeType": "YulFunctionCall",
																"src": "10892:113:7"
															},
															"nativeSrc": "10889:139:7",
															"nodeType": "YulIf",
															"src": "10889:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10625:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10656:1:7",
														"nodeType": "YulTypedName",
														"src": "10656:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10659:1:7",
														"nodeType": "YulTypedName",
														"src": "10659:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10665:7:7",
														"nodeType": "YulTypedName",
														"src": "10665:7:7",
														"type": ""
													}
												],
												"src": "10625:410:7"
											},
											{
												"body": {
													"nativeSrc": "11069:152:7",
													"nodeType": "YulBlock",
													"src": "11069:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11086:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11086:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11089:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11089:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11079:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11079:6:7"
																},
																"nativeSrc": "11079:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11079:88:7"
															},
															"nativeSrc": "11079:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11079:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11183:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11183:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11186:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11186:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11176:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11176:6:7"
																},
																"nativeSrc": "11176:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11176:15:7"
															},
															"nativeSrc": "11176:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11176:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11207:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11207:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11210:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11210:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:7"
																},
																"nativeSrc": "11200:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11200:15:7"
															},
															"nativeSrc": "11200:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11200:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11041:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11041:180:7"
											},
											{
												"body": {
													"nativeSrc": "11269:143:7",
													"nodeType": "YulBlock",
													"src": "11269:143:7",
													"statements": [
														{
															"nativeSrc": "11279:25:7",
															"nodeType": "YulAssignment",
															"src": "11279:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11302:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11302:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11284:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11284:17:7"
																},
																"nativeSrc": "11284:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11284:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11279:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11279:1:7"
																}
															]
														},
														{
															"nativeSrc": "11313:25:7",
															"nodeType": "YulAssignment",
															"src": "11313:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11336:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11336:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11318:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11318:17:7"
																},
																"nativeSrc": "11318:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11318:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11313:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11313:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11360:22:7",
																"nodeType": "YulBlock",
																"src": "11360:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11362:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11362:16:7"
																			},
																			"nativeSrc": "11362:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11362:18:7"
																		},
																		"nativeSrc": "11362:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11362:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11357:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11357:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11350:6:7"
																},
																"nativeSrc": "11350:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11350:9:7"
															},
															"nativeSrc": "11347:35:7",
															"nodeType": "YulIf",
															"src": "11347:35:7"
														},
														{
															"nativeSrc": "11392:14:7",
															"nodeType": "YulAssignment",
															"src": "11392:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11401:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11401:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11404:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11404:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11397:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11397:3:7"
																},
																"nativeSrc": "11397:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11397:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11392:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11392:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11227:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11258:1:7",
														"nodeType": "YulTypedName",
														"src": "11258:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11261:1:7",
														"nodeType": "YulTypedName",
														"src": "11261:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11267:1:7",
														"nodeType": "YulTypedName",
														"src": "11267:1:7",
														"type": ""
													}
												],
												"src": "11227:185:7"
											},
											{
												"body": {
													"nativeSrc": "11446:152:7",
													"nodeType": "YulBlock",
													"src": "11446:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11463:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11463:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11466:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11466:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11456:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11456:6:7"
																},
																"nativeSrc": "11456:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11456:88:7"
															},
															"nativeSrc": "11456:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11456:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11560:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11560:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11563:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11563:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11553:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11553:6:7"
																},
																"nativeSrc": "11553:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11553:15:7"
															},
															"nativeSrc": "11553:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11553:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11584:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11584:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11587:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11587:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11577:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11577:6:7"
																},
																"nativeSrc": "11577:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11577:15:7"
															},
															"nativeSrc": "11577:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11577:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11418:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11418:180:7"
											},
											{
												"body": {
													"nativeSrc": "11648:147:7",
													"nodeType": "YulBlock",
													"src": "11648:147:7",
													"statements": [
														{
															"nativeSrc": "11658:25:7",
															"nodeType": "YulAssignment",
															"src": "11658:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11681:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11681:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11663:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11663:17:7"
																},
																"nativeSrc": "11663:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11663:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11658:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11658:1:7"
																}
															]
														},
														{
															"nativeSrc": "11692:25:7",
															"nodeType": "YulAssignment",
															"src": "11692:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11715:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11715:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11697:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11697:17:7"
																},
																"nativeSrc": "11697:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11697:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11692:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11692:1:7"
																}
															]
														},
														{
															"nativeSrc": "11726:16:7",
															"nodeType": "YulAssignment",
															"src": "11726:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11737:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11737:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11740:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11740:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11733:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11733:3:7"
																},
																"nativeSrc": "11733:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11733:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11726:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11766:22:7",
																"nodeType": "YulBlock",
																"src": "11766:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11768:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11768:16:7"
																			},
																			"nativeSrc": "11768:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11768:18:7"
																		},
																		"nativeSrc": "11768:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11768:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11758:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11758:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11761:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11761:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11755:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11755:2:7"
																},
																"nativeSrc": "11755:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11755:10:7"
															},
															"nativeSrc": "11752:36:7",
															"nodeType": "YulIf",
															"src": "11752:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11604:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11635:1:7",
														"nodeType": "YulTypedName",
														"src": "11635:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11638:1:7",
														"nodeType": "YulTypedName",
														"src": "11638:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11644:3:7",
														"nodeType": "YulTypedName",
														"src": "11644:3:7",
														"type": ""
													}
												],
												"src": "11604:191:7"
											},
											{
												"body": {
													"nativeSrc": "11866:53:7",
													"nodeType": "YulBlock",
													"src": "11866:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11883:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11883:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11906:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11906:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11888:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "11888:17:7"
																		},
																		"nativeSrc": "11888:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11888:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11876:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11876:6:7"
																},
																"nativeSrc": "11876:37:7",
																"nodeType": "YulFunctionCall",
																"src": "11876:37:7"
															},
															"nativeSrc": "11876:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "11876:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11801:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11854:5:7",
														"nodeType": "YulTypedName",
														"src": "11854:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11861:3:7",
														"nodeType": "YulTypedName",
														"src": "11861:3:7",
														"type": ""
													}
												],
												"src": "11801:118:7"
											},
											{
												"body": {
													"nativeSrc": "12079:288:7",
													"nodeType": "YulBlock",
													"src": "12079:288:7",
													"statements": [
														{
															"nativeSrc": "12089:26:7",
															"nodeType": "YulAssignment",
															"src": "12089:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12101:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12112:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12097:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12097:3:7"
																},
																"nativeSrc": "12097:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12097:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12089:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12089:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12169:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12169:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12182:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12182:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12193:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12193:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12178:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12178:3:7"
																		},
																		"nativeSrc": "12178:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12178:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12125:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12125:43:7"
																},
																"nativeSrc": "12125:71:7",
																"nodeType": "YulFunctionCall",
																"src": "12125:71:7"
															},
															"nativeSrc": "12125:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "12125:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12250:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12250:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12263:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12263:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12274:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12274:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12259:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12259:3:7"
																		},
																		"nativeSrc": "12259:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12259:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12206:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12206:43:7"
																},
																"nativeSrc": "12206:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12206:72:7"
															},
															"nativeSrc": "12206:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12206:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12332:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12332:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12345:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12345:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12356:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12356:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12341:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12341:3:7"
																		},
																		"nativeSrc": "12341:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12341:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12288:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12288:43:7"
																},
																"nativeSrc": "12288:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12288:72:7"
															},
															"nativeSrc": "12288:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12288:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11925:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12035:9:7",
														"nodeType": "YulTypedName",
														"src": "12035:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12047:6:7",
														"nodeType": "YulTypedName",
														"src": "12047:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12055:6:7",
														"nodeType": "YulTypedName",
														"src": "12055:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12063:6:7",
														"nodeType": "YulTypedName",
														"src": "12063:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12074:4:7",
														"nodeType": "YulTypedName",
														"src": "12074:4:7",
														"type": ""
													}
												],
												"src": "11925:442:7"
											},
											{
												"body": {
													"nativeSrc": "12471:124:7",
													"nodeType": "YulBlock",
													"src": "12471:124:7",
													"statements": [
														{
															"nativeSrc": "12481:26:7",
															"nodeType": "YulAssignment",
															"src": "12481:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12493:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12493:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12504:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12504:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12489:3:7"
																},
																"nativeSrc": "12489:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12489:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12481:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12481:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12561:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12561:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12574:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12574:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12585:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12585:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12570:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12570:3:7"
																		},
																		"nativeSrc": "12570:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12570:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12517:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12517:43:7"
																},
																"nativeSrc": "12517:71:7",
																"nodeType": "YulFunctionCall",
																"src": "12517:71:7"
															},
															"nativeSrc": "12517:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "12517:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12373:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12443:9:7",
														"nodeType": "YulTypedName",
														"src": "12443:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12455:6:7",
														"nodeType": "YulTypedName",
														"src": "12455:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12466:4:7",
														"nodeType": "YulTypedName",
														"src": "12466:4:7",
														"type": ""
													}
												],
												"src": "12373:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one team address requir\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x208B CODESIZE SUB DUP1 PUSH2 0x208B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6373796400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4353594400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xADE JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xADE JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x2C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP2 MLOAD GT PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x199 SWAP3 SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST POP PUSH8 0x1CDDA4FACCD0000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1DC CALLER PUSH1 0x64 PUSH1 0x50 PUSH11 0x7C13BC4B2C133C56000000 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x38C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH2 0x26C PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x205 JUMPI PUSH2 0x204 PUSH2 0xD3E JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH1 0x64 PUSH1 0xA PUSH11 0x7C13BC4B2C133C56000000 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x257 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x261 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x38C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1E1 JUMP JUMPDEST POP PUSH2 0x2AD ADDRESS PUSH1 0x64 PUSH1 0xA PUSH11 0x7C13BC4B2C133C56000000 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x38C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0x5A39A80 TIMESTAMP PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP PUSH2 0xDFB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40D PUSH0 DUP4 DUP4 PUSH2 0x411 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x461 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x52F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4EA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x576 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5C0 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6A0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x69F JUMPI DUP3 MLOAD DUP3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x648 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x6B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6C8 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6B2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x727 DUP3 PUSH2 0x6E1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x746 JUMPI PUSH2 0x745 PUSH2 0x6F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x758 PUSH2 0x6CC JUMP JUMPDEST SWAP1 POP PUSH2 0x764 DUP3 DUP3 PUSH2 0x71E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x783 JUMPI PUSH2 0x782 PUSH2 0x6F1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C1 DUP3 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D1 DUP2 PUSH2 0x7B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x7DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7EC DUP2 PUSH2 0x7C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x804 PUSH2 0x7FF DUP5 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0x794 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP1 PUSH2 0x83C DUP9 DUP3 PUSH2 0x7DE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x829 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x86E JUMPI PUSH2 0x86D PUSH2 0x6DD JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x87E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89C JUMPI PUSH2 0x89B PUSH2 0x6D5 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0x6D9 JUMP JUMPDEST JUMPDEST PUSH2 0x8C5 DUP5 DUP3 DUP6 ADD PUSH2 0x85A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x91C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x92F JUMPI PUSH2 0x92E PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x991 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x99B DUP7 DUP4 PUSH2 0x956 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9DF PUSH2 0x9DA PUSH2 0x9D5 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F8 DUP4 PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xA0C PUSH2 0xA04 DUP3 PUSH2 0x9E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x962 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA23 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0xA2E DUP2 DUP5 DUP5 PUSH2 0x9EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA51 JUMPI PUSH2 0xA46 PUSH0 DUP3 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA96 JUMPI PUSH2 0xA67 DUP2 PUSH2 0x935 JUMP JUMPDEST PUSH2 0xA70 DUP5 PUSH2 0x947 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xA7F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xA93 PUSH2 0xA8B DUP6 PUSH2 0x947 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xA33 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA9B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xACE DUP4 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE7 DUP3 PUSH2 0x8CE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB00 JUMPI PUSH2 0xAFF PUSH2 0x6F1 JUMP JUMPDEST JUMPDEST PUSH2 0xB0A DUP3 SLOAD PUSH2 0x905 JUMP JUMPDEST PUSH2 0xB15 DUP3 DUP3 DUP6 PUSH2 0xA55 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xB46 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xB34 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xB3E DUP6 DUP3 PUSH2 0xAC3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xB54 DUP7 PUSH2 0x935 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB7B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB56 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xB98 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xB94 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xAA7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0x7B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBCF PUSH0 DUP4 ADD DUP5 PUSH2 0xBAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E65207465616D206164647265737320726571756972 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC3F PUSH1 0x22 DUP4 PUSH2 0xBD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xC4A DUP3 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC6C DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCAA DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB5 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCC3 DUP2 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCDA JUMPI PUSH2 0xCD9 PUSH2 0xC73 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD18 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0xD23 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0xCE1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD75 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0xD80 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD98 JUMPI PUSH2 0xD97 PUSH2 0xC73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA7 DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDC0 PUSH0 DUP4 ADD DUP7 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0xDCD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0xDDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD9E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF5 PUSH0 DUP4 ADD DUP5 PUSH2 0xD9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1283 DUP1 PUSH2 0xE08 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x902D55A5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x333 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x76AE9B2D EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1D0806AE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x35928998 EQ PUSH2 0x203 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6F660EF EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x367 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x393 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3F2 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46A DUP5 DUP5 DUP5 PUSH2 0x71F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x5A39A80 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x4D9 PUSH0 PUSH2 0x7D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x7C13BC4B2C133C56000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x553 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x575 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x581 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F8 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x68A PUSH2 0x74D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x703 DUP2 PUSH2 0x7D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x71A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x729 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP PUSH2 0x736 DUP6 DUP3 DUP6 PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x741 DUP6 DUP6 DUP6 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x755 PUSH2 0x706 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x773 PUSH2 0x4E1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D2 JUMPI PUSH2 0x796 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8A1 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP PUSH2 0x8AE DUP2 DUP6 DUP6 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x929 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x999 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA82 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA93 DUP5 DUP5 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB15 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB06 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB14 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC06 DUP4 DUP4 DUP4 PUSH2 0xC0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x121A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD29 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD70 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDBA JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE17 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE36 DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4F PUSH0 DUP4 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE97 DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0xEA1 DUP2 DUP6 PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP PUSH2 0xEB1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE6F JUMP JUMPDEST PUSH2 0xEBA DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDD DUP2 DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF12 DUP3 PUSH2 0xEE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF22 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0xF2C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3D DUP2 PUSH2 0xF19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4C DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP2 EQ PUSH2 0xF56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF67 DUP2 PUSH2 0xF43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF83 JUMPI PUSH2 0xF82 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF90 DUP6 DUP3 DUP7 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFA1 DUP6 DUP3 DUP7 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBF DUP2 PUSH2 0xFAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFD8 PUSH0 DUP4 ADD DUP5 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1002 DUP7 DUP3 DUP8 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1013 DUP7 DUP3 DUP8 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1024 DUP7 DUP3 DUP8 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1043 DUP2 PUSH2 0x102E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105C PUSH0 DUP4 ADD DUP5 PUSH2 0x103A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1076 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1084 DUP5 DUP3 DUP6 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1096 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AF PUSH0 DUP4 ADD DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D8 DUP6 DUP3 DUP7 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1137 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x10F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5465616D20746F6B656E7320617265206C6F636B656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1184 PUSH1 0x16 DUP4 PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP PUSH2 0x118F DUP3 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B1 DUP2 PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11CB PUSH0 DUP4 ADD DUP7 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x11D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x11E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1224 DUP3 PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP PUSH2 0x122F DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1247 JUMPI PUSH2 0x1246 PUSH2 0x11ED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 0x28 PUSH7 0x29F85C16F999FC 0xDE 0xC0 0x29 PUSH15 0x338C87DE5F3522159DFD39AAAC252B 0xB2 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "279:1654:0:-:0;;;597:722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;690:10;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;784:1:0::2;760:14;:21;:25;752:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;851:14;835:13;:30;;;;;;;;;;;;:::i;:::-;;893:11;878:12;:26;;;;931:42;937:10;969:3;964:2;362:20;949:17;;;;:::i;:::-;:23;;;;:::i;:::-;931:5;;;:42;;:::i;:::-;1002:9;1014:1;1002:13;;997:162;1021:13;:20;;;;1017:1;:24;997:162;;;1063:71;1069:13;1083:1;1069:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1113:13;:20;;;;1107:3;1102:2;362:20;1087:17;;;;:::i;:::-;:23;;;;:::i;:::-;:46;;;;:::i;:::-;1063:5;;;:71;;:::i;:::-;1043:3;;;;;;;997:162;;;;1169:45;1183:4;1210:3;1205:2;362:20;1190:17;;;;:::i;:::-;:23;;;;:::i;:::-;1169:5;;;:45;;:::i;:::-;445:12;1261:15;:34;;;;:::i;:::-;1243:15;:52;;;;597:722:::0;279:1654;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7362:208:3:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;279:1654:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:99::-;3899:6;3933:5;3927:12;3917:22;;3847:99;;;:::o;3952:180::-;4000:77;3997:1;3990:88;4097:4;4094:1;4087:15;4121:4;4118:1;4111:15;4138:320;4182:6;4219:1;4213:4;4209:12;4199:22;;4266:1;4260:4;4256:12;4287:18;4277:81;;4343:4;4335:6;4331:17;4321:27;;4277:81;4405:2;4397:6;4394:14;4374:18;4371:38;4368:84;;4424:18;;:::i;:::-;4368:84;4189:269;4138:320;;;:::o;4464:141::-;4513:4;4536:3;4528:11;;4559:3;4556:1;4549:14;4593:4;4590:1;4580:18;4572:26;;4464:141;;;:::o;4611:93::-;4648:6;4695:2;4690;4683:5;4679:14;4675:23;4665:33;;4611:93;;;:::o;4710:107::-;4754:8;4804:5;4798:4;4794:16;4773:37;;4710:107;;;;:::o;4823:393::-;4892:6;4942:1;4930:10;4926:18;4965:97;4995:66;4984:9;4965:97;:::i;:::-;5083:39;5113:8;5102:9;5083:39;:::i;:::-;5071:51;;5155:4;5151:9;5144:5;5140:21;5131:30;;5204:4;5194:8;5190:19;5183:5;5180:30;5170:40;;4899:317;;4823:393;;;;;:::o;5222:77::-;5259:7;5288:5;5277:16;;5222:77;;;:::o;5305:60::-;5333:3;5354:5;5347:12;;5305:60;;;:::o;5371:142::-;5421:9;5454:53;5472:34;5481:24;5499:5;5481:24;:::i;:::-;5472:34;:::i;:::-;5454:53;:::i;:::-;5441:66;;5371:142;;;:::o;5519:75::-;5562:3;5583:5;5576:12;;5519:75;;;:::o;5600:269::-;5710:39;5741:7;5710:39;:::i;:::-;5771:91;5820:41;5844:16;5820:41;:::i;:::-;5812:6;5805:4;5799:11;5771:91;:::i;:::-;5765:4;5758:105;5676:193;5600:269;;;:::o;5875:73::-;5920:3;5941:1;5934:8;;5875:73;:::o;5954:189::-;6031:32;;:::i;:::-;6072:65;6130:6;6122;6116:4;6072:65;:::i;:::-;6007:136;5954:189;;:::o;6149:186::-;6209:120;6226:3;6219:5;6216:14;6209:120;;;6280:39;6317:1;6310:5;6280:39;:::i;:::-;6253:1;6246:5;6242:13;6233:22;;6209:120;;;6149:186;;:::o;6341:543::-;6442:2;6437:3;6434:11;6431:446;;;6476:38;6508:5;6476:38;:::i;:::-;6560:29;6578:10;6560:29;:::i;:::-;6550:8;6546:44;6743:2;6731:10;6728:18;6725:49;;;6764:8;6749:23;;6725:49;6787:80;6843:22;6861:3;6843:22;:::i;:::-;6833:8;6829:37;6816:11;6787:80;:::i;:::-;6446:431;;6431:446;6341:543;;;:::o;6890:117::-;6944:8;6994:5;6988:4;6984:16;6963:37;;6890:117;;;;:::o;7013:169::-;7057:6;7090:51;7138:1;7134:6;7126:5;7123:1;7119:13;7090:51;:::i;:::-;7086:56;7171:4;7165;7161:15;7151:25;;7064:118;7013:169;;;;:::o;7187:295::-;7263:4;7409:29;7434:3;7428:4;7409:29;:::i;:::-;7401:37;;7471:3;7468:1;7464:11;7458:4;7455:21;7447:29;;7187:295;;;;:::o;7487:1395::-;7604:37;7637:3;7604:37;:::i;:::-;7706:18;7698:6;7695:30;7692:56;;;7728:18;;:::i;:::-;7692:56;7772:38;7804:4;7798:11;7772:38;:::i;:::-;7857:67;7917:6;7909;7903:4;7857:67;:::i;:::-;7951:1;7975:4;7962:17;;8007:2;7999:6;7996:14;8024:1;8019:618;;;;8681:1;8698:6;8695:77;;;8747:9;8742:3;8738:19;8732:26;8723:35;;8695:77;8798:67;8858:6;8851:5;8798:67;:::i;:::-;8792:4;8785:81;8654:222;7989:887;;8019:618;8071:4;8067:9;8059:6;8055:22;8105:37;8137:4;8105:37;:::i;:::-;8164:1;8178:208;8192:7;8189:1;8186:14;8178:208;;;8271:9;8266:3;8262:19;8256:26;8248:6;8241:42;8322:1;8314:6;8310:14;8300:24;;8369:2;8358:9;8354:18;8341:31;;8215:4;8212:1;8208:12;8203:17;;8178:208;;;8414:6;8405:7;8402:19;8399:179;;;8472:9;8467:3;8463:19;8457:26;8515:48;8557:4;8549:6;8545:17;8534:9;8515:48;:::i;:::-;8507:6;8500:64;8422:156;8399:179;8624:1;8620;8612:6;8608:14;8604:22;8598:4;8591:36;8026:611;;;7989:887;;7579:1303;;;7487:1395;;:::o;8888:118::-;8975:24;8993:5;8975:24;:::i;:::-;8970:3;8963:37;8888:118;;:::o;9012:222::-;9105:4;9143:2;9132:9;9128:18;9120:26;;9156:71;9224:1;9213:9;9209:17;9200:6;9156:71;:::i;:::-;9012:222;;;;:::o;9240:169::-;9324:11;9358:6;9353:3;9346:19;9398:4;9393:3;9389:14;9374:29;;9240:169;;;;:::o;9415:221::-;9555:34;9551:1;9543:6;9539:14;9532:58;9624:4;9619:2;9611:6;9607:15;9600:29;9415:221;:::o;9642:366::-;9784:3;9805:67;9869:2;9864:3;9805:67;:::i;:::-;9798:74;;9881:93;9970:3;9881:93;:::i;:::-;9999:2;9994:3;9990:12;9983:19;;9642:366;;;:::o;10014:419::-;10180:4;10218:2;10207:9;10203:18;10195:26;;10267:9;10261:4;10257:20;10253:1;10242:9;10238:17;10231:47;10295:131;10421:4;10295:131;:::i;:::-;10287:139;;10014:419;;;:::o;10439:180::-;10487:77;10484:1;10477:88;10584:4;10581:1;10574:15;10608:4;10605:1;10598:15;10625:410;10665:7;10688:20;10706:1;10688:20;:::i;:::-;10683:25;;10722:20;10740:1;10722:20;:::i;:::-;10717:25;;10777:1;10774;10770:9;10799:30;10817:11;10799:30;:::i;:::-;10788:41;;10978:1;10969:7;10965:15;10962:1;10959:22;10939:1;10932:9;10912:83;10889:139;;11008:18;;:::i;:::-;10889:139;10673:362;10625:410;;;;:::o;11041:180::-;11089:77;11086:1;11079:88;11186:4;11183:1;11176:15;11210:4;11207:1;11200:15;11227:185;11267:1;11284:20;11302:1;11284:20;:::i;:::-;11279:25;;11318:20;11336:1;11318:20;:::i;:::-;11313:25;;11357:1;11347:35;;11362:18;;:::i;:::-;11347:35;11404:1;11401;11397:9;11392:14;;11227:185;;;;:::o;11418:180::-;11466:77;11463:1;11456:88;11563:4;11560:1;11553:15;11587:4;11584:1;11577:15;11604:191;11644:3;11663:20;11681:1;11663:20;:::i;:::-;11658:25;;11697:20;11715:1;11697:20;:::i;:::-;11692:25;;11740:1;11737;11733:9;11726:16;;11761:3;11758:1;11755:10;11752:36;;;11768:18;;:::i;:::-;11752:36;11604:191;;;;:::o;11801:118::-;11888:24;11906:5;11888:24;:::i;:::-;11883:3;11876:37;11801:118;;:::o;11925:442::-;12074:4;12112:2;12101:9;12097:18;12089:26;;12125:71;12193:1;12182:9;12178:17;12169:6;12125:71;:::i;:::-;12206:72;12274:2;12263:9;12259:18;12250:6;12206:72;:::i;:::-;12288;12356:2;12345:9;12341:18;12332:6;12288:72;:::i;:::-;11925:442;;;;;;:::o;12373:222::-;12466:4;12504:2;12493:9;12489:18;12481:26;;12517:71;12585:1;12574:9;12570:17;12561:6;12517:71;:::i;:::-;12373:222;;;;:::o;279:1654:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TEAM_LOCK_PERIOD_19": {
									"entryPoint": 1147,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_14": {
									"entryPoint": 1289,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_870": {
									"entryPoint": 1805,
									"id": 870,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_930": {
									"entryPoint": 2233,
									"id": 930,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_264": {
									"entryPoint": 1869,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1095": {
									"entryPoint": 1798,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_978": {
									"entryPoint": 2696,
									"id": 978,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_326": {
									"entryPoint": 2004,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_709": {
									"entryPoint": 2843,
									"id": 709,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_786": {
									"entryPoint": 3083,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_606": {
									"entryPoint": 1536,
									"id": 606,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_630": {
									"entryPoint": 1000,
									"id": 630,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_565": {
									"entryPoint": 1155,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_543": {
									"entryPoint": 1139,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInitialPrice_178": {
									"entryPoint": 847,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialPrice_21": {
									"entryPoint": 1043,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_525": {
									"entryPoint": 856,
									"id": 525,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_247": {
									"entryPoint": 1249,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_278": {
									"entryPoint": 1224,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_534": {
									"entryPoint": 1304,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@teamLockedUntil_26": {
									"entryPoint": 1243,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_552": {
									"entryPoint": 1034,
									"id": 552,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_170": {
									"entryPoint": 1049,
									"id": 170,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_662": {
									"entryPoint": 1823,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_306": {
									"entryPoint": 1666,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_148": {
									"entryPoint": 1448,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_589": {
									"entryPoint": 2199,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8228:7",
										"nodeType": "YulBlock",
										"src": "0:8228:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "501:40:7",
													"nodeType": "YulBlock",
													"src": "501:40:7",
													"statements": [
														{
															"nativeSrc": "512:22:7",
															"nodeType": "YulAssignment",
															"src": "512:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:7"
																},
																"nativeSrc": "522:12:7",
																"nodeType": "YulFunctionCall",
																"src": "522:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:7",
														"nodeType": "YulTypedName",
														"src": "484:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:7",
														"nodeType": "YulTypedName",
														"src": "494:6:7",
														"type": ""
													}
												],
												"src": "442:99:7"
											},
											{
												"body": {
													"nativeSrc": "643:73:7",
													"nodeType": "YulBlock",
													"src": "643:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:7"
																},
																"nativeSrc": "653:19:7",
																"nodeType": "YulFunctionCall",
																"src": "653:19:7"
															},
															"nativeSrc": "653:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:7"
														},
														{
															"nativeSrc": "681:29:7",
															"nodeType": "YulAssignment",
															"src": "681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:7",
																		"nodeType": "YulLiteral",
																		"src": "705:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:7"
																},
																"nativeSrc": "696:14:7",
																"nodeType": "YulFunctionCall",
																"src": "696:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:7",
														"nodeType": "YulTypedName",
														"src": "615:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:7",
														"nodeType": "YulTypedName",
														"src": "620:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:7",
														"nodeType": "YulTypedName",
														"src": "631:11:7",
														"type": ""
													}
												],
												"src": "547:169:7"
											},
											{
												"body": {
													"nativeSrc": "784:77:7",
													"nodeType": "YulBlock",
													"src": "784:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:7"
																},
																"nativeSrc": "795:23:7",
																"nodeType": "YulFunctionCall",
																"src": "795:23:7"
															},
															"nativeSrc": "795:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:7"
																		},
																		"nativeSrc": "834:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:7",
																		"nodeType": "YulLiteral",
																		"src": "852:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:7"
																},
																"nativeSrc": "827:27:7",
																"nodeType": "YulFunctionCall",
																"src": "827:27:7"
															},
															"nativeSrc": "827:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:7",
														"nodeType": "YulTypedName",
														"src": "771:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:7",
														"nodeType": "YulTypedName",
														"src": "776:6:7",
														"type": ""
													}
												],
												"src": "722:139:7"
											},
											{
												"body": {
													"nativeSrc": "915:54:7",
													"nodeType": "YulBlock",
													"src": "915:54:7",
													"statements": [
														{
															"nativeSrc": "925:38:7",
															"nodeType": "YulAssignment",
															"src": "925:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:7",
																				"nodeType": "YulLiteral",
																				"src": "950:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:7",
																				"nodeType": "YulLiteral",
																				"src": "959:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:28:7",
																"nodeType": "YulFunctionCall",
																"src": "935:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:7",
														"nodeType": "YulTypedName",
														"src": "898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:7",
														"nodeType": "YulTypedName",
														"src": "908:6:7",
														"type": ""
													}
												],
												"src": "867:102:7"
											},
											{
												"body": {
													"nativeSrc": "1067:285:7",
													"nodeType": "YulBlock",
													"src": "1067:285:7",
													"statements": [
														{
															"nativeSrc": "1077:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:7"
																},
																"nativeSrc": "1091:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:7",
															"nodeType": "YulAssignment",
															"src": "1139:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:7"
																},
																"nativeSrc": "1146:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:7"
																		},
																		"nativeSrc": "1261:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:7"
																},
																"nativeSrc": "1226:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:7"
															},
															"nativeSrc": "1226:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:7"
														},
														{
															"nativeSrc": "1300:46:7",
															"nodeType": "YulAssignment",
															"src": "1300:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:7"
																		},
																		"nativeSrc": "1316:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:7"
																},
																"nativeSrc": "1307:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:7",
														"nodeType": "YulTypedName",
														"src": "1048:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:7",
														"nodeType": "YulTypedName",
														"src": "1055:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:7",
														"nodeType": "YulTypedName",
														"src": "1063:3:7",
														"type": ""
													}
												],
												"src": "975:377:7"
											},
											{
												"body": {
													"nativeSrc": "1476:195:7",
													"nodeType": "YulBlock",
													"src": "1476:195:7",
													"statements": [
														{
															"nativeSrc": "1486:26:7",
															"nodeType": "YulAssignment",
															"src": "1486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:7"
																},
																"nativeSrc": "1494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:7"
																		},
																		"nativeSrc": "1529:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nativeSrc": "1548:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:7"
																},
																"nativeSrc": "1522:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:7"
															},
															"nativeSrc": "1522:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:7"
														},
														{
															"nativeSrc": "1578:86:7",
															"nodeType": "YulAssignment",
															"src": "1578:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:7"
																},
																"nativeSrc": "1586:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:7",
														"nodeType": "YulTypedName",
														"src": "1448:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:7",
														"nodeType": "YulTypedName",
														"src": "1460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:7",
														"nodeType": "YulTypedName",
														"src": "1471:4:7",
														"type": ""
													}
												],
												"src": "1358:313:7"
											},
											{
												"body": {
													"nativeSrc": "1717:35:7",
													"nodeType": "YulBlock",
													"src": "1717:35:7",
													"statements": [
														{
															"nativeSrc": "1727:19:7",
															"nodeType": "YulAssignment",
															"src": "1727:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:7"
																},
																"nativeSrc": "1737:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:7",
														"nodeType": "YulTypedName",
														"src": "1710:6:7",
														"type": ""
													}
												],
												"src": "1677:75:7"
											},
											{
												"body": {
													"nativeSrc": "1847:28:7",
													"nodeType": "YulBlock",
													"src": "1847:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:7"
																},
																"nativeSrc": "1857:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:7"
															},
															"nativeSrc": "1857:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:7"
											},
											{
												"body": {
													"nativeSrc": "1970:28:7",
													"nodeType": "YulBlock",
													"src": "1970:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:7"
																},
																"nativeSrc": "1980:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:7"
															},
															"nativeSrc": "1980:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:7"
											},
											{
												"body": {
													"nativeSrc": "2049:81:7",
													"nodeType": "YulBlock",
													"src": "2049:81:7",
													"statements": [
														{
															"nativeSrc": "2059:65:7",
															"nodeType": "YulAssignment",
															"src": "2059:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:7"
																},
																"nativeSrc": "2070:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:7",
														"nodeType": "YulTypedName",
														"src": "2031:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:7",
														"nodeType": "YulTypedName",
														"src": "2041:7:7",
														"type": ""
													}
												],
												"src": "2004:126:7"
											},
											{
												"body": {
													"nativeSrc": "2181:51:7",
													"nodeType": "YulBlock",
													"src": "2181:51:7",
													"statements": [
														{
															"nativeSrc": "2191:35:7",
															"nodeType": "YulAssignment",
															"src": "2191:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:7"
																},
																"nativeSrc": "2202:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:7",
														"nodeType": "YulTypedName",
														"src": "2163:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:7",
														"nodeType": "YulTypedName",
														"src": "2173:7:7",
														"type": ""
													}
												],
												"src": "2136:96:7"
											},
											{
												"body": {
													"nativeSrc": "2281:79:7",
													"nodeType": "YulBlock",
													"src": "2281:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:7",
																"nodeType": "YulBlock",
																"src": "2338:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:7"
																			},
																			"nativeSrc": "2340:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:7"
																		},
																		"nativeSrc": "2340:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:7"
																				},
																				"nativeSrc": "2311:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:7"
																		},
																		"nativeSrc": "2301:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:7"
																},
																"nativeSrc": "2294:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:7"
															},
															"nativeSrc": "2291:63:7",
															"nodeType": "YulIf",
															"src": "2291:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:7",
														"nodeType": "YulTypedName",
														"src": "2274:5:7",
														"type": ""
													}
												],
												"src": "2238:122:7"
											},
											{
												"body": {
													"nativeSrc": "2418:87:7",
													"nodeType": "YulBlock",
													"src": "2418:87:7",
													"statements": [
														{
															"nativeSrc": "2428:29:7",
															"nodeType": "YulAssignment",
															"src": "2428:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:7"
																},
																"nativeSrc": "2437:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:7"
																},
																"nativeSrc": "2466:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:7"
															},
															"nativeSrc": "2466:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:7",
														"nodeType": "YulTypedName",
														"src": "2396:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:7",
														"nodeType": "YulTypedName",
														"src": "2404:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:7",
														"nodeType": "YulTypedName",
														"src": "2412:5:7",
														"type": ""
													}
												],
												"src": "2366:139:7"
											},
											{
												"body": {
													"nativeSrc": "2554:79:7",
													"nodeType": "YulBlock",
													"src": "2554:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:7",
																"nodeType": "YulBlock",
																"src": "2611:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:7"
																			},
																			"nativeSrc": "2613:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:7"
																		},
																		"nativeSrc": "2613:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:7"
																				},
																				"nativeSrc": "2584:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:7"
																		},
																		"nativeSrc": "2574:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:7"
																},
																"nativeSrc": "2567:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:7"
															},
															"nativeSrc": "2564:63:7",
															"nodeType": "YulIf",
															"src": "2564:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:7",
														"nodeType": "YulTypedName",
														"src": "2547:5:7",
														"type": ""
													}
												],
												"src": "2511:122:7"
											},
											{
												"body": {
													"nativeSrc": "2691:87:7",
													"nodeType": "YulBlock",
													"src": "2691:87:7",
													"statements": [
														{
															"nativeSrc": "2701:29:7",
															"nodeType": "YulAssignment",
															"src": "2701:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nativeSrc": "2710:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:7"
																},
																"nativeSrc": "2739:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:7"
															},
															"nativeSrc": "2739:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:7",
														"nodeType": "YulTypedName",
														"src": "2669:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:7",
														"nodeType": "YulTypedName",
														"src": "2677:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"src": "2639:139:7"
											},
											{
												"body": {
													"nativeSrc": "2867:391:7",
													"nodeType": "YulBlock",
													"src": "2867:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:7",
																"nodeType": "YulBlock",
																"src": "2913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:7"
																			},
																			"nativeSrc": "2915:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:7"
																		},
																		"nativeSrc": "2915:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:7"
																		},
																		"nativeSrc": "2884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																},
																"nativeSrc": "2880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:7"
															},
															"nativeSrc": "2877:119:7",
															"nodeType": "YulIf",
															"src": "2877:119:7"
														},
														{
															"nativeSrc": "3006:117:7",
															"nodeType": "YulBlock",
															"src": "3006:117:7",
															"statements": [
																{
																	"nativeSrc": "3021:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:7"
																				},
																				"nativeSrc": "3081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:7"
																		},
																		"nativeSrc": "3060:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:7",
															"nodeType": "YulBlock",
															"src": "3133:118:7",
															"statements": [
																{
																	"nativeSrc": "3148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:7"
																				},
																				"nativeSrc": "3209:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:7"
																		},
																		"nativeSrc": "3188:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:7",
														"nodeType": "YulTypedName",
														"src": "2829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:7",
														"nodeType": "YulTypedName",
														"src": "2840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"src": "2784:474:7"
											},
											{
												"body": {
													"nativeSrc": "3306:48:7",
													"nodeType": "YulBlock",
													"src": "3306:48:7",
													"statements": [
														{
															"nativeSrc": "3316:32:7",
															"nodeType": "YulAssignment",
															"src": "3316:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		},
																		"nativeSrc": "3334:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nativeSrc": "3327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:7",
														"nodeType": "YulTypedName",
														"src": "3288:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:7",
														"nodeType": "YulTypedName",
														"src": "3298:7:7",
														"type": ""
													}
												],
												"src": "3264:90:7"
											},
											{
												"body": {
													"nativeSrc": "3419:50:7",
													"nodeType": "YulBlock",
													"src": "3419:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:7"
																		},
																		"nativeSrc": "3441:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nativeSrc": "3429:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:7"
															},
															"nativeSrc": "3429:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:7",
														"nodeType": "YulTypedName",
														"src": "3407:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:7",
														"nodeType": "YulTypedName",
														"src": "3414:3:7",
														"type": ""
													}
												],
												"src": "3360:109:7"
											},
											{
												"body": {
													"nativeSrc": "3567:118:7",
													"nodeType": "YulBlock",
													"src": "3567:118:7",
													"statements": [
														{
															"nativeSrc": "3577:26:7",
															"nodeType": "YulAssignment",
															"src": "3577:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:7"
																},
																"nativeSrc": "3585:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:7",
														"nodeType": "YulTypedName",
														"src": "3539:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:7",
														"nodeType": "YulTypedName",
														"src": "3551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:7",
														"nodeType": "YulTypedName",
														"src": "3562:4:7",
														"type": ""
													}
												],
												"src": "3475:210:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6531:66:7",
													"nodeType": "YulBlock",
													"src": "6531:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:7"
																		},
																		"nativeSrc": "6549:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:7"
																	},
																	{
																		"hexValue": "5465616d20746f6b656e7320617265206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "6565:24:7",
																		"nodeType": "YulLiteral",
																		"src": "6565:24:7",
																		"type": "",
																		"value": "Team tokens are locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:7"
																},
																"nativeSrc": "6542:48:7",
																"nodeType": "YulFunctionCall",
																"src": "6542:48:7"
															},
															"nativeSrc": "6542:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "6542:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
												"nativeSrc": "6425:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:7",
														"nodeType": "YulTypedName",
														"src": "6523:6:7",
														"type": ""
													}
												],
												"src": "6425:172:7"
											},
											{
												"body": {
													"nativeSrc": "6749:220:7",
													"nodeType": "YulBlock",
													"src": "6749:220:7",
													"statements": [
														{
															"nativeSrc": "6759:74:7",
															"nodeType": "YulAssignment",
															"src": "6759:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6825:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6825:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6830:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6830:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6766:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6766:58:7"
																},
																"nativeSrc": "6766:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6766:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6759:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6759:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6931:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6931:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
																	"nativeSrc": "6842:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6842:88:7"
																},
																"nativeSrc": "6842:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6842:93:7"
															},
															"nativeSrc": "6842:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6842:93:7"
														},
														{
															"nativeSrc": "6944:19:7",
															"nodeType": "YulAssignment",
															"src": "6944:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6955:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6955:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6960:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6951:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6951:3:7"
																},
																"nativeSrc": "6951:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6951:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6944:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6944:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6603:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6737:3:7",
														"nodeType": "YulTypedName",
														"src": "6737:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6745:3:7",
														"nodeType": "YulTypedName",
														"src": "6745:3:7",
														"type": ""
													}
												],
												"src": "6603:366:7"
											},
											{
												"body": {
													"nativeSrc": "7146:248:7",
													"nodeType": "YulBlock",
													"src": "7146:248:7",
													"statements": [
														{
															"nativeSrc": "7156:26:7",
															"nodeType": "YulAssignment",
															"src": "7156:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7168:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7168:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7179:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7179:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7164:3:7"
																},
																"nativeSrc": "7164:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7164:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7156:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7156:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7203:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7203:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7214:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7214:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7199:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7199:3:7"
																		},
																		"nativeSrc": "7199:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7199:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7222:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7222:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7228:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7228:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7218:3:7"
																		},
																		"nativeSrc": "7218:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7218:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7192:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7192:6:7"
																},
																"nativeSrc": "7192:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7192:47:7"
															},
															"nativeSrc": "7192:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7192:47:7"
														},
														{
															"nativeSrc": "7248:139:7",
															"nodeType": "YulAssignment",
															"src": "7248:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7382:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7382:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7256:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7256:124:7"
																},
																"nativeSrc": "7256:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7256:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7248:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7248:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6975:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7126:9:7",
														"nodeType": "YulTypedName",
														"src": "7126:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7141:4:7",
														"nodeType": "YulTypedName",
														"src": "7141:4:7",
														"type": ""
													}
												],
												"src": "6975:419:7"
											},
											{
												"body": {
													"nativeSrc": "7554:288:7",
													"nodeType": "YulBlock",
													"src": "7554:288:7",
													"statements": [
														{
															"nativeSrc": "7564:26:7",
															"nodeType": "YulAssignment",
															"src": "7564:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7576:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7576:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7587:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7587:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7572:3:7"
																},
																"nativeSrc": "7572:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7572:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7564:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7564:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7644:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7644:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7657:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7657:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7668:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7668:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7653:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7653:3:7"
																		},
																		"nativeSrc": "7653:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7653:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7600:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7600:43:7"
																},
																"nativeSrc": "7600:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7600:71:7"
															},
															"nativeSrc": "7600:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7600:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7725:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7725:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7738:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7738:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7749:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7749:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7734:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7734:3:7"
																		},
																		"nativeSrc": "7734:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7734:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7681:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7681:43:7"
																},
																"nativeSrc": "7681:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7681:72:7"
															},
															"nativeSrc": "7681:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7681:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7807:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7807:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7820:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7820:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7831:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7831:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7816:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7816:3:7"
																		},
																		"nativeSrc": "7816:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7816:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7763:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7763:43:7"
																},
																"nativeSrc": "7763:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7763:72:7"
															},
															"nativeSrc": "7763:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7763:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7400:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7510:9:7",
														"nodeType": "YulTypedName",
														"src": "7510:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7522:6:7",
														"nodeType": "YulTypedName",
														"src": "7522:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7530:6:7",
														"nodeType": "YulTypedName",
														"src": "7530:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7538:6:7",
														"nodeType": "YulTypedName",
														"src": "7538:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7549:4:7",
														"nodeType": "YulTypedName",
														"src": "7549:4:7",
														"type": ""
													}
												],
												"src": "7400:442:7"
											},
											{
												"body": {
													"nativeSrc": "7876:152:7",
													"nodeType": "YulBlock",
													"src": "7876:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7893:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7893:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7896:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7886:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7886:6:7"
																},
																"nativeSrc": "7886:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7886:88:7"
															},
															"nativeSrc": "7886:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7886:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7990:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7990:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7993:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7993:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7983:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:7"
																},
																"nativeSrc": "7983:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7983:15:7"
															},
															"nativeSrc": "7983:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7983:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8014:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8014:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8017:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8017:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8007:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:7"
																},
																"nativeSrc": "8007:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8007:15:7"
															},
															"nativeSrc": "8007:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8007:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7848:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7848:180:7"
											},
											{
												"body": {
													"nativeSrc": "8078:147:7",
													"nodeType": "YulBlock",
													"src": "8078:147:7",
													"statements": [
														{
															"nativeSrc": "8088:25:7",
															"nodeType": "YulAssignment",
															"src": "8088:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8111:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8111:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8093:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8093:17:7"
																},
																"nativeSrc": "8093:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8093:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8088:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8088:1:7"
																}
															]
														},
														{
															"nativeSrc": "8122:25:7",
															"nodeType": "YulAssignment",
															"src": "8122:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8145:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8145:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8127:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8127:17:7"
																},
																"nativeSrc": "8127:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8127:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8122:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8122:1:7"
																}
															]
														},
														{
															"nativeSrc": "8156:16:7",
															"nodeType": "YulAssignment",
															"src": "8156:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8167:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8167:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8170:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8170:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8163:3:7"
																},
																"nativeSrc": "8163:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8163:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8156:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:22:7",
																"nodeType": "YulBlock",
																"src": "8196:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8198:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8198:16:7"
																			},
																			"nativeSrc": "8198:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8198:18:7"
																		},
																		"nativeSrc": "8198:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8198:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8188:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8188:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8191:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8185:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8185:2:7"
																},
																"nativeSrc": "8185:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8185:10:7"
															},
															"nativeSrc": "8182:36:7",
															"nodeType": "YulIf",
															"src": "8182:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8034:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8065:1:7",
														"nodeType": "YulTypedName",
														"src": "8065:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8068:1:7",
														"nodeType": "YulTypedName",
														"src": "8068:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8074:3:7",
														"nodeType": "YulTypedName",
														"src": "8074:3:7",
														"type": ""
													}
												],
												"src": "8034:191:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Team tokens are locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806370a08231116100a0578063902d55a51161006f578063902d55a51461029757806395d89b41146102b5578063a9059cbb146102d3578063dd62ed3e14610303578063f2fde38b1461033357610109565b806370a0823114610221578063715018a61461025157806376ae9b2d1461025b5780638da5cb5b1461027957610109565b80631d0806ae116100dc5780631d0806ae1461019757806323b872dd146101b5578063313ce567146101e5578063359289981461020357610109565b806306f660ef1461010d57806306fdde031461012b578063095ea7b31461014957806318160ddd14610179575b5f5ffd5b61011561034f565b6040516101229190610e3c565b60405180910390f35b610133610358565b6040516101409190610ec5565b60405180910390f35b610163600480360381019061015e9190610f6d565b6103e8565b6040516101709190610fc5565b60405180910390f35b61018161040a565b60405161018e9190610e3c565b60405180910390f35b61019f610413565b6040516101ac9190610e3c565b60405180910390f35b6101cf60048036038101906101ca9190610fde565b610419565b6040516101dc9190610fc5565b60405180910390f35b6101ed610473565b6040516101fa9190611049565b60405180910390f35b61020b61047b565b6040516102189190610e3c565b60405180910390f35b61023b60048036038101906102369190611062565b610483565b6040516102489190610e3c565b60405180910390f35b6102596104c8565b005b6102636104db565b6040516102709190610e3c565b60405180910390f35b6102816104e1565b60405161028e919061109c565b60405180910390f35b61029f610509565b6040516102ac9190610e3c565b60405180910390f35b6102bd610518565b6040516102ca9190610ec5565b60405180910390f35b6102ed60048036038101906102e89190610f6d565b6105a8565b6040516102fa9190610fc5565b60405180910390f35b61031d600480360381019061031891906110b5565b610600565b60405161032a9190610e3c565b60405180910390f35b61034d60048036038101906103489190611062565b610682565b005b5f600654905090565b60606003805461036790611120565b80601f016020809104026020016040519081016040528092919081815260200182805461039390611120565b80156103de5780601f106103b5576101008083540402835291602001916103de565b820191905f5260205f20905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b5f5f6103f2610706565b90506103ff81858561070d565b600191505092915050565b5f600254905090565b60065481565b5f60085442101561045f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104569061119a565b60405180910390fd5b61046a84848461071f565b90509392505050565b5f6012905090565b6305a39a8081565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104d061074d565b6104d95f6107d4565b565b60085481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6a7c13bc4b2c133c5600000081565b60606004805461052790611120565b80601f016020809104026020016040519081016040528092919081815260200182805461055390611120565b801561059e5780601f106105755761010080835404028352916020019161059e565b820191905f5260205f20905b81548152906001019060200180831161058157829003601f168201915b5050505050905090565b5f6008544210156105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e59061119a565b60405180910390fd5b6105f88383610897565b905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61068a61074d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106fa575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f1919061109c565b60405180910390fd5b610703816107d4565b50565b5f33905090565b61071a83838360016108b9565b505050565b5f5f610729610706565b9050610736858285610a88565b610741858585610b1b565b60019150509392505050565b610755610706565b73ffffffffffffffffffffffffffffffffffffffff166107736104e1565b73ffffffffffffffffffffffffffffffffffffffff16146107d257610796610706565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107c9919061109c565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f6108a1610706565b90506108ae818585610b1b565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610929575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610920919061109c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610999575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610990919061109c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610a82578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a799190610e3c565b60405180910390a35b50505050565b5f610a938484610600565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b155781811015610b06578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610afd939291906111b8565b60405180910390fd5b610b1484848484035f6108b9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b82919061109c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bfb575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bf2919061109c565b60405180910390fd5b610c06838383610c0b565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c5b578060025f828254610c4f919061121a565b92505081905550610d29565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ce4578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cdb939291906111b8565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d70578060025f8282540392505081905550610dba565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e179190610e3c565b60405180910390a3505050565b5f819050919050565b610e3681610e24565b82525050565b5f602082019050610e4f5f830184610e2d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e9782610e55565b610ea18185610e5f565b9350610eb1818560208601610e6f565b610eba81610e7d565b840191505092915050565b5f6020820190508181035f830152610edd8184610e8d565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f1282610ee9565b9050919050565b610f2281610f08565b8114610f2c575f5ffd5b50565b5f81359050610f3d81610f19565b92915050565b610f4c81610e24565b8114610f56575f5ffd5b50565b5f81359050610f6781610f43565b92915050565b5f5f60408385031215610f8357610f82610ee5565b5b5f610f9085828601610f2f565b9250506020610fa185828601610f59565b9150509250929050565b5f8115159050919050565b610fbf81610fab565b82525050565b5f602082019050610fd85f830184610fb6565b92915050565b5f5f5f60608486031215610ff557610ff4610ee5565b5b5f61100286828701610f2f565b935050602061101386828701610f2f565b925050604061102486828701610f59565b9150509250925092565b5f60ff82169050919050565b6110438161102e565b82525050565b5f60208201905061105c5f83018461103a565b92915050565b5f6020828403121561107757611076610ee5565b5b5f61108484828501610f2f565b91505092915050565b61109681610f08565b82525050565b5f6020820190506110af5f83018461108d565b92915050565b5f5f604083850312156110cb576110ca610ee5565b5b5f6110d885828601610f2f565b92505060206110e985828601610f2f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061113757607f821691505b60208210810361114a576111496110f3565b5b50919050565b7f5465616d20746f6b656e7320617265206c6f636b6564000000000000000000005f82015250565b5f611184601683610e5f565b915061118f82611150565b602082019050919050565b5f6020820190508181035f8301526111b181611178565b9050919050565b5f6060820190506111cb5f83018661108d565b6111d86020830185610e2d565b6111e56040830184610e2d565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61122482610e24565b915061122f83610e24565b9250828201905080821115611247576112466111ed565b5b9291505056fea264697066735822122004b8286629f85c16f999fcdec0296e338c87de5f3522159dfd39aaac252bb23864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x902D55A5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x333 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x76AE9B2D EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1D0806AE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x35928998 EQ PUSH2 0x203 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6F660EF EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x367 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x393 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3F2 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46A DUP5 DUP5 DUP5 PUSH2 0x71F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x5A39A80 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x4D9 PUSH0 PUSH2 0x7D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x7C13BC4B2C133C56000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x553 SWAP1 PUSH2 0x1120 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x575 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x581 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F8 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x68A PUSH2 0x74D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x703 DUP2 PUSH2 0x7D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x71A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x729 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP PUSH2 0x736 DUP6 DUP3 DUP6 PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x741 DUP6 DUP6 DUP6 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x755 PUSH2 0x706 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x773 PUSH2 0x4E1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D2 JUMPI PUSH2 0x796 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8A1 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP PUSH2 0x8AE DUP2 DUP6 DUP6 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x929 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x999 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA82 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA93 DUP5 DUP5 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB15 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB06 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB14 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC06 DUP4 DUP4 DUP4 PUSH2 0xC0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x121A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD29 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD70 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDBA JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE17 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE36 DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4F PUSH0 DUP4 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE97 DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0xEA1 DUP2 DUP6 PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP PUSH2 0xEB1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE6F JUMP JUMPDEST PUSH2 0xEBA DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDD DUP2 DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF12 DUP3 PUSH2 0xEE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF22 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0xF2C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3D DUP2 PUSH2 0xF19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4C DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP2 EQ PUSH2 0xF56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF67 DUP2 PUSH2 0xF43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF83 JUMPI PUSH2 0xF82 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF90 DUP6 DUP3 DUP7 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFA1 DUP6 DUP3 DUP7 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBF DUP2 PUSH2 0xFAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFD8 PUSH0 DUP4 ADD DUP5 PUSH2 0xFB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1002 DUP7 DUP3 DUP8 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1013 DUP7 DUP3 DUP8 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1024 DUP7 DUP3 DUP8 ADD PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1043 DUP2 PUSH2 0x102E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105C PUSH0 DUP4 ADD DUP5 PUSH2 0x103A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1076 PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1084 DUP5 DUP3 DUP6 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1096 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AF PUSH0 DUP4 ADD DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0xEE5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D8 DUP6 DUP3 DUP7 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0xF2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1137 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x10F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5465616D20746F6B656E7320617265206C6F636B656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1184 PUSH1 0x16 DUP4 PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP PUSH2 0x118F DUP3 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B1 DUP2 PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11CB PUSH0 DUP4 ADD DUP7 PUSH2 0x108D JUMP JUMPDEST PUSH2 0x11D8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x11E5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1224 DUP3 PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP PUSH2 0x122F DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1247 JUMPI PUSH2 0x1246 PUSH2 0x11ED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 0x28 PUSH7 0x29F85C16F999FC 0xDE 0xC0 0x29 PUSH15 0x338C87DE5F3522159DFD39AAAC252B 0xB2 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "279:1654:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1813:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:27:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1619:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:55:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;558:30:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:59:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1457:154:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1813:117:0;1861:7;1888:12;;1881:19;;1813:117;:::o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;484:27:0:-;;;;:::o;1619:186::-;1728:4;1387:15;;1368;:34;;1360:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1752:45:::1;1771:6;1779:9;1790:6;1752:18;:45::i;:::-;1745:52;;1619:186:::0;;;;;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;402:55:0:-;445:12;402:55;:::o;2933:116:3:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;558:30:0:-;;;;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;323:59:0:-;362:20;323:59;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;1457:154:0:-;1546:4;1387:15;;1368;:34;;1360:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1570:33:::1;1585:9;1596:6;1570:14;:33::i;:::-;1563:40;;1457:154:::0;;;;:::o;3455:140:3:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8630:128:3:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3244:178:3:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:172::-;6565:24;6561:1;6553:6;6549:14;6542:48;6425:172;:::o;6603:366::-;6745:3;6766:67;6830:2;6825:3;6766:67;:::i;:::-;6759:74;;6842:93;6931:3;6842:93;:::i;:::-;6960:2;6955:3;6951:12;6944:19;;6603:366;;;:::o;6975:419::-;7141:4;7179:2;7168:9;7164:18;7156:26;;7228:9;7222:4;7218:20;7214:1;7203:9;7199:17;7192:47;7256:131;7382:4;7256:131;:::i;:::-;7248:139;;6975:419;;;:::o;7400:442::-;7549:4;7587:2;7576:9;7572:18;7564:26;;7600:71;7668:1;7657:9;7653:17;7644:6;7600:71;:::i;:::-;7681:72;7749:2;7738:9;7734:18;7725:6;7681:72;:::i;:::-;7763;7831:2;7820:9;7816:18;7807:6;7763:72;:::i;:::-;7400:442;;;;;;:::o;7848:180::-;7896:77;7893:1;7886:88;7993:4;7990:1;7983:15;8017:4;8014:1;8007:15;8034:191;8074:3;8093:20;8111:1;8093:20;:::i;:::-;8088:25;;8127:20;8145:1;8127:20;:::i;:::-;8122:25;;8170:1;8167;8163:9;8156:16;;8191:3;8188:1;8185:10;8182:36;;;8198:18;;:::i;:::-;8182:36;8034:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "947800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TEAM_LOCK_PERIOD()": "414",
								"TOTAL_SUPPLY()": "347",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "405",
								"getInitialPrice()": "2456",
								"initialPrice()": "2448",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"teamLockedUntil()": "2492",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 597,
									"end": 1319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 690,
									"end": 700,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "6373796400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4353594400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 784,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 774,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 760,
									"end": 781,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 760,
									"end": 785,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 752,
									"end": 824,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 752,
									"end": 824,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 851,
									"end": 865,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 848,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 835,
									"end": 865,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 835,
									"end": 865,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 893,
									"end": 904,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1CDDA4FACCD0000"
								},
								{
									"begin": 878,
									"end": 890,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 878,
									"end": 904,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 878,
									"end": 904,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 878,
									"end": 904,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 878,
									"end": 904,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 931,
									"end": 973,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 937,
									"end": 947,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 969,
									"end": 972,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 964,
									"end": 966,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 362,
									"end": 382,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7C13BC4B2C133C56000000"
								},
								{
									"begin": 949,
									"end": 966,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 949,
									"end": 966,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 949,
									"end": 966,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 949,
									"end": 966,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 949,
									"end": 966,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 949,
									"end": 966,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 949,
									"end": 966,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 949,
									"end": 972,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 949,
									"end": 972,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 949,
									"end": 972,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 949,
									"end": 972,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 972,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 949,
									"end": 972,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 949,
									"end": 972,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 931,
									"end": 936,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 931,
									"end": 936,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 931,
									"end": 936,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 931,
									"end": 973,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 931,
									"end": 973,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 931,
									"end": 973,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 931,
									"end": 973,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 931,
									"end": 973,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1002,
									"end": 1011,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1015,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1002,
									"end": 1015,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1002,
									"end": 1015,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1021,
									"end": 1034,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1021,
									"end": 1041,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1021,
									"end": 1041,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1021,
									"end": 1041,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1021,
									"end": 1041,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1017,
									"end": 1018,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1017,
									"end": 1041,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1134,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1069,
									"end": 1082,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1083,
									"end": 1084,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1069,
									"end": 1085,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1069,
									"end": 1085,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 1126,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1113,
									"end": 1133,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 1133,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 1133,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1113,
									"end": 1133,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1110,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 1102,
									"end": 1104,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 362,
									"end": 382,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7C13BC4B2C133C56000000"
								},
								{
									"begin": 1087,
									"end": 1104,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1087,
									"end": 1104,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1104,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1104,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1087,
									"end": 1104,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1104,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1087,
									"end": 1104,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1110,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1087,
									"end": 1110,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1110,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1110,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1087,
									"end": 1110,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1110,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1087,
									"end": 1110,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1133,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1087,
									"end": 1133,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1133,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1133,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1087,
									"end": 1133,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1133,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1087,
									"end": 1133,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1068,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1063,
									"end": 1068,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1063,
									"end": 1068,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1134,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1063,
									"end": 1134,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1134,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1063,
									"end": 1134,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1063,
									"end": 1134,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1046,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1046,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1046,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1043,
									"end": 1046,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1046,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1046,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1046,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1159,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1169,
									"end": 1214,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1183,
									"end": 1187,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1210,
									"end": 1213,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 1205,
									"end": 1207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 362,
									"end": 382,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7C13BC4B2C133C56000000"
								},
								{
									"begin": 1190,
									"end": 1207,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1190,
									"end": 1207,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1207,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1207,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1190,
									"end": 1207,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1207,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1190,
									"end": 1207,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1213,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1190,
									"end": 1213,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1213,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1213,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1190,
									"end": 1213,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1213,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1190,
									"end": 1213,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1169,
									"end": 1174,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1169,
									"end": 1174,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1169,
									"end": 1174,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1169,
									"end": 1214,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1169,
									"end": 1214,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1169,
									"end": 1214,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1169,
									"end": 1214,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1214,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 445,
									"end": 457,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "5A39A80"
								},
								{
									"begin": 1261,
									"end": 1276,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 1295,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1261,
									"end": 1295,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 1295,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 1295,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1261,
									"end": 1295,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 1295,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1261,
									"end": 1295,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1243,
									"end": 1258,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1243,
									"end": 1295,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1243,
									"end": 1295,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1243,
									"end": 1295,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1243,
									"end": 1295,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 597,
									"end": 1319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 279,
									"end": 1933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3382,
									"end": 3388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3431,
									"end": 3433,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3419,
									"end": 3428,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3417,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3429,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3402,
									"end": 3434,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3437,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3578,
									"end": 3579,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 3576,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3563,
									"end": 3580,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3557,
									"end": 3581,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3608,
									"end": 3626,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3600,
									"end": 3606,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3597,
									"end": 3627,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3630,
									"end": 3709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 3816,
									"end": 3823,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3813,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3805,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3792,
									"end": 3814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3735,
									"end": 3824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3528,
									"end": 3834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3287,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3899,
									"end": 3905,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3933,
									"end": 3938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3847,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4000,
									"end": 4077,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3997,
									"end": 3998,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3990,
									"end": 4078,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4094,
									"end": 4095,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4087,
									"end": 4102,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4121,
									"end": 4125,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4118,
									"end": 4119,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4111,
									"end": 4126,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4182,
									"end": 4188,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4219,
									"end": 4220,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4209,
									"end": 4221,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4267,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4260,
									"end": 4264,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 4268,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4305,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4343,
									"end": 4347,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4335,
									"end": 4341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4331,
									"end": 4348,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4407,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4397,
									"end": 4403,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4394,
									"end": 4408,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4374,
									"end": 4392,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4371,
									"end": 4409,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 4424,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4189,
									"end": 4458,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4138,
									"end": 4458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4513,
									"end": 4517,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4536,
									"end": 4539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4559,
									"end": 4562,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4556,
									"end": 4557,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4549,
									"end": 4563,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4593,
									"end": 4597,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4590,
									"end": 4591,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4464,
									"end": 4605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4648,
									"end": 4654,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4695,
									"end": 4697,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4690,
									"end": 4692,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4683,
									"end": 4688,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4679,
									"end": 4693,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4675,
									"end": 4698,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4611,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4762,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4804,
									"end": 4809,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 4810,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 4898,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4943,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4930,
									"end": 4940,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4926,
									"end": 4944,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 4995,
									"end": 5061,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4984,
									"end": 4993,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4965,
									"end": 5062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5113,
									"end": 5121,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5102,
									"end": 5111,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 5083,
									"end": 5122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5160,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5149,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5140,
									"end": 5161,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5194,
									"end": 5202,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5190,
									"end": 5209,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5183,
									"end": 5188,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5180,
									"end": 5210,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 5216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5266,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5288,
									"end": 5293,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5222,
									"end": 5299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5336,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5354,
									"end": 5359,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5305,
									"end": 5365,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5430,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5481,
									"end": 5505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 5472,
									"end": 5506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5454,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5371,
									"end": 5513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5562,
									"end": 5565,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5583,
									"end": 5588,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5519,
									"end": 5594,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 5741,
									"end": 5748,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5710,
									"end": 5749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5844,
									"end": 5860,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 5820,
									"end": 5861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5812,
									"end": 5818,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5799,
									"end": 5810,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 5771,
									"end": 5862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5765,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5758,
									"end": 5863,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 5869,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5920,
									"end": 5923,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5941,
									"end": 5942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5934,
									"end": 5942,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5934,
									"end": 5942,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 5948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 6031,
									"end": 6063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 6130,
									"end": 6136,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6122,
									"end": 6128,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6116,
									"end": 6120,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 6072,
									"end": 6137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6007,
									"end": 6143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6226,
									"end": 6229,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6219,
									"end": 6224,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6216,
									"end": 6230,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 6280,
									"end": 6319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6253,
									"end": 6254,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6246,
									"end": 6251,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6242,
									"end": 6255,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6442,
									"end": 6444,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6437,
									"end": 6440,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6434,
									"end": 6445,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 6508,
									"end": 6513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 6476,
									"end": 6514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 6578,
									"end": 6588,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 6560,
									"end": 6589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6550,
									"end": 6558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6546,
									"end": 6590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6743,
									"end": 6745,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6728,
									"end": 6746,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6764,
									"end": 6772,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 6861,
									"end": 6864,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 6843,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6833,
									"end": 6841,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6866,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 6827,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 6787,
									"end": 6867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6341,
									"end": 6884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6944,
									"end": 6952,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6994,
									"end": 6999,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6988,
									"end": 6992,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6984,
									"end": 7000,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7057,
									"end": 7063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7134,
									"end": 7140,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7126,
									"end": 7131,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7124,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7119,
									"end": 7132,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 7090,
									"end": 7141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7086,
									"end": 7142,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7171,
									"end": 7175,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7165,
									"end": 7169,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7161,
									"end": 7176,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7013,
									"end": 7182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 7434,
									"end": 7437,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7428,
									"end": 7432,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 7409,
									"end": 7438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7471,
									"end": 7474,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7469,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7464,
									"end": 7475,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7458,
									"end": 7462,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7476,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7482,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 7637,
									"end": 7640,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 7604,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7706,
									"end": 7724,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7698,
									"end": 7704,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7695,
									"end": 7725,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7728,
									"end": 7746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 7804,
									"end": 7808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7798,
									"end": 7809,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 7772,
									"end": 7810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 7917,
									"end": 7923,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7903,
									"end": 7907,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 7857,
									"end": 7924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7951,
									"end": 7952,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7975,
									"end": 7979,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8007,
									"end": 8009,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7999,
									"end": 8005,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7996,
									"end": 8010,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8024,
									"end": 8025,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8681,
									"end": 8682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8698,
									"end": 8704,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8747,
									"end": 8756,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8742,
									"end": 8745,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 8757,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8732,
									"end": 8758,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8858,
									"end": 8864,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8851,
									"end": 8856,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 8798,
									"end": 8865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8792,
									"end": 8796,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8866,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8654,
									"end": 8876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8071,
									"end": 8075,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8067,
									"end": 8076,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8059,
									"end": 8065,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8055,
									"end": 8077,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 8137,
									"end": 8141,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 8105,
									"end": 8142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8164,
									"end": 8165,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8192,
									"end": 8199,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8189,
									"end": 8190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8186,
									"end": 8200,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8271,
									"end": 8280,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8266,
									"end": 8269,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8262,
									"end": 8281,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8256,
									"end": 8282,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 8283,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8322,
									"end": 8323,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8314,
									"end": 8320,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8310,
									"end": 8324,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8371,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8358,
									"end": 8367,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8354,
									"end": 8372,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8215,
									"end": 8219,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8212,
									"end": 8213,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8208,
									"end": 8220,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8420,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8405,
									"end": 8412,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8402,
									"end": 8421,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8472,
									"end": 8481,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8467,
									"end": 8470,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8463,
									"end": 8482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8457,
									"end": 8483,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 8557,
									"end": 8561,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8549,
									"end": 8555,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8545,
									"end": 8562,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8534,
									"end": 8543,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 8515,
									"end": 8563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8507,
									"end": 8513,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8500,
									"end": 8564,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8578,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8624,
									"end": 8625,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8620,
									"end": 8621,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8612,
									"end": 8618,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8608,
									"end": 8622,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8604,
									"end": 8626,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8598,
									"end": 8602,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8591,
									"end": 8627,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7487,
									"end": 8882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 8993,
									"end": 8998,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 8975,
									"end": 8999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 8973,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8963,
									"end": 9000,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 9006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9105,
									"end": 9109,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9143,
									"end": 9145,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9132,
									"end": 9141,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9128,
									"end": 9146,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 9224,
									"end": 9225,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9213,
									"end": 9222,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9209,
									"end": 9226,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9200,
									"end": 9206,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 9156,
									"end": 9227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9234,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9335,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9358,
									"end": 9364,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9353,
									"end": 9356,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9346,
									"end": 9365,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9398,
									"end": 9402,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9393,
									"end": 9396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9389,
									"end": 9403,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9415,
									"end": 9636,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 9415,
									"end": 9636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9555,
									"end": 9589,
									"name": "PUSH",
									"source": 7,
									"value": "4174206C65617374206F6E65207465616D206164647265737320726571756972"
								},
								{
									"begin": 9551,
									"end": 9552,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9543,
									"end": 9549,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9539,
									"end": 9553,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9532,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9624,
									"end": 9628,
									"name": "PUSH",
									"source": 7,
									"value": "6564000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9619,
									"end": 9621,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9611,
									"end": 9617,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9622,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9600,
									"end": 9629,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9415,
									"end": 9636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9415,
									"end": 9636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9642,
									"end": 10008,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 9642,
									"end": 10008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9784,
									"end": 9787,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9805,
									"end": 9872,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 9869,
									"end": 9871,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 9864,
									"end": 9867,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9805,
									"end": 9872,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 9805,
									"end": 9872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9805,
									"end": 9872,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 9805,
									"end": 9872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9798,
									"end": 9872,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9798,
									"end": 9872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9881,
									"end": 9974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 9970,
									"end": 9973,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9881,
									"end": 9974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 9881,
									"end": 9974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9881,
									"end": 9974,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 9881,
									"end": 9974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9999,
									"end": 10001,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9994,
									"end": 9997,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9990,
									"end": 10002,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9983,
									"end": 10002,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9983,
									"end": 10002,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9642,
									"end": 10008,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9642,
									"end": 10008,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9642,
									"end": 10008,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9642,
									"end": 10008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10014,
									"end": 10433,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10014,
									"end": 10433,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10180,
									"end": 10184,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10218,
									"end": 10220,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10207,
									"end": 10216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10203,
									"end": 10221,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10195,
									"end": 10221,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10195,
									"end": 10221,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10267,
									"end": 10276,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10261,
									"end": 10265,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10257,
									"end": 10277,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 10253,
									"end": 10254,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10242,
									"end": 10251,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10238,
									"end": 10255,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10278,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10295,
									"end": 10426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 10421,
									"end": 10425,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10295,
									"end": 10426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 10295,
									"end": 10426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10295,
									"end": 10426,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 10295,
									"end": 10426,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10287,
									"end": 10426,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10287,
									"end": 10426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10014,
									"end": 10433,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10014,
									"end": 10433,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10014,
									"end": 10433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10014,
									"end": 10433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10439,
									"end": 10619,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 10439,
									"end": 10619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10487,
									"end": 10564,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10484,
									"end": 10485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10477,
									"end": 10565,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10584,
									"end": 10588,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 10581,
									"end": 10582,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 10574,
									"end": 10589,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10608,
									"end": 10612,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 10605,
									"end": 10606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10598,
									"end": 10613,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 11035,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 10625,
									"end": 11035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10665,
									"end": 10672,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10688,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 10706,
									"end": 10707,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10688,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 10688,
									"end": 10708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10688,
									"end": 10708,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 10688,
									"end": 10708,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 10708,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 10708,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10722,
									"end": 10742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 10740,
									"end": 10741,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10722,
									"end": 10742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 10722,
									"end": 10742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10722,
									"end": 10742,
									"name": "tag",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 10722,
									"end": 10742,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10717,
									"end": 10742,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10717,
									"end": 10742,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10777,
									"end": 10778,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10774,
									"end": 10775,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10770,
									"end": 10779,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10799,
									"end": 10829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 10817,
									"end": 10828,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10799,
									"end": 10829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 10799,
									"end": 10829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10799,
									"end": 10829,
									"name": "tag",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 10799,
									"end": 10829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10788,
									"end": 10829,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10788,
									"end": 10829,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10978,
									"end": 10979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10969,
									"end": 10976,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10965,
									"end": 10980,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 10962,
									"end": 10963,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10959,
									"end": 10981,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 10939,
									"end": 10940,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10932,
									"end": 10941,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10912,
									"end": 10995,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 10889,
									"end": 11028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 10889,
									"end": 11028,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11008,
									"end": 11026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 11008,
									"end": 11026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 11008,
									"end": 11026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11008,
									"end": 11026,
									"name": "tag",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 11008,
									"end": 11026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10889,
									"end": 11028,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 10889,
									"end": 11028,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10673,
									"end": 11035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 11035,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 11035,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 11035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 11035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 11035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11041,
									"end": 11221,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 11041,
									"end": 11221,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11089,
									"end": 11166,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11086,
									"end": 11087,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11079,
									"end": 11167,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11186,
									"end": 11190,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 11183,
									"end": 11184,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 11176,
									"end": 11191,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11210,
									"end": 11214,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 11207,
									"end": 11208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11200,
									"end": 11215,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 11227,
									"end": 11412,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 11227,
									"end": 11412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11267,
									"end": 11268,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11284,
									"end": 11304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 11302,
									"end": 11303,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11284,
									"end": 11304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 11284,
									"end": 11304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11284,
									"end": 11304,
									"name": "tag",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 11284,
									"end": 11304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11279,
									"end": 11304,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11279,
									"end": 11304,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11318,
									"end": 11338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 11336,
									"end": 11337,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11318,
									"end": 11338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 11318,
									"end": 11338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11318,
									"end": 11338,
									"name": "tag",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 11318,
									"end": 11338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11313,
									"end": 11338,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11313,
									"end": 11338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11357,
									"end": 11358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11347,
									"end": 11382,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 11347,
									"end": 11382,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11362,
									"end": 11380,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 11362,
									"end": 11380,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 11362,
									"end": 11380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11362,
									"end": 11380,
									"name": "tag",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 11362,
									"end": 11380,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11347,
									"end": 11382,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 11347,
									"end": 11382,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11404,
									"end": 11405,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11401,
									"end": 11402,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11397,
									"end": 11406,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11406,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11406,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11227,
									"end": 11412,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11227,
									"end": 11412,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11227,
									"end": 11412,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11227,
									"end": 11412,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11227,
									"end": 11412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11418,
									"end": 11598,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 11418,
									"end": 11598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11466,
									"end": 11543,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11463,
									"end": 11464,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11456,
									"end": 11544,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11563,
									"end": 11567,
									"name": "PUSH",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 11560,
									"end": 11561,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 11553,
									"end": 11568,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11587,
									"end": 11591,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 11584,
									"end": 11585,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11577,
									"end": 11592,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 11604,
									"end": 11795,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 11604,
									"end": 11795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11644,
									"end": 11647,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11663,
									"end": 11683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 11681,
									"end": 11682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11663,
									"end": 11683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 11663,
									"end": 11683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11663,
									"end": 11683,
									"name": "tag",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 11663,
									"end": 11683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11658,
									"end": 11683,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11658,
									"end": 11683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11697,
									"end": 11717,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 11715,
									"end": 11716,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11697,
									"end": 11717,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 11697,
									"end": 11717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11697,
									"end": 11717,
									"name": "tag",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 11697,
									"end": 11717,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11692,
									"end": 11717,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11692,
									"end": 11717,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11740,
									"end": 11741,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11737,
									"end": 11738,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11733,
									"end": 11742,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11726,
									"end": 11742,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11726,
									"end": 11742,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11761,
									"end": 11764,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 11758,
									"end": 11759,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11755,
									"end": 11765,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11752,
									"end": 11788,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11752,
									"end": 11788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 11752,
									"end": 11788,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11768,
									"end": 11786,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11768,
									"end": 11786,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 11768,
									"end": 11786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11768,
									"end": 11786,
									"name": "tag",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11768,
									"end": 11786,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11752,
									"end": 11788,
									"name": "tag",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 11752,
									"end": 11788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11604,
									"end": 11795,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11604,
									"end": 11795,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11604,
									"end": 11795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11604,
									"end": 11795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11604,
									"end": 11795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11801,
									"end": 11919,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 11801,
									"end": 11919,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11888,
									"end": 11912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11906,
									"end": 11911,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11888,
									"end": 11912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 11888,
									"end": 11912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11888,
									"end": 11912,
									"name": "tag",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11888,
									"end": 11912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11883,
									"end": 11886,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11876,
									"end": 11913,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11801,
									"end": 11919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11801,
									"end": 11919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11801,
									"end": 11919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12074,
									"end": 12078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12112,
									"end": 12114,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 12101,
									"end": 12110,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12097,
									"end": 12115,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12089,
									"end": 12115,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12089,
									"end": 12115,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12125,
									"end": 12196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 12193,
									"end": 12194,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12182,
									"end": 12191,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12178,
									"end": 12195,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12169,
									"end": 12175,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 12125,
									"end": 12196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 12125,
									"end": 12196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12125,
									"end": 12196,
									"name": "tag",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 12125,
									"end": 12196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12206,
									"end": 12278,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 12274,
									"end": 12276,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12263,
									"end": 12272,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12259,
									"end": 12277,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12250,
									"end": 12256,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 12206,
									"end": 12278,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 12206,
									"end": 12278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12206,
									"end": 12278,
									"name": "tag",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 12206,
									"end": 12278,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12288,
									"end": 12360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 12356,
									"end": 12358,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 12345,
									"end": 12354,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12341,
									"end": 12359,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12332,
									"end": 12338,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12288,
									"end": 12360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 12288,
									"end": 12360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12288,
									"end": 12360,
									"name": "tag",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 12288,
									"end": 12360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11925,
									"end": 12367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12373,
									"end": 12595,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 12373,
									"end": 12595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12466,
									"end": 12470,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12504,
									"end": 12506,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12493,
									"end": 12502,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12489,
									"end": 12507,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12481,
									"end": 12507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12481,
									"end": 12507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12517,
									"end": 12588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 12585,
									"end": 12586,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12574,
									"end": 12583,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12570,
									"end": 12587,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12561,
									"end": 12567,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12517,
									"end": 12588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 12517,
									"end": 12588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12517,
									"end": 12588,
									"name": "tag",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 12517,
									"end": 12588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12373,
									"end": 12595,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12373,
									"end": 12595,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12373,
									"end": 12595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12373,
									"end": 12595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12373,
									"end": 12595,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 1933,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004b8286629f85c16f999fcdec0296e338c87de5f3522159dfd39aaac252bb23864736f6c634300081e0033",
									".code": [
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "76AE9B2D"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "1D0806AE"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "1D0806AE"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "35928998"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "6F660EF"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 1933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1813,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1813,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 484,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 484,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 484,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1619,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1619,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1619,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 402,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 402,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 558,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 558,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 558,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 323,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 323,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 323,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1457,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1457,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1457,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 484,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1360,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1771,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1788,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1796,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1752,
											"end": 1797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1752,
											"end": 1797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 402,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "5A39A80"
										},
										{
											"begin": 402,
											"end": 457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 558,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 558,
											"end": 588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "7C13BC4B2C133C56000000"
										},
										{
											"begin": 323,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1360,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1360,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1585,
											"end": 1594,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1602,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1570,
											"end": 1603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1570,
											"end": 1603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6597,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6425,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6589,
											"name": "PUSH",
											"source": 7,
											"value": "5465616D20746F6B656E7320617265206C6F636B656400000000000000000000"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6542,
											"end": 6590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6969,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6603,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6745,
											"end": 6748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 6830,
											"end": 6832,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6825,
											"end": 6828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 6766,
											"end": 6833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 6766,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6842,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6935,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6842,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 6962,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6955,
											"end": 6958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 7394,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6975,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7141,
											"end": 7145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7181,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7168,
											"end": 7177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7156,
											"end": 7182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7156,
											"end": 7182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7238,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7203,
											"end": 7212,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7382,
											"end": 7386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7256,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7387,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7256,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 7394,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 7394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 7394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7587,
											"end": 7589,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7668,
											"end": 7669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7650,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7600,
											"end": 7671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7671,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7600,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7749,
											"end": 7751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7738,
											"end": 7747,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7725,
											"end": 7731,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7681,
											"end": 7753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7753,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7681,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7831,
											"end": 7833,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7816,
											"end": 7834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7813,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7763,
											"end": 7835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7835,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7763,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 8028,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 7848,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7973,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7893,
											"end": 7894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7983,
											"end": 7998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8022,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8225,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8034,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8111,
											"end": 8112,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8093,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8093,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8127,
											"end": 8147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8156,
											"end": 8172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8156,
											"end": 8172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8182,
											"end": 8218,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8182,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8182,
											"end": 8218,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 8198,
											"end": 8216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8182,
											"end": 8218,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8182,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8225,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/CCtoken/ccToken.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TEAM_LOCK_PERIOD()": "35928998",
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getInitialPrice()": "06f660ef",
							"initialPrice()": "1d0806ae",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"teamLockedUntil()": "76ae9b2d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_teamAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TEAM_LOCK_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInitialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCtoken/ccToken.sol\":\"CSYDToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCtoken/ccToken.sol\":{\"keccak256\":\"0xe571715be7c2f8da97964fd209af6ee8ed516a717278ab25482d1f39346b3b02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab2d5c6203cbf88cc337626170017b4ffbafa33a4ab0e213919108c86432f6\",\"dweb:/ipfs/QmXLs4xyvMuhYD169eUFkNUNQsbW1VapdHUC2PoGNNA8Nj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x5aad1745bddba11752c3962464a3b12e0af079310cc22d1f43f0388ae1aaf8db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://577fad916bfdfe89aadf2685322fec7562cb0ed87722923085213cd9f85d7b79\",\"dweb:/ipfs/QmSM3J6PjrAUyEoNbdhq1ECZLXczKdCTzZTBUieKHsBYEL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 487,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 493,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 495,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 497,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 499,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 188,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "initialPrice",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "teamAddresses",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/CCtoken/ccToken.sol:CSYDToken",
								"label": "teamLockedUntil",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 188,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x5aad1745bddba11752c3962464a3b12e0af079310cc22d1f43f0388ae1aaf8db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://577fad916bfdfe89aadf2685322fec7562cb0ed87722923085213cd9f85d7b79\",\"dweb:/ipfs/QmSM3J6PjrAUyEoNbdhq1ECZLXczKdCTzZTBUieKHsBYEL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 487,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 493,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 495,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 497,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 499,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CCtoken/ccToken.sol": {
				"ast": {
					"absolutePath": "contracts/CCtoken/ccToken.sol",
					"exportedSymbols": {
						"CSYDToken": [
							179
						],
						"Context": [
							1113
						],
						"ERC20": [
							979
						],
						"IERC20": [
							1057
						],
						"IERC20Errors": [
							369
						],
						"IERC20Metadata": [
							1083
						],
						"Ownable": [
							327
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 980,
							"src": "60:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 328,
							"src": "170:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nameLocations": [
											"301:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "301:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "301:5:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nameLocations": [
											"308:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 327,
										"src": "308:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "308:7:0"
								}
							],
							"canonicalName": "CSYDToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 179,
							"linearizedBaseContracts": [
								179,
								327,
								979,
								369,
								1083,
								1057,
								1113
							],
							"name": "CSYDToken",
							"nameLocation": "288:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 14,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "347:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 179,
									"src": "323:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_150000000000000000000000000_by_1",
											"typeString": "int_const 150000000000000000000000000"
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3135305f3030305f303030",
											"id": 9,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "362:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_150000000_by_1",
												"typeString": "int_const 150000000"
											},
											"value": "150_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 12,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 10,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "376:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 11,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "380:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "376:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "362:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_150000000000000000000000000_by_1",
											"typeString": "int_const 150000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "35928998",
									"id": 19,
									"mutability": "constant",
									"name": "TEAM_LOCK_PERIOD",
									"nameLocation": "426:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 179,
									"src": "402:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_94608000_by_1",
											"typeString": "int_const 94608000"
										},
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33",
											"id": 16,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "445:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "333635",
											"id": 17,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "449:8:0",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_31536000_by_1",
												"typeString": "int_const 31536000"
											},
											"value": "365"
										},
										"src": "445:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_94608000_by_1",
											"typeString": "int_const 94608000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0806ae",
									"id": 21,
									"mutability": "mutable",
									"name": "initialPrice",
									"nameLocation": "499:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 179,
									"src": "484:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "teamAddresses",
									"nameLocation": "538:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 179,
									"src": "520:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 23,
										"nodeType": "ArrayTypeName",
										"src": "520:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "76ae9b2d",
									"id": 26,
									"mutability": "mutable",
									"name": "teamLockedUntil",
									"nameLocation": "573:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 179,
									"src": "558:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "558:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "741:578:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 41,
																	"name": "_teamAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "760:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "775:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "760:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "784:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e65207465616d2061646472657373207265717569726564",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "787:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6",
																"typeString": "literal_string \"At least one team address required\""
															},
															"value": "At least one team address required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16e596427d67bb9c0351fbbb6b567a93bc8c2f28e68fbcfcc6960a296b783ed6",
																"typeString": "literal_string \"At least one team address required\""
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "752:72:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "teamAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "835:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "_teamAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "851:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "835:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "835:30:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 52,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "878:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_130000000000000000_by_1",
															"typeString": "int_const 130000000000000000"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3133",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_13_by_1",
																"typeString": "int_const 13"
															},
															"value": "13"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "898:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3136",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "902:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "898:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															}
														},
														"src": "893:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_130000000000000000_by_1",
															"typeString": "int_const 130000000000000000"
														}
													},
													"src": "878:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "878:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 61,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "937:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "941:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "937:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 63,
																	"name": "TOTAL_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "949:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3830",
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "964:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_80_by_1",
																		"typeString": "int_const 80"
																	},
																	"value": "80"
																},
																"src": "949:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "969:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "949:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 60,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "931:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "931:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "931:42:0"
											},
											{
												"body": {
													"id": 95,
													"nodeType": "Block",
													"src": "1048:111:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 82,
																			"name": "teamAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "1069:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 84,
																		"indexExpression": {
																			"id": 83,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 71,
																			"src": "1083:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1069:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 89,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 87,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 85,
																					"name": "TOTAL_SUPPLY",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 14,
																					"src": "1087:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3130",
																					"id": 86,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1102:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"src": "1087:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 88,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1107:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "1087:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"expression": {
																				"id": 90,
																				"name": "teamAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "1113:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 91,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1127:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "1113:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1087:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 81,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "1063:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1063:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 94,
															"nodeType": "ExpressionStatement",
															"src": "1063:71:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 74,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1017:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 75,
															"name": "teamAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "1021:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1035:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1021:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1017:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 96,
												"initializationExpression": {
													"assignments": [
														71
													],
													"declarations": [
														{
															"constant": false,
															"id": 71,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1010:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 96,
															"src": "1002:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 70,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 73,
													"initialValue": {
														"hexValue": "30",
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1014:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1002:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1043:3:0",
														"subExpression": {
															"id": 78,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1043:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 80,
													"nodeType": "ExpressionStatement",
													"src": "1043:3:0"
												},
												"nodeType": "ForStatement",
												"src": "997:162:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 100,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1183:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSYDToken_$179",
																		"typeString": "contract CSYDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSYDToken_$179",
																		"typeString": "contract CSYDToken"
																	}
																],
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 98,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1175:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1175:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 102,
																	"name": "TOTAL_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1190:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1205:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1190:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1210:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1190:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 97,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1169:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1169:45:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 109,
														"name": "teamLockedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1243:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 110,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1261:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1267:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1261:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 112,
															"name": "TEAM_LOCK_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1279:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1261:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1243:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1243:52:0"
											}
										]
									},
									"id": 117,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "63737964",
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6afc605e4f8719bc0a187cf8d78914262783142cbf1f3f1721a8f28c946c7558",
														"typeString": "literal_string \"csyd\""
													},
													"value": "csyd"
												},
												{
													"hexValue": "43535944",
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "665:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ac5ae6287f650494bec9ff973d0959699e5e01f280b630aed29e40424bc08e21",
														"typeString": "literal_string \"CSYD\""
													},
													"value": "CSYD"
												}
											],
											"id": 34,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 31,
												"name": "ERC20",
												"nameLocations": [
													"651:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 979,
												"src": "651:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "651:21:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 36,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "690:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "694:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "690:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 38,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 35,
												"name": "Ownable",
												"nameLocations": [
													"682:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "682:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "682:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_teamAddresses",
												"nameLocation": "626:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "609:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "609:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "609:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:33:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:0:0"
									},
									"scope": 179,
									"src": "597:722:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1349:100:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 120,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1368:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1374:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1368:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 122,
																"name": "teamLockedUntil",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1387:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1368:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5465616d20746f6b656e7320617265206c6f636b6564",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1404:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
																"typeString": "literal_string \"Team tokens are locked\""
															},
															"value": "Team tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e88474141b06d7af461065e7e71cdee5449b2b6ad135df1aa991f7d33dd58aaf",
																"typeString": "literal_string \"Team tokens are locked\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1360:69:0"
											},
											{
												"id": 127,
												"nodeType": "PlaceholderStatement",
												"src": "1440:1:0"
											}
										]
									},
									"id": 129,
									"name": "teamLocked",
									"nameLocation": "1336:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:2:0"
									},
									"src": "1327:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										589
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1552:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1585:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 141,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1570:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CSYDToken_$179_$",
																"typeString": "type(contract super CSYDToken)"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1576:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 589,
														"src": "1570:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 140,
												"id": 146,
												"nodeType": "Return",
												"src": "1563:40:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "teamLocked",
												"nameLocations": [
													"1526:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 129,
												"src": "1526:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1526:10:0"
										}
									],
									"name": "transfer",
									"nameLocation": "1466:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1517:8:0"
									},
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1483:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1475:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:35:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1546:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:6:0"
									},
									"scope": 179,
									"src": "1457:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1734:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1771:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1779:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 166,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 162,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1752:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CSYDToken_$179_$",
																"typeString": "type(contract super CSYDToken)"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1758:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 662,
														"src": "1752:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1752:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 161,
												"id": 168,
												"nodeType": "Return",
												"src": "1745:52:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 157,
												"name": "teamLocked",
												"nameLocations": [
													"1708:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 129,
												"src": "1708:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1708:10:0"
										}
									],
									"name": "transferFrom",
									"nameLocation": "1628:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 156,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1699:8:0"
									},
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1649:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1665:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1657:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1684:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:51:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:6:0"
									},
									"scope": 179,
									"src": "1619:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1870:60:0",
										"statements": [
											{
												"expression": {
													"id": 175,
													"name": "initialPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 21,
													"src": "1888:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "1881:19:0"
											}
										]
									},
									"functionSelector": "06f660ef",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInitialPrice",
									"nameLocation": "1822:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1837:2:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:9:0"
									},
									"scope": 179,
									"src": "1813:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 180,
							"src": "279:1654:0",
							"usedErrors": [
								193,
								198,
								339,
								344,
								349,
								358,
								363,
								368
							],
							"usedEvents": [
								204,
								991,
								1000
							]
						}
					],
					"src": "33:1900:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1113
						],
						"Ownable": [
							327
						]
					},
					"id": 328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 328,
							"sourceUnit": 1114,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 182,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1113,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 185,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1113,
										"src": "692:7:1"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327,
								1113
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 187,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 193,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 198,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 204,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 223,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 217,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 216,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 222,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 225,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 230,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 327,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 233,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 236,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 238,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 244,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 188,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 243,
												"id": 245,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 327,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 253,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 262,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 261,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 257,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 256,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 260,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 327,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 271,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 270,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 238,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 327,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 286,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 287,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 293,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 292,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 298,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 301,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 284,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 283,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 238,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 327,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 312,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"id": 314,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 188,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 317,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 321,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 327,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 328,
							"src": "663:2438:1",
							"usedErrors": [
								193,
								198
							],
							"usedEvents": [
								204
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							464
						],
						"IERC20Errors": [
							369
						],
						"IERC721Errors": [
							417
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 330,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 369,
							"linearizedBaseContracts": [
								369
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 339,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 344,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 349,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 358,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 363,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 368,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 465,
							"src": "280:1764:2",
							"usedErrors": [
								339,
								344,
								349,
								358,
								363,
								368
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 370,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 417,
							"linearizedBaseContracts": [
								417
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 375,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 380,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 389,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 394,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 399,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 406,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 411,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 416,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 465,
							"src": "2190:2092:2",
							"usedErrors": [
								375,
								380,
								389,
								394,
								399,
								406,
								411,
								416
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 418,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 429,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 434,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 439,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 446,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 451,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 456,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 463,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 465,
							"src": "4430:2107:2",
							"usedErrors": [
								429,
								434,
								439,
								446,
								451,
								456,
								463
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1113
						],
						"ERC20": [
							979
						],
						"IERC20": [
							1057
						],
						"IERC20Errors": [
							369
						],
						"IERC20Metadata": [
							1083
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 1058,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1057,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 1084,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1083,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 1114,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1113,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 465,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 473,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 369,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 476,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1113,
										"src": "1133:7:3"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 478,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1057,
										"src": "1142:6:3"
									},
									"id": 479,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 480,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1083,
										"src": "1150:14:3"
									},
									"id": 481,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 482,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 369,
										"src": "1166:12:3"
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979,
								369,
								1083,
								1057,
								1113
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 486,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 484,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 493,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 492,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 488,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 491,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 489,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 490,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 494,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 497,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 496,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 499,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 498,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 507,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 508,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 516,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 979,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1070
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 522,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 497,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 521,
												"id": 523,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 979,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 531,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 499,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 530,
												"id": 532,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 979,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1082
									],
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 539,
												"id": 541,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 537,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 979,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1006
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "2864:36:3",
										"statements": [
											{
												"expression": {
													"id": 549,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "2881:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 548,
												"id": 550,
												"nodeType": "Return",
												"src": "2874:19:3"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "2855:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:3"
									},
									"scope": 979,
									"src": "2803:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1014
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "3007:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 560,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3024:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 562,
													"indexExpression": {
														"id": 561,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3034:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 559,
												"id": 563,
												"nodeType": "Return",
												"src": "3017:25:3"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2952:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2998:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:3"
									},
									"scope": 979,
									"src": "2933:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1024
									],
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "3319:103:3",
										"statements": [
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "3329:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 575,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 577,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "3345:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "3377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "3384:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3388:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "3367:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 574,
												"id": 587,
												"nodeType": "Return",
												"src": "3404:11:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3262:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3274:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3313:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:3"
									},
									"scope": 979,
									"src": "3244:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1034
									],
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "3544:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 599,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3561:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 601,
														"indexExpression": {
															"id": 600,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "3573:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 603,
													"indexExpression": {
														"id": 602,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3580:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 604,
												"nodeType": "Return",
												"src": "3554:34:3"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3474:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3489:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:3"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3535:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:3"
									},
									"scope": 979,
									"src": "3455:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1044
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "3981:107:3",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "3991:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 616,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 618,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "4007:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4038:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "4045:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4054:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															870,
															930
														],
														"referencedDeclaration": 870,
														"src": "4029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 615,
												"id": 628,
												"nodeType": "Return",
												"src": "4070:11:3"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3919:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:3"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3975:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:3"
									},
									"scope": 979,
									"src": "3902:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1056
									],
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "4773:151:3",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "4783:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 642,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 644,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "4801:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 648,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "4839:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "4845:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "4854:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4823:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 654,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "4880:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "4886:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "4890:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 653,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "4870:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 641,
												"id": 660,
												"nodeType": "Return",
												"src": "4906:11:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4702:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4716:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4728:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4767:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:3"
									},
									"scope": 979,
									"src": "4680:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "5366:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "5380:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "5376:86:3",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "5400:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 679,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 678,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "5421:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 684,
															"nodeType": "RevertStatement",
															"src": "5414:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5475:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 688,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "5471:86:3",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "5493:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 694,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 693,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "5514:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 699,
															"nodeType": "RevertStatement",
															"src": "5507:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "5580:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 705,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5584:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 702,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "5566:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:3"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "5316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "5330:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "5342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:3"
									},
									"scope": 979,
									"src": "5297:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "5987:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 719,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "6001:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 720,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "6175:362:3",
													"statements": [
														{
															"assignments": [
																731
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 731,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 756,
																	"src": "6189:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 730,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 735,
															"initialValue": {
																"baseExpression": {
																	"id": 732,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "6211:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 734,
																"indexExpression": {
																	"id": 733,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "6221:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 736,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "6244:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "6258:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 746,
															"nodeType": "IfStatement",
															"src": "6240:115:3",
															"trueBody": {
																"id": 745,
																"nodeType": "Block",
																"src": "6265:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 740,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "6315:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 741,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 731,
																					"src": "6321:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 742,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "6334:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 739,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 339,
																				"src": "6290:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 744,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:3"
																	}
																]
															}
														},
														{
															"id": 755,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 747,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 487,
																				"src": "6475:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 749,
																			"indexExpression": {
																				"id": 748,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "6485:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 750,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 731,
																				"src": "6493:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 751,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 716,
																				"src": "6507:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 754,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:3"
																}
															]
														}
													]
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "5997:540:3",
												"trueBody": {
													"id": 729,
													"nodeType": "Block",
													"src": "6021:148:3",
													"statements": [
														{
															"expression": {
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 725,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "6137:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 726,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "6153:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "6551:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 759,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "6766:206:3",
													"statements": [
														{
															"id": 776,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 770,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 487,
																				"src": "6925:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 772,
																			"indexExpression": {
																				"id": 771,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 714,
																				"src": "6935:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 773,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "6942:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 775,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:3"
																}
															]
														}
													]
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "6547:425:3",
												"trueBody": {
													"id": 769,
													"nodeType": "Block",
													"src": "6569:191:3",
													"statements": [
														{
															"id": 768,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 764,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "6714:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 765,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "6730:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 767,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 780,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6996:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "7002:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "7006:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "6987:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "EmitStatement",
												"src": "6982:30:3"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "5929:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "5943:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "5955:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:3"
									},
									"scope": 979,
									"src": "5912:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "7418:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 794,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "7432:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 795,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "7428:91:3",
												"trueBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "7455:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 801,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 800,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7476:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 806,
															"nodeType": "RevertStatement",
															"src": "7469:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "7548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "7557:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:3"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "7377:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "7394:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:3"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:3"
									},
									"scope": 979,
									"src": "7362:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "7944:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 827,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "7958:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 828,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"nodeType": "IfStatement",
												"src": "7954:89:3",
												"trueBody": {
													"id": 840,
													"nodeType": "Block",
													"src": "7981:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 834,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 833,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "8002:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 839,
															"nodeType": "RevertStatement",
															"src": "7995:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "8060:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "8081:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "8052:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:3"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "7903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "7920:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:3"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:3"
									},
									"scope": 979,
									"src": "7888:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "8704:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "8723:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "8730:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "8739:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 862,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															870,
															930
														],
														"referencedDeclaration": 930,
														"src": "8714:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:3"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8663:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8680:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:3"
									},
									"scope": 979,
									"src": "8630:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "9703:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9717:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 883,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "9713:89:3",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "9738:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 889,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 888,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "9759:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "9752:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "9815:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 898,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "9811:90:3",
												"trueBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "9838:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 904,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 903,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "9859:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 909,
															"nodeType": "RevertStatement",
															"src": "9852:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 912,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "9910:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 915,
															"indexExpression": {
																"id": 913,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "9922:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 916,
														"indexExpression": {
															"id": 914,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9929:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 917,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "9940:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:3"
											},
											{
												"condition": {
													"id": 920,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 879,
													"src": "9959:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "9955:76:3",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "9970:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 922,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "9998:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 923,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "10005:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 924,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "10014:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 921,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "9989:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 926,
															"nodeType": "EmitStatement",
															"src": "9984:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9623:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9638:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:3"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:3"
									},
									"scope": 979,
									"src": "9605:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "10408:387:3",
										"statements": [
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "10418:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 943,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "10455:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10462:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 942,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10445:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "10484:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 949,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 948,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "10480:309:3",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "10522:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 954,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "10540:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 955,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "10559:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 964,
															"nodeType": "IfStatement",
															"src": "10536:130:3",
															"trueBody": {
																"id": 963,
																"nodeType": "Block",
																"src": "10566:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 958,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 935,
																					"src": "10618:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 959,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "10627:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 960,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 937,
																					"src": "10645:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 957,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 358,
																				"src": "10591:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 962,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:3"
																	}
																]
															}
														},
														{
															"id": 974,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 966,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 933,
																				"src": "10716:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 967,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 935,
																				"src": "10723:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 968,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 941,
																					"src": "10732:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 969,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 937,
																					"src": "10751:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 965,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				870,
																				930
																			],
																			"referencedDeclaration": 930,
																			"src": "10707:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 973,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "10344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "10359:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "10376:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:3"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:3"
									},
									"scope": 979,
									"src": "10319:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "1106:9691:3",
							"usedErrors": [
								339,
								344,
								349,
								358,
								363,
								368
							],
							"usedEvents": [
								991,
								1000
							]
						}
					],
					"src": "105:10693:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1057
						]
					},
					"id": 1058,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 982,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1057,
							"linearizedBaseContracts": [
								1057
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 991,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1000,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1057,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1057,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1057,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1057,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1057,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1057,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1058,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								991,
								1000
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1057
						],
						"IERC20Metadata": [
							1083
						]
					},
					"id": 1084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1059,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1084,
							"sourceUnit": 1058,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1060,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1057,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1063,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1057,
										"src": "306:6:5"
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1062,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1083,
							"linearizedBaseContracts": [
								1083,
								1057
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1083,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1083,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1079,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1083,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1084,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								991,
								1000
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1113
						]
					},
					"id": 1114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1086,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1113,
							"linearizedBaseContracts": [
								1113
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1091,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1093,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1113,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1100,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1102,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1113,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1108,
												"id": 1110,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1113,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1114,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			}
		}
	}
}